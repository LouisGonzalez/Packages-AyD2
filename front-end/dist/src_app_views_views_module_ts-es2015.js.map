{"version":3,"sources":["./node_modules/rxjs-compat/add/operator/map.js","./node_modules/rxjs-compat/operator/map.js","./node_modules/rxjs/_esm2015/index.js","./node_modules/rxjs/_esm2015/internal/AsyncSubject.js","./node_modules/rxjs/_esm2015/internal/observable/SubscribeOnObservable.js","./node_modules/rxjs/_esm2015/internal/observable/bindCallback.js","./node_modules/rxjs/_esm2015/internal/observable/bindNodeCallback.js","./node_modules/rxjs/_esm2015/internal/observable/fromEventPattern.js","./node_modules/rxjs/_esm2015/internal/observable/generate.js","./node_modules/rxjs/_esm2015/internal/observable/iif.js","./node_modules/rxjs/_esm2015/internal/observable/never.js","./node_modules/rxjs/_esm2015/internal/observable/onErrorResumeNext.js","./node_modules/rxjs/_esm2015/internal/observable/pairs.js","./node_modules/rxjs/_esm2015/internal/observable/partition.js","./node_modules/rxjs/_esm2015/internal/observable/race.js","./node_modules/rxjs/_esm2015/internal/observable/range.js","./node_modules/rxjs/_esm2015/internal/observable/using.js","./node_modules/rxjs/_esm2015/internal/observable/zip.js","./node_modules/rxjs/_esm2015/internal/operators/buffer.js","./node_modules/rxjs/_esm2015/internal/operators/bufferCount.js","./node_modules/rxjs/_esm2015/internal/operators/bufferTime.js","./node_modules/rxjs/_esm2015/internal/operators/bufferToggle.js","./node_modules/rxjs/_esm2015/internal/operators/bufferWhen.js","./node_modules/rxjs/_esm2015/internal/operators/combineAll.js","./node_modules/rxjs/_esm2015/internal/operators/combineLatest.js","./node_modules/rxjs/_esm2015/internal/operators/concat.js","./node_modules/rxjs/_esm2015/internal/operators/concatMapTo.js","./node_modules/rxjs/_esm2015/internal/operators/count.js","./node_modules/rxjs/_esm2015/internal/operators/debounce.js","./node_modules/rxjs/_esm2015/internal/operators/delayWhen.js","./node_modules/rxjs/_esm2015/internal/operators/dematerialize.js","./node_modules/rxjs/_esm2015/internal/operators/distinct.js","./node_modules/rxjs/_esm2015/internal/operators/distinctUntilKeyChanged.js","./node_modules/rxjs/_esm2015/internal/operators/elementAt.js","./node_modules/rxjs/_esm2015/internal/operators/endWith.js","./node_modules/rxjs/_esm2015/internal/operators/every.js","./node_modules/rxjs/_esm2015/internal/operators/exhaust.js","./node_modules/rxjs/_esm2015/internal/operators/exhaustMap.js","./node_modules/rxjs/_esm2015/internal/operators/expand.js","./node_modules/rxjs/_esm2015/internal/operators/find.js","./node_modules/rxjs/_esm2015/internal/operators/findIndex.js","./node_modules/rxjs/_esm2015/internal/operators/groupBy.js","./node_modules/rxjs/_esm2015/internal/operators/ignoreElements.js","./node_modules/rxjs/_esm2015/internal/operators/isEmpty.js","./node_modules/rxjs/_esm2015/internal/operators/mapTo.js","./node_modules/rxjs/_esm2015/internal/operators/materialize.js","./node_modules/rxjs/_esm2015/internal/operators/max.js","./node_modules/rxjs/_esm2015/internal/operators/merge.js","./node_modules/rxjs/_esm2015/internal/operators/mergeMapTo.js","./node_modules/rxjs/_esm2015/internal/operators/mergeScan.js","./node_modules/rxjs/_esm2015/internal/operators/min.js","./node_modules/rxjs/_esm2015/internal/operators/onErrorResumeNext.js","./node_modules/rxjs/_esm2015/internal/operators/partition.js","./node_modules/rxjs/_esm2015/internal/operators/pluck.js","./node_modules/rxjs/_esm2015/internal/operators/publishBehavior.js","./node_modules/rxjs/_esm2015/internal/operators/publishLast.js","./node_modules/rxjs/_esm2015/internal/operators/publishReplay.js","./node_modules/rxjs/_esm2015/internal/operators/race.js","./node_modules/rxjs/_esm2015/internal/operators/reduce.js","./node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js","./node_modules/rxjs/_esm2015/internal/operators/retry.js","./node_modules/rxjs/_esm2015/internal/operators/retryWhen.js","./node_modules/rxjs/_esm2015/internal/operators/sample.js","./node_modules/rxjs/_esm2015/internal/operators/sampleTime.js","./node_modules/rxjs/_esm2015/internal/operators/sequenceEqual.js","./node_modules/rxjs/_esm2015/internal/operators/single.js","./node_modules/rxjs/_esm2015/internal/operators/skipLast.js","./node_modules/rxjs/_esm2015/internal/operators/skipUntil.js","./node_modules/rxjs/_esm2015/internal/operators/skipWhile.js","./node_modules/rxjs/_esm2015/internal/operators/subscribeOn.js","./node_modules/rxjs/_esm2015/internal/operators/switchAll.js","./node_modules/rxjs/_esm2015/internal/operators/switchMapTo.js","./node_modules/rxjs/_esm2015/internal/operators/throttle.js","./node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","./node_modules/rxjs/_esm2015/internal/operators/timeInterval.js","./node_modules/rxjs/_esm2015/internal/operators/timeout.js","./node_modules/rxjs/_esm2015/internal/operators/timeoutWith.js","./node_modules/rxjs/_esm2015/internal/operators/timestamp.js","./node_modules/rxjs/_esm2015/internal/operators/toArray.js","./node_modules/rxjs/_esm2015/internal/operators/window.js","./node_modules/rxjs/_esm2015/internal/operators/windowCount.js","./node_modules/rxjs/_esm2015/internal/operators/windowTime.js","./node_modules/rxjs/_esm2015/internal/operators/windowToggle.js","./node_modules/rxjs/_esm2015/internal/operators/windowWhen.js","./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js","./node_modules/rxjs/_esm2015/internal/operators/zip.js","./node_modules/rxjs/_esm2015/internal/operators/zipAll.js","./node_modules/rxjs/_esm2015/internal/scheduler/VirtualTimeScheduler.js","./node_modules/rxjs/_esm2015/internal/util/TimeoutError.js","./node_modules/rxjs/_esm2015/internal/util/not.js","./node_modules/rxjs/_esm2015/operators/index.js","./node_modules/rxjs/add/operator/map.js","./src/app/views/auth/auth-routing.module.ts","./src/app/views/auth/auth.component.ts","./src/app/views/auth/auth.component.html","./src/app/views/auth/auth.module.ts","./src/app/views/auth/login/login.component.ts","./src/app/views/auth/login/login.component.html","./src/app/views/auth/others/guards/admin.guard.ts","./src/app/views/auth/others/guards/operator.guard.ts","./src/app/views/auth/others/guards/recep.guard.ts","./src/app/views/auth/others/services/password/auth-password.service.ts","./src/app/views/auth/request-password/request-password.component.ts","./src/app/views/auth/request-password/request-password.component.html","./src/app/views/auth/reset-password/reset-password.component.ts","./src/app/views/auth/reset-password/reset-password.component.html","./src/app/views/reports/packages-on-a-route/packages-on-a-route.component.ts","./src/app/views/reports/packages-on-a-route/packages-on-a-route.component.html","./src/app/views/reports/profits-per-route/profits-per-route.component.ts","./src/app/views/reports/profits-per-route/profits-per-route.component.html","./src/app/views/reports/report2/report2.component.ts","./src/app/views/reports/report2/report2.component.html","./src/app/views/reports/report3/invoice/invoice.component.ts","./src/app/views/reports/report3/invoice/invoice.component.html","./src/app/views/reports/report3/packages/packages.component.ts","./src/app/views/reports/report3/packages/packages.component.html","./src/app/views/reports/report3/report3.component.ts","./src/app/views/reports/report3/report3.component.html","./src/app/views/reports/reports-routing.module.ts","./src/app/views/reports/reports.component.ts","./src/app/views/reports/reports.component.html","./src/app/views/reports/reports.module.ts","./src/app/views/reports/top-of-routes/top-of-routes.component.ts","./src/app/views/reports/top-of-routes/top-of-routes.component.html","./src/app/views/users/admin/activate-users/activate-users.component.ts","./src/app/views/users/admin/activate-users/activate-users.component.html","./src/app/views/users/admin/admin-routing.module.ts","./src/app/views/users/admin/admin.component.ts","./src/app/views/users/admin/admin.component.html","./src/app/views/users/admin/admin.module.ts","./src/app/views/users/admin/checkpoint-list/checkpoint-list.component.ts","./src/app/views/users/admin/checkpoint-list/checkpoint-list.component.html","./src/app/views/users/admin/create-checkpoint/create-checkpoint.component.ts","./src/app/views/users/admin/create-checkpoint/create-checkpoint.component.html","./src/app/views/users/admin/create-destination/create-destination.component.ts","./src/app/views/users/admin/create-destination/create-destination.component.html","./src/app/views/users/admin/edit-checkpoint/edit-checkpoint.component.ts","./src/app/views/users/admin/edit-checkpoint/edit-checkpoint.component.html","./src/app/views/users/admin/edit-destination/edit-destination.component.ts","./src/app/views/users/admin/edit-destination/edit-destination.component.html","./src/app/views/users/admin/edit-route/edit-route.component.ts","./src/app/views/users/admin/edit-route/edit-route.component.html","./src/app/views/users/admin/list-destinations/list-destinations.component.ts","./src/app/views/users/admin/list-destinations/list-destinations.component.html","./src/app/views/users/admin/list-edit-users/list-edit-users.component.ts","./src/app/views/users/admin/list-edit-users/list-edit-users.component.html","./src/app/views/users/admin/list-users/list-users.component.ts","./src/app/views/users/admin/list-users/list-users.component.html","./src/app/views/users/admin/menu.ts","./src/app/views/users/admin/rates/rates.component.ts","./src/app/views/users/admin/rates/rates.component.html","./src/app/views/users/admin/register-user/register-user.component.ts","./src/app/views/users/admin/register-user/register-user.component.html","./src/app/views/users/admin/route-list/route-list.component.ts","./src/app/views/users/admin/route-list/route-list.component.html","./src/app/views/users/admin/routes/create-route/create-route.component.ts","./src/app/views/users/admin/routes/create-route/create-route.component.html","./src/app/views/users/admin/routes/routes-routing.module.ts","./src/app/views/users/admin/routes/routes.module.ts","./src/app/views/users/admin/update-assignament-operator-checkpoint/update-assignament-operator-checkpoint.component.ts","./src/app/views/users/admin/update-assignament-operator-checkpoint/update-assignament-operator-checkpoint.component.html","./src/app/views/users/admin/update-user/update-user.component.ts","./src/app/views/users/admin/update-user/update-user.component.html","./src/app/views/users/general/general-routing.module.ts","./src/app/views/users/general/general.component.ts","./src/app/views/users/general/general.component.html","./src/app/views/users/general/general.module.ts","./src/app/views/users/general/profile/profile.component.html","./src/app/views/users/general/profile/profile.component.ts","./src/app/views/users/operator/checkpoints-list/checkpoints-list.component.ts","./src/app/views/users/operator/checkpoints-list/checkpoints-list.component.html","./src/app/views/users/operator/menu.ts","./src/app/views/users/operator/operator-routing.module.ts","./src/app/views/users/operator/operator.component.ts","./src/app/views/users/operator/operator.component.html","./src/app/views/users/operator/operator.module.ts","./src/app/views/users/operator/packages-list/packages-list.component.ts","./src/app/views/users/operator/packages-list/packages-list.component.html","./src/app/views/users/operator/process-package/process-package.component.ts","./src/app/views/users/operator/process-package/process-package.component.html","./src/app/views/users/others/models/CustomServerDataSource.ts","./src/app/views/users/others/services/admin.service.ts","./src/app/views/users/others/services/checkpoint/checkpoint.service.ts","./src/app/views/users/others/services/checkpoint/checkpoints.service.ts","./src/app/views/users/others/services/destination/destination.service.ts","./src/app/views/users/others/services/operator/operator.service.ts","./src/app/views/users/others/services/rates/rates.service.ts","./src/app/views/users/others/services/recep.service.ts","./src/app/views/users/others/services/report.service.ts","./src/app/views/users/others/services/route/route.service.ts","./src/app/views/users/others/source/notifications/notifications.component.ts","./src/app/views/users/recep/client-list/client-list.component.ts","./src/app/views/users/recep/client-list/client-list.component.html","./src/app/views/users/recep/create-client/create-client.component.ts","./src/app/views/users/recep/create-client/create-client.component.html","./src/app/views/users/recep/deliver-package/deliver-button/deliver-button.component.ts","./src/app/views/users/recep/deliver-package/deliver-button/deliver-button.component.html","./src/app/views/users/recep/deliver-package/deliver-package.component.ts","./src/app/views/users/recep/deliver-package/deliver-package.component.html","./src/app/views/users/recep/enter-package/enter-package.component.ts","./src/app/views/users/recep/enter-package/enter-package.component.html","./src/app/views/users/recep/invoice/invoice.component.ts","./src/app/views/users/recep/invoice/invoice.component.html","./src/app/views/users/recep/menu.ts","./src/app/views/users/recep/package-info/package-info.component.ts","./src/app/views/users/recep/package-info/package-info.component.html","./src/app/views/users/recep/recep-routing.module.ts","./src/app/views/users/recep/recep.component.ts","./src/app/views/users/recep/recep.component.html","./src/app/views/users/recep/recep.module.ts","./src/app/views/users/recep/trace-package/trace-package.component.ts","./src/app/views/users/recep/trace-package/trace-package.component.html","./src/app/views/users/users-routing.module.ts","./src/app/views/users/users.module.ts","./src/app/views/views-routing.module.ts","./src/app/views/views.component.ts","./src/app/views/views.component.html","./src/app/views/views.module.ts"],"names":[],"mappings":";;;;;;;;;AAAa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,aAAa,mBAAO,CAAC,eAAM;AAC3B,YAAY,mBAAO,CAAC,+BAAoB;AACxC;AACA,+B;;;;;;;;;;;ACLa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,kBAAkB,mBAAO,CAAC,2BAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCmD;AACiC;AACnB;AACP;AACb;AACgB;AACJ;AACF;AACS;AACG;AACA;AAC2B;AACE;AAC/C;AACM;AACJ;AACsB;AAC7B;AACA;AACQ;AACQ;AACsB;AAC1B;AAC0B;AACR;AACd;AACM;AACQ;AACN;AACd;AACF;AACA;AACM;AACR;AACU;AACc;AAChB;AACV;AACU;AACN;AACA;AACN;AAC8B;AACxB;AACQ;AACV;AACE;AACU;AACV;AACA;AACJ;AACW;AACP;AACA;AACT;AAC3C,iC;;;;;;;;;;;;;;;;;ACvDoC;AACU;AACvC,2BAA2B,6CAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6DAAkB;AACrC;AACA;AACA;AACA;AACA,mBAAmB,6DAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;;;;;;ACxC2C;AACF;AACK;AACvC,oCAAoC,mDAAU;AACrD,mDAAmD,iDAAI;AACvD;AACA;AACA;AACA;AACA,aAAa,0DAAS;AACtB;AACA;AACA;AACA,6BAA6B,iDAAI;AACjC;AACA;AACA,iDAAiD,iDAAI;AACrD;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iD;;;;;;;;;;;;;;;;;;;;;AChC2C;AACI;AACR;AACiB;AACd;AACQ;AAC3C;AACP;AACA,YAAY,8DAAW;AACvB;AACA;AACA;AACA,oFAAoF,mDAAG,WAAW,sDAAO;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAU;AAC7B;AACA;AACA,kCAAkC,uDAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC,WAAW,mCAAmC;AAC9C,SAAS,UAAU;AACnB;AACA,uCAAuC,uDAAY;AACnD;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,wC;;;;;;;;;;;;;;;;;;;;;ACpF2C;AACI;AACR;AACiB;AACN;AACR;AACnC;AACP;AACA,YAAY,8DAAW;AACvB;AACA;AACA;AACA,wFAAwF,mDAAG,SAAS,sDAAO;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mDAAU;AAC7B,mBAAmB,UAAU;AAC7B,iBAAiB,UAAU;AAC3B;AACA;AACA,mDAAmD,uDAAY;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,8BAA8B;AACtF;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,8BAA8B;AACzC,WAAW,gCAAgC;AAC3C;AACA;AACA,uCAAuC,uDAAY;AACnD;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA,8DAA8D,iBAAiB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,eAAe;AAC1E;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,4C;;;;;;;;;;;;;;;;;;;AC5F2C;AACD;AACM;AACT;AAChC;AACP;AACA,gEAAgE,mDAAG,SAAS,sDAAO;AACnF;AACA,eAAe,mDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAU;AACvB;AACA;AACA;AACA,KAAK;AACL;AACA,4C;;;;;;;;;;;;;;;;;;ACxB2C;AACC;AACM;AAC3C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oDAAQ;AAC3D;AACA;AACA,yDAAyD,8DAAW;AACpE;AACA,yBAAyB,oDAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;;;;;AC3HgC;AACA;AACzB,qCAAqC,yCAAK,gBAAgB,yCAAK;AACtE,WAAW,6CAAK;AAChB;AACA,+B;;;;;;;;;;;;;;;;;;ACL2C;AACP;AAC7B,kBAAkB,mDAAU,CAAC,4CAAI;AACjC;AACP;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;ACN2C;AACb;AACY;AACV;AACzB;AACP;AACA,eAAe,yCAAK;AACpB;AACA;AACA,gCAAgC,sDAAO;AACvC;AACA;AACA,eAAe,mDAAU;AACzB;AACA,eAAe,2CAAI;AACnB,yBAAyB,wBAAwB,EAAE;AACnD;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,6C;;;;;;;;;;;;;;;;;;ACrB2C;AACI;AACxC;AACP;AACA,mBAAmB,mDAAU;AAC7B;AACA,2BAA2B,uCAAuC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,mDAAU;AAC7B;AACA,qCAAqC,uDAAY;AACjD,8DAA8D,gDAAgD;AAC9G;AACA,SAAS;AACT;AACA;AACO;AACP,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA,4CAA4C,wDAAwD;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;ACrCkC;AACgB;AACL;AACF;AACpC;AACP;AACA,QAAQ,yDAAM,yBAAyB,mDAAU,CAAC,8DAAW;AAC7D,QAAQ,yDAAM,CAAC,8CAAG,0BAA0B,mDAAU,CAAC,8DAAW;AAClE;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;ACV0C;AACF;AACa;AACS;AACvD;AACP;AACA,YAAY,sDAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACO,6BAA6B,6DAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA,qCAAqC,0EAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;;;;;AC/D2C;AACpC;AACP,eAAe,mDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACO;AACP,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;;AC3C2C;AACb;AACE;AACzB;AACP,eAAe,mDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2CAAI,WAAW,yCAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iC;;;;;;;;;;;;;;;;;;;;;;AC/BwC;AACE;AACC;AACkC;AACoB;AAC1F;AACP;AACA;AACA;AACA;AACA,WAAW,qDAAS;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4BAA4B,mDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAO;AACnB;AACA;AACA,8BAA8B,+DAAe;AAC7C,oDAAoD,+DAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,+DAAe;AACpB;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B,IAAI;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kEAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,+DAAe;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAc,sBAAsB,kEAAqB;AACxE;AACA;AACA,+B;;;;;;;;;;;;;;;;ACpMiG;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kEAAqB;AACpD;AACA;AACA;AACA,iBAAiB,+DAAc,sBAAsB,kEAAqB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;;;;AC7B2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mDAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAA+C;AAC9D;AACA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;;;;;;AC7E2C;AACA;AACO;AAC3C;AACP;AACA,oBAAoB,mDAAK;AACzB,QAAQ,8DAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gEAAgE;AAC3E;AACA;AACA;AACA,sGAAsG,sBAAsB;AAC5H;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA,sC;;;;;;;;;;;;;;;;;;AC5I+C;AACe;AACT;AAC9C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6DAAe;AACpD;AACA;AACA;AACA;AACA,iBAAiB,0EAAiB;AAClC;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uDAAY;AAC7C,yBAAyB;AACzB;AACA,kCAAkC,0EAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;;;;;ACnG+C;AACkD;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kEAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAY;AAC9C;AACA;AACA;AACA,gCAAgC,+DAAc,sBAAsB,kEAAqB;AACzF;AACA;AACA;AACA,sC;;;;;;;;;;;;;;;;AC1EoE;AAC7D;AACP,uCAAuC,4EAAqB;AAC5D;AACA,sC;;;;;;;;;;;;;;;;;;ACJ0C;AAC0B;AAC1B;AAC1C;AACO;AACP;AACA;AACA;AACA;AACA,oCAAoC,sDAAO;AAC3C;AACA;AACA,wCAAwC,sDAAI,gCAAgC,4EAAqB;AACjG;AACA,yC;;;;;;;;;;;;;;;;ACd8D;AACvD;AACP,wCAAwC,0DAAY;AACpD;AACA,kC;;;;;;;;;;;;;;;;ACJwC;AACjC;AACP,WAAW,qDAAS;AACpB;AACA,uC;;;;;;;;;;;;;;;;ACJ2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;AC/CiG;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kEAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+DAAc,eAAe,kEAAqB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;;;;;;;ACnE2C;AACA;AACU;AACS;AACvD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6DAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0EAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mDAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mDAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;ACrH2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;;;;;ACnBiG;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,iCAAiC,kEAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA,qBAAqB,+DAAc,cAAc,kEAAqB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;;;;ACxD8D;AACvD;AACP,WAAW,2EAAoB;AAC/B;AACA,mD;;;;;;;;;;;;;;;;;;;;ACJ0E;AACxC;AACY;AACI;AACpB;AACvB;AACP;AACA,kBAAkB,kFAAuB;AACzC;AACA;AACA,mCAAmC,+CAAM,yBAAyB,2CAAI;AACtE,UAAU,+DAAc;AACxB,UAAU,2DAAY,WAAW,kFAAuB;AACxD;AACA,qC;;;;;;;;;;;;;;;;;ACd8C;AACR;AAC/B;AACP,uBAAuB,0DAAM,SAAS,kDAAE;AACxC;AACA,mC;;;;;;;;;;;;;;;;ACL2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;AC5CiG;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kEAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,+DAAc,YAAY,kEAAqB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;;;;;;AClC4B;AACc;AACuD;AAC1F;AACP;AACA,4DAA4D,sDAAI,qBAAqB,yCAAG;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kEAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kEAAqB;AACzD;AACA;AACA,kCAAkC,+DAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;;;;;;ACxEiG;AAC1F;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,+BAA+B,kEAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mCAAmC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+DAAc,aAAa,kEAAqB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;;;;;;ACvF2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kCAAkC,mDAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;;;;;AClDsD;AAC/C;AACP,uCAAuC,8DAAiB;AACxD;AACA,qC;;;;;;;;;;;;;;;;;;;;ACJ2C;AACI;AACJ;AACN;AAC9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,6CAAO;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mDAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACO,gCAAgC,mDAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uDAAY;AAC7C,eAAe,qCAAqC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uDAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;;;;ACnK2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,mDAAU;AACjD;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;ACf2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;;;;;ACzB2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;ACrB2C;AACI;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAU;AAC9C;AACA;AACA;AACA;AACA,8BAA8B,kEAAuB;AACrD;AACA;AACA;AACA,yBAAyB,mEAAwB;AACjD;AACA;AACA;AACA;AACA,yBAAyB,sEAA2B;AACpD;AACA;AACA;AACA,uC;;;;;;;;;;;;;;;;AC9BkC;AAC3B;AACP;AACA;AACA;AACA,WAAW,+CAAM;AACjB;AACA,+B;;;;;;;;;;;;;;;;ACP2D;AACpD;AACP,wCAAwC,wDAAW;AACnD;AACA,iC;;;;;;;;;;;;;;;;ACJsC;AAC/B;AACP;AACA,eAAe,mDAAQ;AACvB;AACA;AACA;AACA;AACA,WAAW,mDAAQ;AACnB;AACA,sC;;;;;;;;;;;;;;;;;;ACViG;AAC1F;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kCAAkC,kEAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kEAAqB;AACzD;AACA;AACA,kCAAkC,+DAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;ACpFkC;AAC3B;AACP;AACA;AACA;AACA,WAAW,+CAAM;AACjB;AACA,+B;;;;;;;;;;;;;;;;;;;ACP0C;AACA;AACuD;AAC1F;AACP,oCAAoC,sDAAO;AAC3C;AACA;AACA;AACA;AACO;AACP;AACA,oCAAoC,sDAAO;AAC3C;AACA;AACA;AACA,WAAW,sDAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kEAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kEAAqB;AAC7D;AACA;AACA,sCAAsC,+DAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;;;;;;AC7DkC;AACA;AAC3B;AACP;AACA,QAAQ,+CAAM;AACd,QAAQ,+CAAM,CAAC,8CAAG;AAClB;AACA;AACA,qC;;;;;;;;;;;;;;;;ACR4B;AACrB;AACP;AACA;AACA;AACA;AACA,uBAAuB,yCAAG;AAC1B;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;ACxBqD;AACb;AACjC;AACP,uBAAuB,qDAAS,KAAK,6DAAe;AACpD;AACA,2C;;;;;;;;;;;;;;;;;ACL+C;AACP;AACjC;AACP,uBAAuB,qDAAS,KAAK,uDAAY;AACjD;AACA,uC;;;;;;;;;;;;;;;;;ACLiD;AACT;AACjC;AACP;AACA;AACA;AACA;AACA,wBAAwB,yDAAa;AACrC,uBAAuB,qDAAS;AAChC;AACA,yC;;;;;;;;;;;;;;;;;ACV0C;AACc;AACjD;AACP;AACA,wCAAwC,sDAAO;AAC/C;AACA;AACA,gCAAgC,sDAAU;AAC1C;AACA;AACA,gC;;;;;;;;;;;;;;;;;;;ACV8B;AACQ;AACY;AACd;AAC7B;AACP;AACA;AACA,mBAAmB,gDAAI,CAAC,2CAAI,qBAAqB,mDAAQ,KAAK,+DAAc;AAC5E;AACA;AACA;AACA,eAAe,gDAAI,CAAC,2CAAI,6DAA6D,mDAAQ;AAC7F;AACA;AACA,kC;;;;;;;;;;;;;;;;;ACdqC;AAC4D;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kEAAqB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qCAAqC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6CAAO;AACxC;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+DAAc,cAAc,kEAAqB;AACpF;AACA;AACA,sC;;;;;;;;;;;;;;;;AC3E2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;AChCqC;AAC4D;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6CAAO;AACpC;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA,sCAAsC,+DAAc,cAAc,kEAAqB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;ACnEiG;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+DAAc,oBAAoB,kEAAqB;AAChF;AACA;AACA;AACA,+BAA+B,kEAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;;;;;ACrC2C;AACA;AACpC,wCAAwC,mDAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA,mEAAmE,2BAA2B;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA,sC;;;;;;;;;;;;;;;;;;ACtC2C;AACpC;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sCAAsC,mDAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,mDAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;;;;;;AClG2C;AACK;AACzC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wDAAU;AAC5C;AACA;AACA;AACA,kC;;;;;;;;;;;;;;;;;AC7D2C;AAC+B;AACnE;AACP;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kFAAuB;AAC7C;AACA;AACA;AACA;AACA,wCAAwC,mDAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;;;;AC3CiG;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAqB;AACvD;AACA;AACA;AACA,oCAAoC,kEAAqB;AACzD;AACA;AACA,kCAAkC,+DAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;ACvC2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mDAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;ACtC4E;AACrE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oFAAqB;AACxC;AACA;AACA,uC;;;;;;;;;;;;;;;;;ACfwC;AACI;AACrC;AACP,WAAW,qDAAS,CAAC,oDAAQ;AAC7B;AACA,qC;;;;;;;;;;;;;;;;ACLwC;AACjC;AACP,4BAA4B,qDAAS,0CAA0C,qDAAS;AACxF;AACA,uC;;;;;;;;;;;;;;;;;ACJiG;AAC1F;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kEAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+DAAc,eAAe,kEAAqB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;;;;;;;AChF2C;AACA;AACQ;AAC5C,4CAA4C,mDAAK,WAAW,4DAAqB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mDAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,mBAAmB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA,wC;;;;;;;;;;;;;;;;;;;;ACxE2C;AACb;AACc;AAChB;AACrB,kCAAkC,mDAAK;AAC9C,uBAAuB,wDAAK;AAC5B,2BAA2B,2CAAI,GAAG,UAAU,cAAc,iDAAiD,IAAI,8DAA8D,GAAG,yCAAG,GAAG,uBAAuB;AAC7M,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;;;;;;;ACf2C;AACS;AACR;AACU;AAC/C,kCAAkC,mDAAK;AAC9C,WAAW,yDAAW,MAAM,kEAAU,KAAK,4DAAY;AACvD;AACA,mC;;;;;;;;;;;;;;;;;;ACP2C;AACH;AACyD;AAC1F,sDAAsD,mDAAK;AAClE;AACA,8BAA8B,oDAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kEAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA,uBAAuB,+DAAc,qBAAqB,kEAAqB;AAC/E;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;;;;;;ACxD2C;AACf;AACrB,+BAA+B,mDAAK;AAC3C,WAAW,yCAAG;AACd;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;ACXkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,+CAAM;AACjB;AACA,mC;;;;;;;;;;;;;;;;;ACXqC;AAC4D;AAC1F;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+DAAc,4BAA4B,kEAAqB;AAChG;AACA;AACA;AACA;AACA,+BAA+B,kEAAqB;AACpD;AACA;AACA,0BAA0B,6CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6CAAO;AACnD;AACA;AACA;AACA,kC;;;;;;;;;;;;;;;;;AC3D2C;AACN;AAC9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,mDAAU;AAC9C;AACA;AACA;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;;;;;;;;;ACpEqC;AACM;AACA;AACG;AACI;AAC3C;AACP,oBAAoB,mDAAK;AACzB;AACA;AACA,QAAQ,8DAAW;AACnB;AACA;AACA,QAAQ,8DAAW;AACnB;AACA;AACA,aAAa,0DAAS;AACtB;AACA;AACA,QAAQ,8DAAW;AACnB;AACA;AACA,aAAa,0DAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gEAAgE;AAC3E;AACA;AACA,mBAAmB;AACnB,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;;;;;;;;AC7IqC;AACU;AACM;AACS;AACvD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6DAAe;AACpD;AACA;AACA;AACA;AACA;AACA,yCAAyC,0EAAiB;AAC1D;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAAO;AACtC,qCAAqC,uDAAY;AACjD,6BAA6B;AAC7B;AACA,sCAAsC,0EAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;;;;;;;AC1HqC;AACgB;AACS;AACvD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,6CAAO;AAChD;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,0EAAiB;AAC7D;AACA;AACA,sC;;;;;;;;;;;;;;;;;AC1EqD;AACS;AACvD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6DAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA,uBAAuB,SAAS;AAChC;AACA,qBAAqB,0EAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;ACxEqD;AAC9C;AACP;AACA,gCAAgC,oDAAS;AACzC;AACA;AACA,+B;;;;;;;;;;;;;;;;ACNgD;AACzC;AACP,uCAAuC,wDAAW;AAClD;AACA,kC;;;;;;;;;;;;;;;;;;ACJ4C;AACM;AAC3C,mCAAmC,2DAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4BAA4B,qDAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP,wC;;;;;;;;;;;;;;;ACXO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRoD;AACQ;AACN;AACU;AACF;AACI;AACJ;AACA;AACA;AACM;AACd;AACM;AACA;AACI;AACZ;AACM;AACQ;AACI;AAClB;AACQ;AACQ;AACV;AACwB;AACM;AAC5B;AACJ;AACJ;AACI;AACM;AACR;AACA;AACI;AACR;AACU;AACR;AACI;AACc;AACd;AACN;AACF;AACI;AACY;AAChB;AACI;AACM;AACS;AACL;AACF;AAC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","file":"src_app_views_views_module_ts-es2015.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar map_1 = require(\"../../operator/map\");\nrxjs_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar operators_1 = require(\"rxjs/operators\");\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    return operators_1.map(project, thisArg)(this);\n}\nexports.map = map;\n//# sourceMappingURL=map.js.map","export { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { observable } from './internal/symbol/observable';\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\nexport { Notification, NotificationKind } from './internal/Notification';\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\nexport { config } from './internal/config';\n//# sourceMappingURL=index.js.map","import { Subject } from './Subject';\nimport { Subscription } from './Subscription';\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    _subscribe(subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return super._subscribe(subscriber);\n    }\n    next(value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    }\n    error(error) {\n        if (!this.hasCompleted) {\n            super.error(error);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            super.next(this.value);\n        }\n        super.complete();\n    }\n}\n//# sourceMappingURL=AsyncSubject.js.map","import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n//# sourceMappingURL=SubscribeOnObservable.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const params = {\n            subject: undefined,\n            args,\n            callbackFunc,\n            scheduler,\n            context: this,\n        };\n        return new Observable(subscriber => {\n            const { context } = params;\n            let { subject } = params;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        const err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params, subscriber, context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const { params, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = params;\n    let subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const err = innerArgs.shift();\n            if (err) {\n                this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n            }\n            else {\n                const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    const { value, subject } = arg;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    const { err, subject } = arg;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        let retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return () => removeHandler(handler, retValue);\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    let resultSelector;\n    let initialState;\n    if (arguments.length == 1) {\n        const options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(subscriber => {\n        let state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber,\n                iterate,\n                condition,\n                resultSelector,\n                state\n            });\n        }\n        do {\n            if (condition) {\n                let conditionResult;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            let value;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        let conditionResult;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    let value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n//# sourceMappingURL=generate.js.map","import { defer } from './defer';\nimport { EMPTY } from './empty';\nexport function iif(condition, trueResult = EMPTY, falseResult = EMPTY) {\n    return defer(() => condition() ? trueResult : falseResult);\n}\n//# sourceMappingURL=iif.js.map","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport const NEVER = new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext(...sources) {\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    const [first, ...remainder] = sources;\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext(...first);\n    }\n    return new Observable(subscriber => {\n        const subNext = () => subscriber.add(onErrorResumeNext(...remainder).subscribe(subscriber));\n        return from(first).subscribe({\n            next(value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n                const key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            const subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n            return subscription;\n        });\n    }\n}\nexport function dispatch(state) {\n    const { keys, index, subscriber, subscription, obj } = state;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            const key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n//# sourceMappingURL=pairs.js.map","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { Observable } from '../Observable';\nexport function partition(source, predicate, thisArg) {\n    return [\n        filter(predicate, thisArg)(new Observable(subscribeTo(source))),\n        filter(not(predicate, thisArg))(new Observable(subscribeTo(source)))\n    ];\n}\n//# sourceMappingURL=partition.js.map","import { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race(...observables) {\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport class RaceOperator {\n    call(subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    }\n}\nexport class RaceSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    _next(observable) {\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (let i = 0; i < len && !this.hasFirst; i++) {\n                const observable = observables[i];\n                const subscription = subscribeToResult(this, observable, undefined, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (let i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    let subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    }\n}\n//# sourceMappingURL=race.js.map","import { Observable } from '../Observable';\nexport function range(start = 0, count, scheduler) {\n    return new Observable(subscriber => {\n        if (count === undefined) {\n            count = start;\n            start = 0;\n        }\n        let index = 0;\n        let current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index, count, start, subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexport function dispatch(state) {\n    const { start, index, count, subscriber } = state;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n//# sourceMappingURL=range.js.map","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(subscriber => {\n        let resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        let result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = result ? from(result) : EMPTY;\n        const subscription = source.subscribe(subscriber);\n        return () => {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n//# sourceMappingURL=using.js.map","import { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n    }\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                const destination = this.destination;\n                destination.add(iterator.subscribe());\n            }\n            else {\n                this.active--;\n            }\n        }\n    }\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    hasValue() {\n        return true;\n    }\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return Boolean(nextResult && nextResult.done);\n    }\n}\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    }\n    hasValue() {\n        return this.array.length > this.index;\n    }\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\nclass ZipBufferIterator extends SimpleOuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    }\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    notifyNext(innerValue) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n    subscribe() {\n        return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    }\n}\n//# sourceMappingURL=zip.js.map","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nclass BufferOperator {\n    constructor(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    }\n}\nclass BufferSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, closingNotifier) {\n        super(destination);\n        this.buffer = [];\n        this.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    notifyNext() {\n        const buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    }\n}\n//# sourceMappingURL=buffer.js.map","import { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nclass BufferCountOperator {\n    constructor(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    }\n}\nclass BufferCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    _next(value) {\n        const buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n}\nclass BufferSkipCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize, startBufferEvery) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    _next(value) {\n        const { bufferSize, startBufferEvery, buffers, count } = this;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (let i = buffers.length; i--;) {\n            const buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    }\n    _complete() {\n        const { buffers, destination } = this;\n        while (buffers.length > 0) {\n            let buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        super._complete();\n    }\n}\n//# sourceMappingURL=bufferCount.js.map","import { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nexport function bufferTime(bufferTimeSpan) {\n    let length = arguments.length;\n    let scheduler = async;\n    if (isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    let bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    let maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nclass BufferTimeOperator {\n    constructor(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    }\n}\nclass Context {\n    constructor() {\n        this.buffer = [];\n    }\n}\nclass BufferTimeSubscriber extends Subscriber {\n    constructor(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        super(destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        const context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            const closeState = { subscriber: this, context };\n            const creationState = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        let filledBufferContext;\n        for (let i = 0; i < len; i++) {\n            const context = contexts[i];\n            const buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    }\n    _error(err) {\n        this.contexts.length = 0;\n        super._error(err);\n    }\n    _complete() {\n        const { contexts, destination } = this;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        this.contexts = null;\n    }\n    onBufferFull(context) {\n        this.closeContext(context);\n        const closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            const bufferTimeSpan = this.bufferTimeSpan;\n            const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    }\n    openContext() {\n        const context = new Context();\n        this.contexts.push(context);\n        return context;\n    }\n    closeContext(context) {\n        this.destination.next(context.buffer);\n        const contexts = this.contexts;\n        const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    }\n}\nfunction dispatchBufferTimeSpanOnly(state) {\n    const subscriber = state.subscriber;\n    const prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n    const context = subscriber.openContext();\n    const action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    const { subscriber, context } = arg;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map","import { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nclass BufferToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass BufferToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult(this, openings));\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        for (let i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    }\n    _error(err) {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._error(err);\n    }\n    _complete() {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._complete();\n    }\n    notifyNext(outerValue, innerValue) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    }\n    notifyComplete(innerSub) {\n        this.closeBuffer(innerSub.context);\n    }\n    openBuffer(value) {\n        try {\n            const closingSelector = this.closingSelector;\n            const closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    }\n    closeBuffer(context) {\n        const contexts = this.contexts;\n        if (contexts && context) {\n            const { buffer, subscription } = context;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    }\n    trySubscribe(closingNotifier) {\n        const contexts = this.contexts;\n        const buffer = [];\n        const subscription = new Subscription();\n        const context = { buffer, subscription };\n        contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    }\n}\n//# sourceMappingURL=bufferToggle.js.map","import { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nclass BufferWhenOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass BufferWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        this.buffer = undefined;\n        this.subscribing = false;\n    }\n    notifyNext() {\n        this.openBuffer();\n    }\n    notifyComplete() {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    }\n    openBuffer() {\n        let { closingSubscription } = this;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        const buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (err) {\n            return this.error(err);\n        }\n        closingSubscription = new Subscription();\n        this.closingSubscription = closingSubscription;\n        this.add(closingSubscription);\n        this.subscribing = true;\n        closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n        this.subscribing = false;\n    }\n}\n//# sourceMappingURL=bufferWhen.js.map","import { CombineLatestOperator } from '../observable/combineLatest';\nexport function combineAll(project) {\n    return (source) => source.lift(new CombineLatestOperator(project));\n}\n//# sourceMappingURL=combineAll.js.map","import { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nconst none = {};\nexport function combineLatest(...observables) {\n    let project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return (source) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n//# sourceMappingURL=combineLatest.js.map","import { concat as concatStatic } from '../observable/concat';\nexport function concat(...observables) {\n    return (source) => source.lift.call(concatStatic(source, ...observables));\n}\n//# sourceMappingURL=concat.js.map","import { concatMap } from './concatMap';\nexport function concatMapTo(innerObservable, resultSelector) {\n    return concatMap(() => innerObservable, resultSelector);\n}\n//# sourceMappingURL=concatMapTo.js.map","import { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n    return (source) => source.lift(new CountOperator(predicate, source));\n}\nclass CountOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass CountSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    }\n    _tryPredicate(value) {\n        let result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    }\n    _complete() {\n        this.destination.next(this.count);\n        this.destination.complete();\n    }\n}\n//# sourceMappingURL=count.js.map","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function debounce(durationSelector) {\n    return (source) => source.lift(new DebounceOperator(durationSelector));\n}\nclass DebounceOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    }\n}\nclass DebounceSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    _next(value) {\n        try {\n            const result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.emitValue();\n        this.destination.complete();\n    }\n    _tryNext(value, duration) {\n        let subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    }\n    notifyNext() {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            const value = this.value;\n            const subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = undefined;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = undefined;\n            this.hasValue = false;\n            super._next(value);\n        }\n    }\n}\n//# sourceMappingURL=debounce.js.map","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => new SubscriptionDelayObservable(source, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return (source) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\nclass DelayWhenOperator {\n    constructor(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    }\n}\nclass DelayWhenSubscriber extends OuterSubscriber {\n    constructor(destination, delayDurationSelector) {\n        super(destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.index = 0;\n    }\n    notifyNext(outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        const value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    }\n    _next(value) {\n        const index = this.index++;\n        try {\n            const delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    }\n    removeSubscription(subscription) {\n        subscription.unsubscribe();\n        const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    }\n    tryDelay(delayNotifier, value) {\n        const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            const destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    }\n    tryComplete() {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    }\n}\nclass SubscriptionDelayObservable extends Observable {\n    constructor(source, subscriptionDelay) {\n        super();\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    _subscribe(subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    }\n}\nclass SubscriptionDelaySubscriber extends Subscriber {\n    constructor(parent, source) {\n        super();\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    _next(unused) {\n        this.subscribeToSource();\n    }\n    _error(err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    }\n    _complete() {\n        this.unsubscribe();\n        this.subscribeToSource();\n    }\n    subscribeToSource() {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    }\n}\n//# sourceMappingURL=delayWhen.js.map","import { Subscriber } from '../Subscriber';\nexport function dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nclass DeMaterializeOperator {\n    call(subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    }\n}\nclass DeMaterializeSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    _next(value) {\n        value.observe(this.destination);\n    }\n}\n//# sourceMappingURL=dematerialize.js.map","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n    return (source) => source.lift(new DistinctOperator(keySelector, flushes));\n}\nclass DistinctOperator {\n    constructor(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n}\nexport class DistinctSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, keySelector, flushes) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.values = new Set();\n        if (flushes) {\n            this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n        }\n    }\n    notifyNext() {\n        this.values.clear();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    _next(value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    }\n    _useKeySelector(value) {\n        let key;\n        const { destination } = this;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    }\n    _finalizeNext(key, value) {\n        const { values } = this;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=distinct.js.map","import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged((x, y) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map","import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(filter((v, i) => i === index), take(1), hasDefaultValue\n        ? defaultIfEmpty(defaultValue)\n        : throwIfEmpty(() => new ArgumentOutOfRangeError()));\n}\n//# sourceMappingURL=elementAt.js.map","import { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nexport function endWith(...array) {\n    return (source) => concat(source, of(...array));\n}\n//# sourceMappingURL=endWith.js.map","import { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n    return (source) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\nclass EveryOperator {\n    constructor(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    call(observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    }\n}\nclass EverySubscriber extends Subscriber {\n    constructor(destination, predicate, thisArg, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    notifyComplete(everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    }\n    _next(value) {\n        let result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n//# sourceMappingURL=every.js.map","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function exhaust() {\n    return (source) => source.lift(new SwitchFirstOperator());\n}\nclass SwitchFirstOperator {\n    call(subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    }\n}\nclass SwitchFirstSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(innerSubscribe(value, new SimpleInnerSubscriber(this)));\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    }\n    notifyComplete() {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=exhaust.js.map","import { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return (source) => source.pipe(exhaustMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new ExhaustMapOperator(project));\n}\nclass ExhaustMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    }\n}\nclass ExhaustMapSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    }\n    tryNext(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result);\n    }\n    _innerSub(result) {\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this.destination.next(innerValue);\n    }\n    notifyError(err) {\n        this.destination.error(err);\n    }\n    notifyComplete() {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=exhaustMap.js.map","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project, concurrent = Number.POSITIVE_INFINITY, scheduler) {\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return (source) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexport class ExpandOperator {\n    constructor(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    }\n}\nexport class ExpandSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project, concurrent, scheduler) {\n        super(destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    static dispatch(arg) {\n        const { subscriber, result, value, index } = arg;\n        subscriber.subscribeToProjection(result, value, index);\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        const index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            try {\n                const { project } = this;\n                const result = project(value, index);\n                if (!this.scheduler) {\n                    this.subscribeToProjection(result, value, index);\n                }\n                else {\n                    const state = { subscriber: this, result, value, index };\n                    const destination = this.destination;\n                    destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n                }\n            }\n            catch (e) {\n                destination.error(e);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    subscribeToProjection(result, value, index) {\n        this.active++;\n        const destination = this.destination;\n        destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this._next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=expand.js.map","import { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return (source) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\nexport class FindValueOperator {\n    constructor(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    call(observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    }\n}\nexport class FindValueSubscriber extends Subscriber {\n    constructor(destination, predicate, source, yieldIndex, thisArg) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    notifyComplete(value) {\n        const destination = this.destination;\n        destination.next(value);\n        destination.complete();\n        this.unsubscribe();\n    }\n    _next(value) {\n        const { predicate, thisArg } = this;\n        const index = this.index++;\n        try {\n            const result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    }\n}\n//# sourceMappingURL=find.js.map","import { FindValueOperator } from '../operators/find';\nexport function findIndex(predicate, thisArg) {\n    return (source) => source.lift(new FindValueOperator(predicate, source, true, thisArg));\n}\n//# sourceMappingURL=findIndex.js.map","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return (source) => source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nclass GroupByOperator {\n    constructor(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    }\n}\nclass GroupBySubscriber extends Subscriber {\n    constructor(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    _next(value) {\n        let key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    }\n    _group(value, key) {\n        let groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        let group = groups.get(key);\n        let element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            const groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                let duration;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    }\n    _error(err) {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    }\n    removeGroup(key) {\n        this.groups.delete(key);\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                super.unsubscribe();\n            }\n        }\n    }\n}\nclass GroupDurationSubscriber extends Subscriber {\n    constructor(key, group, parent) {\n        super(group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    _next(value) {\n        this.complete();\n    }\n    _unsubscribe() {\n        const { parent, key } = this;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    }\n}\nexport class GroupedObservable extends Observable {\n    constructor(key, groupSubject, refCountSubscription) {\n        super();\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    _subscribe(subscriber) {\n        const subscription = new Subscription();\n        const { refCountSubscription, groupSubject } = this;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    }\n}\nclass InnerRefCountSubscription extends Subscription {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        parent.count++;\n    }\n    unsubscribe() {\n        const parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            super.unsubscribe();\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    }\n}\n//# sourceMappingURL=groupBy.js.map","import { Subscriber } from '../Subscriber';\nexport function ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nclass IgnoreElementsOperator {\n    call(subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    }\n}\nclass IgnoreElementsSubscriber extends Subscriber {\n    _next(unused) {\n    }\n}\n//# sourceMappingURL=ignoreElements.js.map","import { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return (source) => source.lift(new IsEmptyOperator());\n}\nclass IsEmptyOperator {\n    call(observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    }\n}\nclass IsEmptySubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    notifyComplete(isEmpty) {\n        const destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    }\n    _next(value) {\n        this.notifyComplete(false);\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n//# sourceMappingURL=isEmpty.js.map","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n//# sourceMappingURL=mapTo.js.map","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nclass MaterializeOperator {\n    call(subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    }\n}\nclass MaterializeSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    _next(value) {\n        this.destination.next(Notification.createNext(value));\n    }\n    _error(err) {\n        const destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    }\n    _complete() {\n        const destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    }\n}\n//# sourceMappingURL=materialize.js.map","import { reduce } from './reduce';\nexport function max(comparer) {\n    const max = (typeof comparer === 'function')\n        ? (x, y) => comparer(x, y) > 0 ? x : y\n        : (x, y) => x > y ? x : y;\n    return reduce(max);\n}\n//# sourceMappingURL=max.js.map","import { merge as mergeStatic } from '../observable/merge';\nexport function merge(...observables) {\n    return (source) => source.lift.call(mergeStatic(source, ...observables));\n}\n//# sourceMappingURL=merge.js.map","import { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        return mergeMap(() => innerObservable, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(() => innerObservable, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map","import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeScan(accumulator, seed, concurrent = Number.POSITIVE_INFINITY) {\n    return (source) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\nexport class MergeScanOperator {\n    constructor(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    }\n}\nexport class MergeScanSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, accumulator, acc, concurrent) {\n        super(destination);\n        this.accumulator = accumulator;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.active < this.concurrent) {\n            const index = this.index++;\n            const destination = this.destination;\n            let ish;\n            try {\n                const { accumulator } = this;\n                ish = accumulator(this.acc, value, index);\n            }\n            catch (e) {\n                return destination.error(e);\n            }\n            this.active++;\n            this._innerSub(ish);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    _innerSub(ish) {\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = innerSubscribe(ish, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        const { destination } = this;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=mergeScan.js.map","import { reduce } from './reduce';\nexport function min(comparer) {\n    const min = (typeof comparer === 'function')\n        ? (x, y) => comparer(x, y) < 0 ? x : y\n        : (x, y) => x < y ? x : y;\n    return reduce(min);\n}\n//# sourceMappingURL=min.js.map","import { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function onErrorResumeNext(...nextSources) {\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return (source) => source.lift(new OnErrorResumeNextOperator(nextSources));\n}\nexport function onErrorResumeNextStatic(...nextSources) {\n    let source = undefined;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return from(source).lift(new OnErrorResumeNextOperator(nextSources));\n}\nclass OnErrorResumeNextOperator {\n    constructor(nextSources) {\n        this.nextSources = nextSources;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    }\n}\nclass OnErrorResumeNextSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, nextSources) {\n        super(destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    notifyError() {\n        this.subscribeToNextSource();\n    }\n    notifyComplete() {\n        this.subscribeToNextSource();\n    }\n    _error(err) {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    }\n    _complete() {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    }\n    subscribeToNextSource() {\n        const next = this.nextSources.shift();\n        if (!!next) {\n            const innerSubscriber = new SimpleInnerSubscriber(this);\n            const destination = this.destination;\n            destination.add(innerSubscriber);\n            const innerSubscription = innerSubscribe(next, innerSubscriber);\n            if (innerSubscription !== innerSubscriber) {\n                destination.add(innerSubscription);\n            }\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=onErrorResumeNext.js.map","import { not } from '../util/not';\nimport { filter } from './filter';\nexport function partition(predicate, thisArg) {\n    return (source) => [\n        filter(predicate, thisArg)(source),\n        filter(not(predicate, thisArg))(source)\n    ];\n}\n//# sourceMappingURL=partition.js.map","import { map } from './map';\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return (source) => map(plucker(properties, length))(source);\n}\nfunction plucker(props, length) {\n    const mapper = (x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp != null ? currentProp[props[i]] : undefined;\n            if (p !== void 0) {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map","import { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nexport function publishBehavior(value) {\n    return (source) => multicast(new BehaviorSubject(value))(source);\n}\n//# sourceMappingURL=publishBehavior.js.map","import { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nexport function publishLast() {\n    return (source) => multicast(new AsyncSubject())(source);\n}\n//# sourceMappingURL=publishLast.js.map","import { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    const subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n    return (source) => multicast(() => subject, selector)(source);\n}\n//# sourceMappingURL=publishReplay.js.map","import { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\nexport function race(...observables) {\n    return function raceOperatorFunction(source) {\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic(source, ...observables));\n    };\n}\n//# sourceMappingURL=race.js.map","import { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan((acc, value, index) => accumulator(acc, value, index + 1)), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map","import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function repeatWhen(notifier) {\n    return (source) => source.lift(new RepeatWhenOperator(notifier));\n}\nclass RepeatWhenOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n}\nclass RepeatWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    notifyNext() {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    }\n    notifyComplete() {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return super.complete();\n        }\n    }\n    complete() {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return super.complete();\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next(undefined);\n        }\n    }\n    _unsubscribe() {\n        const { notifications, retriesSubscription } = this;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    }\n    _unsubscribeAndRecycle() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        super._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        return this;\n    }\n    subscribeToRetries() {\n        this.notifications = new Subject();\n        let retries;\n        try {\n            const { notifier } = this;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return super.complete();\n        }\n        this.retries = retries;\n        this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n    }\n}\n//# sourceMappingURL=repeatWhen.js.map","import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n//# sourceMappingURL=retry.js.map","import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n    return (source) => source.lift(new RetryWhenOperator(notifier, source));\n}\nclass RetryWhenOperator {\n    constructor(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    }\n}\nclass RetryWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            let errors = this.errors;\n            let retries = this.retries;\n            let retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                try {\n                    const { notifier } = this;\n                    retries = notifier(errors);\n                }\n                catch (e) {\n                    return super.error(e);\n                }\n                retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n            }\n            else {\n                this.errors = undefined;\n                this.retriesSubscription = undefined;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    }\n    _unsubscribe() {\n        const { errors, retriesSubscription } = this;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    }\n    notifyNext() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    }\n}\n//# sourceMappingURL=retryWhen.js.map","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function sample(notifier) {\n    return (source) => source.lift(new SampleOperator(notifier));\n}\nclass SampleOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const sampleSubscriber = new SampleSubscriber(subscriber);\n        const subscription = source.subscribe(sampleSubscriber);\n        subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n        return subscription;\n    }\n}\nclass SampleSubscriber extends SimpleOuterSubscriber {\n    constructor() {\n        super(...arguments);\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    }\n}\n//# sourceMappingURL=sample.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler = async) {\n    return (source) => source.lift(new SampleTimeOperator(period, scheduler));\n}\nclass SampleTimeOperator {\n    constructor(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    }\n}\nclass SampleTimeSubscriber extends Subscriber {\n    constructor(destination, period, scheduler) {\n        super(destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n    }\n    _next(value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    }\n}\nfunction dispatchNotification(state) {\n    let { subscriber, period } = state;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map","import { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n    return (source) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\nexport class SequenceEqualOperator {\n    constructor(compareTo, comparator) {\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n    }\n}\nexport class SequenceEqualSubscriber extends Subscriber {\n    constructor(destination, compareTo, comparator) {\n        super(destination);\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    _next(value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    }\n    _complete() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n        this.unsubscribe();\n    }\n    checkValues() {\n        const { _a, _b, comparator } = this;\n        while (_a.length > 0 && _b.length > 0) {\n            let a = _a.shift();\n            let b = _b.shift();\n            let areEqual = false;\n            try {\n                areEqual = comparator ? comparator(a, b) : a === b;\n            }\n            catch (e) {\n                this.destination.error(e);\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    }\n    emit(value) {\n        const { destination } = this;\n        destination.next(value);\n        destination.complete();\n    }\n    nextB(value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    }\n    completeB() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    }\n}\nclass SequenceEqualCompareToSubscriber extends Subscriber {\n    constructor(destination, parent) {\n        super(destination);\n        this.parent = parent;\n    }\n    _next(value) {\n        this.parent.nextB(value);\n    }\n    _error(err) {\n        this.parent.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.completeB();\n        this.unsubscribe();\n    }\n}\n//# sourceMappingURL=sequenceEqual.js.map","import { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n    return (source) => source.lift(new SingleOperator(predicate, source));\n}\nclass SingleOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass SingleSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    applySingleValue(value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    }\n    _next(value) {\n        const index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    }\n    tryNext(value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        const destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    }\n}\n//# sourceMappingURL=single.js.map","import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nexport function skipLast(count) {\n    return (source) => source.lift(new SkipLastOperator(count));\n}\nclass SkipLastOperator {\n    constructor(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        if (this._skipCount === 0) {\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    }\n}\nclass SkipLastSubscriber extends Subscriber {\n    constructor(destination, _skipCount) {\n        super(destination);\n        this._skipCount = _skipCount;\n        this._count = 0;\n        this._ring = new Array(_skipCount);\n    }\n    _next(value) {\n        const skipCount = this._skipCount;\n        const count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            const currentIndex = count % skipCount;\n            const ring = this._ring;\n            const oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    }\n}\n//# sourceMappingURL=skipLast.js.map","import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function skipUntil(notifier) {\n    return (source) => source.lift(new SkipUntilOperator(notifier));\n}\nclass SkipUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    }\n}\nclass SkipUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier) {\n        super(destination);\n        this.hasValue = false;\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        this.add(innerSubscriber);\n        this.innerSubscription = innerSubscriber;\n        const innerSubscription = innerSubscribe(notifier, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            this.add(innerSubscription);\n            this.innerSubscription = innerSubscription;\n        }\n    }\n    _next(value) {\n        if (this.hasValue) {\n            super._next(value);\n        }\n    }\n    notifyNext() {\n        this.hasValue = true;\n        if (this.innerSubscription) {\n            this.innerSubscription.unsubscribe();\n        }\n    }\n    notifyComplete() {\n    }\n}\n//# sourceMappingURL=skipUntil.js.map","import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n//# sourceMappingURL=skipWhile.js.map","import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n//# sourceMappingURL=subscribeOn.js.map","import { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n//# sourceMappingURL=switchAll.js.map","import { switchMap } from './switchMap';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n//# sourceMappingURL=switchMapTo.js.map","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval(scheduler = async) {\n    return (source) => defer(() => {\n        return source.pipe(scan(({ current }, value) => ({ value, current: scheduler.now(), last: current }), { current: scheduler.now(), value: undefined, last: undefined }), map(({ current, last, value }) => new TimeInterval(value, current - last)));\n    });\n}\nexport class TimeInterval {\n    constructor(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n}\n//# sourceMappingURL=timeInterval.js.map","import { async } from '../scheduler/async';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\nexport function timeout(due, scheduler = async) {\n    return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n//# sourceMappingURL=timeout.js.map","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function timeoutWith(due, withObservable, scheduler = async) {\n    return (source) => {\n        let absoluteTimeout = isDate(due);\n        let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nclass TimeoutWithOperator {\n    constructor(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    }\n}\nclass TimeoutWithSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        super(destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.scheduleTimeout();\n    }\n    static dispatchTimeout(subscriber) {\n        const { withObservable } = subscriber;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(innerSubscribe(withObservable, new SimpleInnerSubscriber(subscriber)));\n    }\n    scheduleTimeout() {\n        const { action } = this;\n        if (action) {\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    }\n    _next(value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        super._next(value);\n    }\n    _unsubscribe() {\n        this.action = undefined;\n        this.scheduler = null;\n        this.withObservable = null;\n    }\n}\n//# sourceMappingURL=timeoutWith.js.map","import { async } from '../scheduler/async';\nimport { map } from './map';\nexport function timestamp(scheduler = async) {\n    return map((value) => new Timestamp(value, scheduler.now()));\n}\nexport class Timestamp {\n    constructor(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n}\n//# sourceMappingURL=timestamp.js.map","import { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n//# sourceMappingURL=toArray.js.map","import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nclass WindowOperator {\n    constructor(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    call(subscriber, source) {\n        const windowSubscriber = new WindowSubscriber(subscriber);\n        const sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(innerSubscribe(this.windowBoundaries, new SimpleInnerSubscriber(windowSubscriber)));\n        }\n        return sourceSubscription;\n    }\n}\nclass WindowSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.window = new Subject();\n        destination.next(this.window);\n    }\n    notifyNext() {\n        this.openWindow();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    notifyComplete() {\n        this._complete();\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.window = null;\n    }\n    openWindow() {\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const destination = this.destination;\n        const newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    }\n}\n//# sourceMappingURL=window.js.map","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery = 0) {\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nclass WindowCountOperator {\n    constructor(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    }\n}\nclass WindowCountSubscriber extends Subscriber {\n    constructor(destination, windowSize, startWindowEvery) {\n        super(destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    _next(value) {\n        const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        const destination = this.destination;\n        const windowSize = this.windowSize;\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        const c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            const window = new Subject();\n            windows.push(window);\n            destination.next(window);\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.count = 0;\n        this.windows = null;\n    }\n}\n//# sourceMappingURL=windowCount.js.map","import { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    let scheduler = async;\n    let windowCreationInterval = null;\n    let maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = Number(arguments[2]);\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = Number(arguments[1]);\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nclass WindowTimeOperator {\n    constructor(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    }\n}\nclass CountedSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._numberOfNextedValues = 0;\n    }\n    next(value) {\n        this._numberOfNextedValues++;\n        super.next(value);\n    }\n    get numberOfNextedValues() {\n        return this._numberOfNextedValues;\n    }\n}\nclass WindowTimeSubscriber extends Subscriber {\n    constructor(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        super(destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        const window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            const closeState = { subscriber: this, window, context: null };\n            const creationState = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            const timeSpanOnlyState = { subscriber: this, window, windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    _next(value) {\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len; i++) {\n            const window = windows[i];\n            if (!window.closed) {\n                window.next(value);\n                if (window.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window);\n                }\n            }\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            const window = windows.shift();\n            if (!window.closed) {\n                window.complete();\n            }\n        }\n        this.destination.complete();\n    }\n    openWindow() {\n        const window = new CountedSubject();\n        this.windows.push(window);\n        const destination = this.destination;\n        destination.next(window);\n        return window;\n    }\n    closeWindow(window) {\n        window.complete();\n        const windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    }\n}\nfunction dispatchWindowTimeSpanOnly(state) {\n    const { subscriber, windowTimeSpan, window } = state;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n    const window = subscriber.openWindow();\n    const action = this;\n    let context = { action, subscription: null };\n    const timeSpanState = { subscriber, window, context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    const { subscriber, window, context } = state;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map","import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowToggle(openings, closingSelector) {\n    return (source) => source.lift(new WindowToggleOperator(openings, closingSelector));\n}\nclass WindowToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass WindowToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n    }\n    _next(value) {\n        const { contexts } = this;\n        if (contexts) {\n            const len = contexts.length;\n            for (let i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    }\n    _error(err) {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        super._error(err);\n    }\n    _complete() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            let closingNotifier;\n            try {\n                const { closingSelector } = this;\n                closingNotifier = closingSelector(innerValue);\n            }\n            catch (e) {\n                return this.error(e);\n            }\n            const window = new Subject();\n            const subscription = new Subscription();\n            const context = { window, subscription };\n            this.contexts.push(context);\n            const innerSubscription = subscribeToResult(this, closingNotifier, context);\n            if (innerSubscription.closed) {\n                this.closeWindow(this.contexts.length - 1);\n            }\n            else {\n                innerSubscription.context = context;\n                subscription.add(innerSubscription);\n            }\n            this.destination.next(window);\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    }\n    notifyError(err) {\n        this.error(err);\n    }\n    notifyComplete(inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    }\n    closeWindow(index) {\n        if (index === -1) {\n            return;\n        }\n        const { contexts } = this;\n        const context = contexts[index];\n        const { window, subscription } = context;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    }\n}\n//# sourceMappingURL=windowToggle.js.map","import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nclass WindowOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass WindowSubscriber extends OuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    notifyNext(_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        this.openWindow(innerSub);\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    }\n    unsubscribeClosingNotification() {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    }\n    openWindow(innerSub = null) {\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const window = this.window = new Subject();\n        this.destination.next(window);\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (e) {\n            this.destination.error(e);\n            this.window.error(e);\n            return;\n        }\n        this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n}\n//# sourceMappingURL=windowWhen.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, undefined, i));\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=withLatestFrom.js.map","import { zip as zipStatic } from '../observable/zip';\nexport function zip(...observables) {\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic(source, ...observables));\n    };\n}\n//# sourceMappingURL=zip.js.map","import { ZipOperator } from '../observable/zip';\nexport function zipAll(project) {\n    return (source) => source.lift(new ZipOperator(project));\n}\n//# sourceMappingURL=zipAll.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n        super(SchedulerAction, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = scheduler.index += 1) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (!this.id) {\n            return super.schedule(state, delay);\n        }\n        this.active = false;\n        const action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n//# sourceMappingURL=VirtualTimeScheduler.js.map","const TimeoutErrorImpl = (() => {\n    function TimeoutErrorImpl() {\n        Error.call(this);\n        this.message = 'Timeout has occurred';\n        this.name = 'TimeoutError';\n        return this;\n    }\n    TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n    return TimeoutErrorImpl;\n})();\nexport const TimeoutError = TimeoutErrorImpl;\n//# sourceMappingURL=TimeoutError.js.map","export function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map","export { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap, flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/operator/map\");\n//# sourceMappingURL=map.js.map","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthComponent } from './auth.component'\r\nimport { LoginComponent } from './login/login.component'\r\nimport { RequestPasswordComponent } from './request-password/request-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent\r\n      },\r\n      {\r\n        path: 'request-password',\r\n        component: RequestPasswordComponent\r\n      },\r\n      {\r\n        path: 'reset-password/:tokenPassword',\r\n        component: ResetPasswordComponent\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<nb-layout>\r\n  <nb-layout-column>\r\n    <nb-card>\r\n      <nb-card-header>\r\n        <nav class=\"navigation\">\r\n          <a href=\"#\" class=\"link\" aria-label=\"Back\"><i class=\"icon nb-arrow-thin-left\"></i></a>\r\n        </nav>\r\n      </nb-card-header>\r\n      <nb-card-body>\r\n        <nb-auth-block>\r\n        <router-outlet></router-outlet>\r\n      </nb-auth-block>\r\n\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </nb-layout-column>\r\n</nb-layout>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  NbActionsModule,\r\n  NbAlertModule,\r\n  NbButtonModule,\r\n  NbLayoutModule,\r\n  NbCardModule,\r\n  NbProgressBarModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbIconModule,\r\n  NbSelectModule,\r\n  NbListModule,\r\n  NbInputModule,\r\n  NbCheckboxModule\r\n} from '@nebular/theme';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { AuthComponent } from './auth.component';\r\nimport { NbAuthModule } from '@nebular/auth';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ChartModule } from 'angular2-chartjs';\r\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RequestPasswordComponent } from './request-password/request-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NbAuthModule,\r\n    NbInputModule,\r\n    NbCheckboxModule,\r\n    AuthRoutingModule,\r\n    NgxEchartsModule,\r\n    NgxChartsModule,\r\n    ThemeModule,\r\n    ReactiveFormsModule,\r\n    NbButtonModule,\r\n    NbCardModule,\r\n    NbProgressBarModule,\r\n    NbTabsetModule,\r\n    NbUserModule,\r\n    NbIconModule,\r\n    NbSelectModule,\r\n    NbListModule,\r\n    NbLayoutModule,\r\n    ChartModule,\r\n    LeafletModule,\r\n    NbActionsModule,\r\n    NbAlertModule,\r\n    FormsModule\r\n\r\n  ],\r\n  declarations: [\r\n    AuthComponent,\r\n    LoginComponent,\r\n    RequestPasswordComponent,\r\n    ResetPasswordComponent,\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { OnInit } from '@angular/core';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../others/models/employee';\r\nimport { LoginService } from '../others/services/login.service';\r\nimport * as global from '../../GLOBAL';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { NotificationsComponent } from '../../users/others/source/notifications/notifications.component';\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n  ERROR_MIN = global.GLOBAL.ERROR_MIN;\r\n  ERROR_NUMBER = global.GLOBAL.ERROR_NUMBER\r\n  errors = false;\r\n\r\n  form: FormGroup = new FormGroup({\r\n    username: new FormControl('', [ Validators.required ]),\r\n    password: new FormControl('', [ Validators.required, Validators.minLength(7) ])\r\n  })\r\n  username: string = \"\";\r\n  password: string = \"\";\r\n  user: User;\r\n  public identity: any;\r\n\r\n  notification: NotificationsComponent;\r\n\r\n  constructor(private router: Router, private loginService: LoginService, private toastrService: NbToastrService){}\r\n\r\n  submit(){\r\n    if(this.form.valid){\r\n      this.validateLogin(this.form.value);\r\n    } else {\r\n      this.errors = true;\r\n    }\r\n  }\r\n\r\n  private validateLogin(user: User){\r\n    this.loginService.login(user.username, user.password).subscribe(response => {\r\n      this.user = response.employee;\r\n      localStorage.setItem('user', JSON.stringify(this.user));\r\n      localStorage.setItem('token', response.token);\r\n      this.loginService.setUserSesion(true);\r\n      if(this.user.type == 1){\r\n        this.router.navigate(['/views/users/admin'])\r\n      } else if(this.user.type == 2){\r\n        this.router.navigate(['/views/users/operator'])\r\n      } else if(this.user.type == 3){\r\n        this.router.navigate(['/views/users/recep'])\r\n      }\r\n    },\r\n    (error) => {\r\n      this.notification.showToast(4, 'Error', `Credenciales invalidas`, 2500);\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n  }\r\n\r\n}\r\n","<h1 id=\"title\" class=\"title\">Login</h1>\r\n<p class=\"sub-title\">Hola! Bienvenido otra vez.</p>\r\n<form [formGroup]=\"form\" aria-labelledby=\"title\">\r\n  <div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-email\">Username</label>\r\n    <input nbInput\r\n           fullWidth\r\n           formControlName=\"username\"\r\n           name=\"email\"\r\n           id=\"input-email\"\r\n           placeholder=\"Username\"\r\n           fieldSize=\"large\"\r\n           autofocus>\r\n    <div *ngIf=\"errors\">\r\n      <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('username').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-control-group\">\r\n    <span class=\"label-with-link\">\r\n      <label class=\"label\" for=\"input-password\">Password:</label>\r\n      <a class=\"forgot-password caption-2\" routerLink=\"../request-password\">Forgot Password?</a>\r\n    </span>\r\n    <input nbInput\r\n           fullWidth\r\n           formControlName=\"password\"\r\n           name=\"password\"\r\n           type=\"password\"\r\n           id=\"input-password\"\r\n           placeholder=\"Password\"\r\n           fieldSize=\"large\">\r\n    <div *ngIf=\"errors\">\r\n      <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('password').hasError('required')\">{{ERROR_REQUIRED}}</label><br>\r\n      <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('password').hasError('minLength')\">El campo debe tener almenos 10 caracteres</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-control-group accept-group\">\r\n    <nb-checkbox name=\"rememberMe\">Remember me</nb-checkbox>\r\n  </div>\r\n\r\n  <button nbButton\r\n          fullWidth\r\n          [disabled]=\"form.invalid\"\r\n          (click)=\"submit()\"\r\n          status=\"primary\"\r\n          size=\"large\">\r\n    Log In\r\n  </button>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(private router: Router, private loginService: LoginService){}\r\n\r\n  canActivate(){\r\n    let identity = this.loginService.getIdentity();\r\n    if(identity){\r\n      if(identity.type == 1){\r\n        return true;\r\n      } else if(identity.type == 2){\r\n        this.router.navigate(['/views/users/operator'])\r\n        return false;\r\n      } else if(identity.type == 3){\r\n        this.router.navigate(['/views/users/recep']);\r\n        return false;\r\n      }\r\n    } else {\r\n      this.router.navigate(['/views/auth/login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OperatorGuard implements CanActivate {\r\n\r\n  constructor(private router: Router, private loginService: LoginService){}\r\n\r\n  canActivate(){\r\n    let identity = this.loginService.getIdentity();\r\n    if(identity){\r\n      if(identity.type == 1){\r\n        this.router.navigate(['/views/users/admin']);\r\n        return false;\r\n      } else if(identity.type == 2){\r\n        return true;\r\n      } else if(identity.type == 3){\r\n        this.router.navigate(['/views/users/recep']);\r\n        return false;\r\n      }\r\n    } else {\r\n      this.router.navigate(['/views/auth/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecepGuard implements CanActivate {\r\n\r\n  constructor(private router: Router, private loginService: LoginService){}\r\n\r\n  canActivate(){\r\n    let identity = this.loginService.getIdentity();\r\n    if(identity){\r\n      if(identity.type == 1){\r\n        this.router.navigate(['/views/users/admin']);\r\n        return false;\r\n      } else if(identity.type == 2){\r\n        this.router.navigate(['/views/users/operator']);\r\n        return false;\r\n      } else if(identity.type == 3){\r\n        return true;\r\n      }\r\n    } else {\r\n      this.router.navigate(['/views/auth/login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient }from '@angular/common/http';\r\nimport * as global from '../../../../GLOBAL';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthPasswordService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  sendEmail(data : any) {\r\n    return this.http.post<any>(global.GLOBAL.urlApi +\"/email/send-email-forgot-password/\", data);\r\n  }\r\n\r\n  searchUserByEmail(email : any) {\r\n    return this.http.get<any>(global.GLOBAL.urlApi +\"/employee/search-by-email/\" + email);\r\n  }\r\n\r\n  changePassword(data : any) {\r\n    return this.http.post<any>(`${global.GLOBAL.urlApi}/employee/change-password/`, data);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthPasswordService } from '../others/services/password/auth-password.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-request-password',\r\n  templateUrl: './request-password.component.html',\r\n  styleUrls: ['./request-password.component.scss']\r\n})\r\n\r\nexport class RequestPasswordComponent implements OnInit {\r\n\r\n  form : FormGroup = new FormGroup ({\r\n    email : new FormControl(null, [\r\n      Validators.required,\r\n      Validators.email\r\n    ])\r\n  })\r\n\r\n  showMessages = {\r\n    error : false,\r\n    success : false,\r\n  }\r\n\r\n  user = {\r\n    email : ''\r\n  };\r\n\r\n  errors = [];\r\n  messages = [];\r\n\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private api : AuthPasswordService,\r\n    private router : Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  requestPass() {\r\n    this.form.controls['email'].setValue(this.user.email);\r\n    if (this.form.valid) {\r\n      this.searchUserByEmail(this.user.email);\r\n    } else {\r\n      this.showMessages.error = false;\r\n      this.errors.push('El correo electronico es obligatorio');\r\n      this.errors.push('El correo electronico debe de tener el formato de: example@gmail.com');\r\n    }\r\n  }\r\n\r\n  private searchUserByEmail(email){\r\n    this.api.searchUserByEmail(email)\r\n    .subscribe({\r\n      next : (res) => {\r\n        this.showMessages.error = false;\r\n        this.sendEmailForgotPassword(res.email, res.username);\r\n      },\r\n      error : (err) => {\r\n        this.showMessages.error = true;\r\n        this.errors = [];\r\n        if (err.status == 404) {\r\n          console.log(err);\r\n          this.errors.push('Error no existe un usuario registrado con el correo electrónico: \"' + email +'\", vuelve a intentarlo');\r\n        } else {\r\n          this.errors.push('Error mientras se enviaba el correo electrónico, vuelve a intentarlo');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private sendEmailForgotPassword(email, useranme){\r\n    const userForgotPassword = {\r\n      mailTo: email,\r\n      username: useranme\r\n    }\r\n    this.api.sendEmail(userForgotPassword)\r\n      .subscribe({\r\n        next : (res) => {\r\n          this.showMessages.success = true;\r\n          this.messages.push('Se a enviado el correo electrónico para restablecer la contraseña, por favor revisa tu correo.');\r\n          setTimeout(() => {\r\n            this.form.reset();\r\n            this.user.email = '';\r\n            this.router.navigate(['views', 'auth', 'login']);\r\n          }, 3500);\r\n        },\r\n        error : (err) => {\r\n          this.errors = [];\r\n          console.log(err);\r\n          this.showMessages.error = true;\r\n          this.errors.push('Error mientras se enviaba el correo electrónico, vuelve a intentarlo')\r\n        }\r\n      });\r\n  }\r\n}\r\n","<h1 id=\"title\" class=\"title\">Has olvidado tu contraseña</h1>\r\n<p class=\"sub-title\">Ingrese su dirección de correo electrónico y le enviaremos un enlace para restablecer su contraseña</p>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n    <p class=\"alert-title\"><b>¡Oh, no hay algunos errores!</b></p>\r\n    <ul class=\"alert-message-list\">\r\n        <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n    </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n    <p class=\"alert-title\"><b>¡Que bien!</b></p>\r\n    <ul class=\"alert-message-list\">\r\n        <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n    </ul>\r\n</nb-alert>\r\n\r\n<form \r\n    (ngSubmit)=\"requestPass()\" \r\n    #requestPassForm=\"ngForm\" \r\n    aria-labelledby=\"title\"\r\n    >\r\n\r\n    <div class=\"form-control-group\">\r\n        <label class=\"label\" for=\"input-email\">Ingrese su dirección de correo electrónico:</label>\r\n        <input nbInput \r\n            [(ngModel)]=\"user.email\"\r\n            #email=\"ngModel\" \r\n            id=\"input-email\" \r\n            name=\"email\"\r\n            pattern=\".+@.+\\..+\"\r\n            placeholder=\"Dirección de correo electrónico\" \r\n            autofocus \r\n            fullWidth \r\n            fieldSize=\"large\"\r\n            [status]=\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\"\r\n            [required]=\"true\"\r\n            [attr.aria-invalid]=\"email.invalid && email.touched ? true : null\">\r\n        <ng-container *ngIf=\"email.invalid && email.touched\">\r\n            <p class=\"caption status-danger\" *ngIf=\"email.errors?.required\">\r\n                <b>El correo electrónico es obligatorio</b>\r\n            </p>\r\n            <p class=\"caption status-danger\" *ngIf=\"email.errors?.pattern\">\r\n                <b>¡El correo electrónico debe ser el real!</b>\r\n            </p>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <button nbButton fullWidth status=\"primary\" size=\"large\" [disabled]=\"submitted || !requestPassForm.valid\"\r\n        [class.btn-pulse]=\"submitted\">\r\n        Enviar\r\n    </button>\r\n</form>\r\n\r\n<section class=\"sign-in-or-up\" aria-label=\"Sign in or sign up\">\r\n    <p><a class=\"text-link\" routerLink=\"../login\">Inicio de Sesión</a></p>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthPasswordService } from '../others/services/password/auth-password.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport * as e from 'cors';\r\n\r\n@Component({\r\n  selector: 'ngx-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\n\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  form : FormGroup = new FormGroup ({\r\n    password : new FormControl(null, [\r\n      Validators.required,\r\n      Validators.minLength(0)\r\n    ]),\r\n    confirmPassword : new FormControl(null, [\r\n      Validators.required,\r\n      Validators.minLength(0)\r\n    ])\r\n  })\r\n\r\n  showMessages = {\r\n    error : false,\r\n    success : false,\r\n  }\r\n\r\n  user = {\r\n    password : '',\r\n    confirmPassword : ''\r\n  };\r\n\r\n  errors = [];\r\n  messages = [];\r\n  submitted = false;\r\n\r\n  employee = null;\r\n\r\n  constructor(\r\n    private api : AuthPasswordService,\r\n    private route: ActivatedRoute,\r\n    private router : Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  resetPass() {\r\n    // Obteniendo el Token\r\n    const tokenPassword = this.route.snapshot.paramMap.get('tokenPassword');\r\n    this.form.controls['password'].setValue(this.user.password);\r\n    this.form.controls['confirmPassword'].setValue(this.user.confirmPassword);\r\n    if (this.form.valid) {\r\n      const changePasswordDTO = {\r\n        password : this.user.password,\r\n        confirmPassword : this.user.confirmPassword,\r\n        tokenPassword : tokenPassword\r\n      }\r\n      console.log(changePasswordDTO);      \r\n      this.api.changePassword(changePasswordDTO) \r\n      .subscribe({\r\n        next : (res) => {\r\n          this.showMessages.error = false;\r\n          this.errors = [];\r\n          this.showMessages.success = true;\r\n          this.messages.push('Se realizo el cambio de contraseña, con exito.');\r\n            setTimeout(() => {\r\n              this.form.reset();\r\n              this.user.password = '';\r\n              this.user.confirmPassword = '';\r\n              this.router.navigate(['views', 'auth', 'login']);\r\n            }, 3500);\r\n        },\r\n        error : (err) => {\r\n          this.errors = [];\r\n          this.showMessages.error = true;\r\n          if (err.status == 400) {\r\n            this.errors.push(\"Las contraseñas no coinciden.\"); \r\n          } else if (err.status == 404) {\r\n            this.errors.push(\"No se encuentra registrado un empleado con las credenciales indicadas.\"); \r\n          } else {\r\n            this.errors.push(\"Error al restablecer la contraseñas, por favor vuelve a intentarlo.\")\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.showMessages.error = false;\r\n      this.errors.push('Las contraseñas deben de conincidir');\r\n      this.errors.push('La contraseña debe de contener un un minimo de ' + this.getConfigValue('minLength') + ' caracteres');\r\n    }\r\n  }\r\n\r\n  getConfigValue(val){\r\n    switch (val) {\r\n      case 'required':\r\n        return true;\r\n      case 'minLength':\r\n        return 8;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 id=\"title\" class=\"title\">Cambia la contraseña</h1>\r\n<p class=\"sub-title\">Por favor establezca una nueva contraseña</p>\r\n\r\n<nb-alert *ngIf=\"showMessages.error && errors?.length && !submitted\" outline=\"danger\" role=\"alert\">\r\n    <p class=\"alert-title\"><b>¡Oh, no hay algunos errores!</b></p>\r\n    <ul class=\"alert-message-list\">\r\n        <li *ngFor=\"let error of errors\" class=\"alert-message\">{{ error }}</li>\r\n    </ul>\r\n</nb-alert>\r\n\r\n<nb-alert *ngIf=\"showMessages.success && messages?.length && !submitted\" outline=\"success\" role=\"alert\">\r\n    <p class=\"alert-title\"><b>¡Que bien!</b></p>\r\n    <ul class=\"alert-message-list\">\r\n        <li *ngFor=\"let message of messages\" class=\"alert-message\">{{ message }}</li>\r\n    </ul>\r\n</nb-alert>\r\n\r\n<form (ngSubmit)=\"resetPass()\" #resetPassForm=\"ngForm\" aria-labelledby=\"title\">\r\n\r\n<div class=\"form-control-group\">\r\n    <label class=\"label\" for=\"input-password\">Nueva contraseña:</label>\r\n    <input nbInput\r\n            [(ngModel)]=\"user.password\"\r\n            #password=\"ngModel\"\r\n            type=\"password\"\r\n            id=\"input-password\"\r\n            name=\"password\"\r\n            class=\"first\"\r\n            placeholder=\"Nueva contraseña\"\r\n            autofocus\r\n            fullWidth\r\n            fieldSize=\"large\"\r\n            [status]=\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\"\r\n            [required]=\"getConfigValue('required')\"\r\n            [minlength]=\"getConfigValue('minLength')\"\r\n            [attr.aria-invalid]=\"password.invalid && password.touched ? true : null\">\r\n    <ng-container *ngIf=\"password.invalid && password.touched\">\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.required\">\r\n        <b>¡Se requiere contraseña!</b>\r\n        </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"password.errors?.minlength || password.errors?.maxlength\">\r\n        <b>La contraseña debe contener\r\n        un minimo de {{getConfigValue('minLength')}}\r\n        caracteres</b>\r\n        </p>\r\n    </ng-container>\r\n</div>\r\n\r\n<div class=\"form-group\">\r\n    <label class=\"label\" for=\"input-re-password\">Confirmar contraseña:</label>\r\n    <input nbInput\r\n            [(ngModel)]=\"user.confirmPassword\"\r\n            #rePass=\"ngModel\"\r\n            id=\"input-re-password\"\r\n            name=\"rePass\"\r\n            type=\"password\"\r\n            class=\"last\"\r\n            placeholder=\"Confirmar contraseña\"\r\n            fullWidth\r\n            fieldSize=\"large\"\r\n            [status]=\"rePass.touched\r\n                ? (rePass.invalid || password.value != rePass.value ? 'danger' : 'success')\r\n                : 'basic'\"\r\n            [required]=\"getConfigValue('required')\"\r\n            [attr.aria-invalid]=\"rePass.invalid && rePass.touched ? true : null\">\r\n    <ng-container *ngIf=\"rePass.touched\">\r\n      <p class=\"caption status-danger\" *ngIf=\"rePass.invalid && rePass.errors?.required\">\r\n        <b>¡Se requiere la confirmación de contraseña!</b>\r\n        </p>\r\n      <p class=\"caption status-danger\" *ngIf=\"password.value != rePass.value && !rePass.errors?.required\">\r\n        <b>La contraseña no coincide con la contraseña de confirmación.</b>\r\n        </p>\r\n    </ng-container>\r\n</div>\r\n\r\n<button nbButton\r\n            status=\"primary\"\r\n            fullWidth\r\n            size=\"large\"\r\n            [disabled]=\"submitted || !resetPassForm.valid\"\r\n            [class.btn-pulse]=\"submitted\">\r\n    Cambiar la contraseña\r\n</button>\r\n</form>\r\n\r\n<section class=\"sign-in-or-up\" aria-label=\"Sign in or sign up\">\r\n    <p><a class=\"text-link\" [routerLink]=\"['/views/auth/login']\">Iniciar sesión</a></p>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NbThemeService, NbToastrService } from '@nebular/theme';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { takeWhile } from 'rxjs/operators' ;\r\nimport { CustomServerDataSource } from '../../users/others/models/CustomServerDataSource';\r\nimport { DestinationService } from '../../users/others/services/destination/destination.service';\r\nimport { RouteService } from '../../users/others/services/route/route.service';\r\nimport { NotificationsComponent } from '../../users/others/source/notifications/notifications.component';\r\n\r\ninterface CardSettings {\r\n  title: string;\r\n  iconClass: string;\r\n  type: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-packages-on-a-route',\r\n  templateUrl: './packages-on-a-route.component.html',\r\n  styleUrls: ['./packages-on-a-route.component.scss']\r\n})\r\nexport class PackagesOnARouteComponent implements OnInit {\r\n\r\n  private alive = true;\r\n  source: CustomServerDataSource;\r\n  showPerPage = 10;\r\n\r\n  settings = {\r\n    mode: 'external', \r\n    noDataMessage: 'No exite ninguna ruta en el sistema con el estado indicado.',\r\n    pager:{\r\n      display: true,\r\n      perPage: this.showPerPage,\r\n    },\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n      },\r\n      active: {\r\n        title: 'Estado',\r\n        type: 'string',\r\n        valuePrepareFunction: (state) => {\r\n          return `${state == 1 ? 'Activa' : 'Desactivada'}`;\r\n        },\r\n      },\r\n      name: {\r\n        title: 'Nombre',\r\n        type: 'string',\r\n        compareFunction: 'sortName'\r\n      },\r\n      destination: {\r\n        title: 'Destino',\r\n        type: 'string',\r\n        valuePrepareFunction: (destination) => {\r\n          return `${destination.name}`;\r\n        }\r\n      },\r\n      packagesOnRoute: {\r\n        title: 'Paquetes en Ruta',\r\n        type: 'number',\r\n      },\r\n      totalPackages: {\r\n        title: 'Paquetes Salidos',\r\n        type: 'number',\r\n      },\r\n    },\r\n    defaultStyle: false,\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n    },\r\n  };\r\n\r\n  on = true;\r\n\r\n  statusCard: CardSettings = {\r\n    title: 'Estado',\r\n    iconClass: 'nb-checkmark',\r\n    type: 'success',\r\n  };\r\n  statusCards: string;\r\n\r\n  commonStatusCardsSet: CardSettings[] = [\r\n    this.statusCard,\r\n  ];\r\n\r\n  statusCardsByThemes: {\r\n    default: CardSettings[];\r\n    cosmic: CardSettings[];\r\n    corporate: CardSettings[];\r\n    dark: CardSettings[];\r\n  } = {\r\n    default: this.commonStatusCardsSet,\r\n    cosmic: this.commonStatusCardsSet,\r\n    corporate: [\r\n      {\r\n        ...this.statusCard,\r\n        type: 'success',\r\n      },\r\n    ],\r\n    dark: this.commonStatusCardsSet,\r\n  };\r\n\r\n  notification : NotificationsComponent;\r\n\r\n\r\n\r\n  constructor(\r\n    private api : RouteService,\r\n    private apiDestination : DestinationService,\r\n    private router : Router,\r\n    private toastrService : NbToastrService,\r\n    private themeService: NbThemeService\r\n  ) { \r\n    this.themeService.getJsTheme()\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe(theme => {\r\n        this.statusCards = this.statusCardsByThemes[theme.name];\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.getAllRoutes();\r\n  }\r\n\r\n  getAllRoutes() {\r\n    this.source = null;\r\n    this.source = this.api.getAllRoutesPaginated();\r\n  }\r\n\r\n  private getAllRoutesStatus() {\r\n    this.source = null;\r\n    this.source = this.api.getRoutesByActivePaginated(this.on);\r\n  }\r\n\r\n  status() {\r\n    this.on = !this.on;\r\n    this.getAllRoutesStatus();\r\n    return this.on;\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xxxl-3 col-md-6\">\r\n        <nb-card class=\"card-status\" (click)=\"status()\" [ngClass]=\"{'off': !on}\">\r\n            <div class=\"icon-container\">\r\n              <div class=\"icon status-{{ statusCard.type }}\">\r\n                <i [ngClass]=\"statusCard.iconClass\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"details\">\r\n              <div class=\"title h5\">{{ statusCard.title }}</div>\r\n              <div class=\"status paragraph-2\">{{ on ? 'Activado' : 'Desactivado' }}</div>\r\n            </div>\r\n        </nb-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <nb-card >\r\n        <nb-card-header>\r\n          Reporte de paquetes en Rutas &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <button nbButton status=\"primary\" (click)=\"getAllRoutes()\" ghost>\r\n            Todos\r\n          </button>\r\n        </nb-card-header>\r\n      \r\n        <nb-card-body>\r\n          <ng2-smart-table \r\n          [settings]=\"settings\" \r\n          [source]=\"source\"\r\n          >\r\n          </ng2-smart-table>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</div>\r\n\r\n","import { Component, ComponentFactoryResolver, OnInit } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Route } from '../../users/others/models/Route';\nimport { AdminService } from '../../users/others/services/admin.service';\n\n@Component({\n  selector: 'ngx-profits-per-route',\n  templateUrl: './profits-per-route.component.html',\n  styleUrls: ['./profits-per-route.component.scss']\n})\nexport class ProfitsPerRouteComponent implements OnInit {\n\n  routes: Route[];\n  route: Route;\n\n  settings = {\n    actions: {\n      edit: false,\n      add: false,\n      delete: false\n    },\n    columns: {\n      name: {\n        title: 'Ruta',\n        type: 'string'\n      },\n      income: {\n        title: 'Ingresos',\n        type: 'number'\n      },\n      costs: {\n        title: 'Costos',\n        type: 'number'\n      },\n      profits: {\n        title: 'Ganancias',\n        type: 'number'\n      }\n    }\n  }\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, private adminService: AdminService) {\n    this.getData();\n  }\n\n  getData(){\n    this.adminService.getAllRoutes().subscribe(response => {\n      this.routes = response;\n      this.source.load(this.routes)\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nb-card id=\"table-employeers\">\n  <nb-card-header>\n    Listado de usuarios\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\">\n    </ng2-smart-table>\n\n\n  </nb-card-body>\n</nb-card>\n<ng-container #container></ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\n\ninterface TreeNode<T>{\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  ruta: string;\n  paquetes_actuales: number;\n  total_paquetes: number;\n}\n\n@Component({\n  selector: 'ngx-report2',\n  templateUrl: './report2.component.html',\n  styleUrls: ['./report2.component.scss']\n})\nexport class Report2Component implements OnInit {\n\n  customColumn = 'ruta';\n  defaultColumns = [ 'paquetes_actuales', 'total_paquetes' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  dataSource: NbTreeGridDataSource<FSEntry>;\n\n  sortColumn: string;\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\n\n\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>) {\n    this.dataSource = this.dataSourceBuilder.create(this.data);\n  }\n\n  updateSort(sortRequest: NbSortRequest): void {\n    this.sortColumn = sortRequest.column;\n    this.sortDirection = sortRequest.direction;\n  }\n\n  getSortDirection(column: string): NbSortDirection {\n    if(this.sortColumn === column) {\n      return this.sortDirection;\n    }\n    return NbSortDirection.NONE;\n  }\n\n  private data: TreeNode<FSEntry>[];\n\n  putData(){\n    //data\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nb-card>\n  <nb-card-body>\n\n    <label class=\"search-label\" for=\"search\">Search:</label>\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\n\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\n\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\n          {{customColumn}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\n          {{row.data[customColumn]}}\n        </td>\n      </ng-container>\n\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\n                    [nbTreeGridColumnDef]=\"column\"\n                    [showOn]=\"getShowOn(index)\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\n          {{column}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column] || '-'}}</td>\n      </ng-container>\n\n    </table>\n\n  </nb-card-body>\n</nb-card>\n","import { Component, ComponentFactoryResolver, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Client } from '../../../users/others/models/Client';\nimport { ReportService } from '../../../users/others/services/report.service';\nimport { PackagesComponent } from '../packages/packages.component';\n\n@Component({\n  selector: 'ngx-invoice',\n  templateUrl: './invoice.component.html',\n  styleUrls: ['./invoice.component.scss']\n})\nexport class InvoiceComponent implements OnInit {\n\n  @ViewChild('container2', { read: ViewContainerRef })\n  container2!: ViewContainerRef;\n\n  @Input() clientReceive: Client;\n  @Input() equis: any;\n\n  settings2 = {\n    actions: {\n      columnTitle: 'Ver paquetes',\n      add: false,\n      edit: false,\n      delete: false,\n      custom: [\n        { name: 'seeDetails', title: '<i class=\"nb-list\"></i>' }\n    ],\n      position: 'right'\n    },\n    columns: {\n      id: {\n        title: 'No. Factura',\n        type: 'number'\n      },\n      dateEmit: {\n        title: 'Fecha de emision',\n        type: 'string'\n      },\n      total: {\n        title: 'Total',\n        type: 'number',\n        valuePrepareFunction: (total) => {\n          return `Q. ${total}`\n        }\n      },\n    }\n  }\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private reportService: ReportService, private router: Router, private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  getInvoices(){\n    this.source.load(this.clientReceive.myInvoices)\n  }\n\n  onCustomAction(event){\n    console.log(event.data)\n    const dynamicComponentFactory = this.componentFactoryResolver.resolveComponentFactory(PackagesComponent);\n    const componentRef = this.container2.createComponent(dynamicComponentFactory);\n    componentRef.instance.invoiceReceive = event.data;\n    document.getElementById('table-invoices').style.display = \"none\";\n\n  }\n\n  //vuelve a la pagina inicial\n  back(){\n    this.router.navigate(['/views/reports/report-3']);\n  }\n\n  ngOnInit(): void {\n    this.getInvoices();\n  }\n\n}\n","<nb-card id=\"table-invoices\">\n  <nb-card-header>\n    <form class=\"form-inline\">\n\n    Facturas del cliente: {{clientReceive.name}} {{clientReceive.lastname}}&nbsp;&nbsp;\n    <input type=\"hidden\" nbInput fullWidth placeholder=\"Email\">\n\n    <button type=\"submit\" nbButton status=\"primary\"  (click)=\"back()\" hero>Volver</button>&nbsp;&nbsp;\n    </form>\n  </nb-card-header>\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings2\" [source]=\"source\" (custom)=\"onCustomAction($event)\">\n    </ng2-smart-table>\n\n  </nb-card-body>\n</nb-card>\n<ng-container #container2></ng-container>\n\n","import { Component, ComponentFactoryResolver, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Invoice } from '../../../users/others/models/Invoice';\nimport { ReportService } from '../../../users/others/services/report.service';\nimport { Package } from '../../../users/others/models/Package';\n\n@Component({\n  selector: 'ngx-packages',\n  templateUrl: './packages.component.html',\n  styleUrls: ['./packages.component.scss']\n})\nexport class PackagesComponent implements OnInit {\n\n  @ViewChild('container', { read: ViewContainerRef })\n  container!: ViewContainerRef;\n\n  @Input() invoiceReceive: Invoice;\n  packages: Package[];\n\n  settings = {\n    actions: {\n      columnTitle: 'Ver detalles',\n      add: false,\n      edit: false,\n      delete: false,\n      position: 'right'\n    },\n    columns: {\n      onWay: {\n        title: 'En camino',\n        type: 'boolean',\n        valuePrepareFunction: (onWay) => {\n          if(!onWay) return 'Aun en cola'\n          if(onWay) return 'Afirmativo'\n        }\n      },\n      atDestination: {\n        title: 'En destino',\n        type: 'boolean'\n      },\n      retired: {\n        title: 'Retirado',\n        type: 'boolean'\n      },\n      description: {\n        title: 'Descripcion',\n        type: 'string'\n      },\n      priority: {\n        title: 'Prioridad',\n        type: 'boolean'\n      },\n      weight: {\n        title: 'Peso(Kg)',\n        type: 'number'\n      },\n      unitTotal: {\n        title: 'Total Unitario',\n        type: 'number',\n        valuePrepareFunction: (unitTotal) => {\n          return `Q. ${unitTotal}`\n        }\n      }\n    }\n  }\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private reportService: ReportService, private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  getPackages(){\n    this.reportService.getPackagesByInvoice(this.invoiceReceive.id).subscribe(response => {\n      this.packages = response;\n      this.source.load(this.packages)\n    })\n  }\n\n  close(){\n    document.getElementById('table-packages')?.remove();\n    document.getElementById('table-invoices').style.display = 'block';\n  }\n\n  ngOnInit(): void {\n    console.log(this.invoiceReceive+\"    asdfasd \")\n    this.getPackages();\n  }\n\n}\n","<nb-card id=\"table-packages\">\n  <nb-card-header>\n    Paquetes de la factura NO. {{invoiceReceive.id}}&nbsp;&nbsp;\n    <input type=\"hidden\" nbInput fullWidth placeholder=\"Email\">\n\n    <button type=\"submit\" nbButton status=\"primary\"  (click)=\"close()\" hero>Volver</button>&nbsp;&nbsp;\n  </nb-card-header>\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\">\n    </ng2-smart-table>\n\n\n  </nb-card-body>\n  <ng-container #container></ng-container>\n\n</nb-card>\n\n","import { Component, ComponentFactoryResolver, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Client } from '../../users/others/models/Client';\nimport { Invoice } from '../../users/others/models/Invoice';\nimport { ReportService } from '../../users/others/services/report.service';\nimport { InvoiceComponent } from './invoice/invoice.component';\n\n\n@Component({\n  selector: 'ngx-report3',\n  templateUrl: './report3.component.html',\n  styleUrls: ['./report3.component.scss']\n})\nexport class Report3Component implements OnInit {\n\n\n  @ViewChild('containerA', { read: ViewContainerRef })\n  containerA!: ViewContainerRef;\n\n  clients: Client[];\n\n  client: Client;\n  settings = {\n    actions: {\n      columnTitle: 'Ver facturas',\n      add: false,\n      edit: false,\n      delete: false,\n      custom: [\n        { name: 'seeDetails', title: '<i class=\"nb-list\"></i>' }\n    ],\n      position: 'right'\n    },\n    columns: {\n      name: {\n        title: 'Nombres',\n        type: 'string'\n      },\n      lastname: {\n        title: 'Apellidos',\n        type: 'string'\n      },\n      nit: {\n        title: 'NIT',\n        type: 'number'\n      },\n      cui: {\n        title: 'CUI',\n        type: 'number'\n      },\n      totalIngresos: {\n        title: 'Ingresos',\n        type: 'number',\n        valuePrepareFunction: (totalIngresos) => {\n          return `Q. ${totalIngresos}`\n        }\n      }\n    }\n  }\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private reportService: ReportService, private componentFactoryResolver: ComponentFactoryResolver) {\n    this.getClients();\n  }\n\n\n\n  getClients(){\n    this.reportService.getAllClients().subscribe(response => {\n      this.clients = response;\n      for(let i=0; i < this.clients.length; i++){\n          this.reportService.getAllInvoices(this.clients[i].nit).subscribe(respInv => {\n          if(respInv != null){\n            this.clients[i].myInvoices = respInv;\n            this.calculateTotalIngresos(i);\n            console.log( this.clients[i].totalIngresos)\n          }\n          this.source.load(this.clients)\n        })\n      }\n    })\n  }\n\n  onCustomAction(event): void {\n    console.log(event.data)\n    const dynamicComponentFactory = this.componentFactoryResolver.resolveComponentFactory(InvoiceComponent);\n    const componentRef = this.containerA.createComponent(dynamicComponentFactory);\n    componentRef.instance.clientReceive = event.data;\n    componentRef.instance.equis = \"asfasfasdf\";\n    document.getElementById('table-clients').style.display = \"none\";\n  }\n\n  calculateTotalIngresos(iterador:any){\n    let total = 0;\n    for(let i = 0; i < this.clients[iterador].myInvoices.length; i++){\n      total = total + this.clients[iterador].myInvoices[i].total;\n    }\n    this.clients[iterador].totalIngresos = total;\n\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<nb-card id=\"table-clients\">\n  <nb-card-header>\n    Reporte de Clientes\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (custom)=\"onCustomAction($event)\">\n    </ng2-smart-table>\n\n\n  </nb-card-body>\n</nb-card>\n<ng-container #containerA></ng-container>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGuard } from '../auth/others/guards/admin.guard';\r\nimport { PackagesOnARouteComponent } from './packages-on-a-route/packages-on-a-route.component';\r\nimport { ProfitsPerRouteComponent } from './profits-per-route/profits-per-route.component';\r\nimport { Report2Component } from './report2/report2.component';\r\nimport { Report3Component } from './report3/report3.component';\r\nimport { ReportsComponent } from './reports.component';\r\nimport { TopOfRoutesComponent } from './top-of-routes/top-of-routes.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReportsComponent,\r\n    children: [\r\n      { // views/reports/report-1\r\n        path: 'report-1',\r\n        component: PackagesOnARouteComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'report-2',\r\n        component: ProfitsPerRouteComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'report-3',\r\n        component: Report3Component,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'report-4',\r\n        component: TopOfRoutesComponent,\r\n        canActivate: [AdminGuard]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ADMINISTRATOR_MENU_ITEMS } from '../users/admin/menu';\r\n\r\n@Component({\r\n  selector: 'ngx-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  menu = ADMINISTRATOR_MENU_ITEMS;\r\n\r\n}\r\n","<ngx-one-column-layout>\r\n  <nb-menu [items]=\"menu\"></nb-menu>\r\n  <router-outlet></router-outlet>\r\n</ngx-one-column-layout>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  NbRadioModule,\r\n  NbButtonModule,\r\n  NbLayoutModule,\r\n  NbCardModule,\r\n  NbProgressBarModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbIconModule,\r\n  NbSelectModule,\r\n  NbListModule,\r\n  NbInputModule,\r\n  NbCheckboxModule,\r\n  NbMenuModule,\r\n  NbActionsModule,\r\n  NbSpinnerModule,\r\n  NbTreeGridModule,\r\n  NbToggleModule,\r\n  NbSearchModule,\r\n  NbPopoverModule,\r\n  NbSidebarModule,\r\n  NbDatepickerModule\r\n\r\n} from '@nebular/theme';\r\nimport { TablesRoutingModule, routedComponents } from '../../pages/tables/tables-routing.module';\r\nimport { ReportsRoutingModule } from './reports-routing.module';\r\nimport { ReportsComponent } from './reports.component';\r\nimport { PackagesOnARouteComponent } from './packages-on-a-route/packages-on-a-route.component';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { Report2Component } from './report2/report2.component';\r\nimport { Report3Component } from './report3/report3.component';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { TopOfRoutesComponent } from './top-of-routes/top-of-routes.component';\r\nimport { ChartModule } from 'angular2-chartjs';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { ProfitsPerRouteComponent } from './profits-per-route/profits-per-route.component';\nimport { InvoiceComponent } from './report3/invoice/invoice.component';\nimport { PackagesComponent } from './report3/packages/packages.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ReportsComponent,\r\n    PackagesOnARouteComponent,\r\n    Report2Component,\r\n    Report3Component,\r\n    TopOfRoutesComponent,\r\n    ProfitsPerRouteComponent,\r\n    InvoiceComponent,\r\n    PackagesComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReportsRoutingModule,\r\n    NbRadioModule,\r\n    NbButtonModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbProgressBarModule,\r\n    NbTabsetModule,\r\n    NbUserModule,\r\n    NbIconModule,\r\n    NbSelectModule,\r\n    NbListModule,\r\n    NbInputModule,\r\n    NbCheckboxModule,\r\n    NbMenuModule,\r\n    NbActionsModule,\r\n    NbSpinnerModule,\r\n    NbToggleModule,\r\n    NbSearchModule,\r\n    NbPopoverModule,\r\n    NbSidebarModule,\r\n    NbTreeGridModule,\r\n    TablesRoutingModule,\r\n    ThemeModule,\r\n    Ng2SmartTableModule,\r\n    NgxEchartsModule,\r\n    NgxChartsModule,\r\n    ChartModule,\r\n    NbCardModule,\r\n    NbDatepickerModule\r\n  ]\r\n})\r\nexport class ReportsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProgressInfo} from '../../../@core/data/stats-progress-bar';\r\nimport { NbThemeService, NbToastrService } from '@nebular/theme';\r\nimport { RouteService } from '../../users/others/services/route/route.service';\r\nimport { NotificationsComponent } from '../../users/others/source/notifications/notifications.component';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'ngx-top-of-routes',\r\n  templateUrl: './top-of-routes.component.html',\r\n  styleUrls: ['./top-of-routes.component.scss']\r\n})\r\nexport class TopOfRoutesComponent implements OnInit {\r\n\r\n  private alive = true;\r\n\r\n  progressInfoData: ProgressInfo [];\r\n\r\n  results = [];\r\n  showLegend = true;\r\n  showXAxis = true;\r\n  showYAxis = true;\r\n  xAxisLabel = 'Ruta';\r\n  yAxisLabel = 'Paquetes';\r\n  colorScheme: any;\r\n  themeSubscription: any;\r\n\r\n  notification : NotificationsComponent;\r\n\r\n  constructor(\r\n    private theme: NbThemeService,\r\n    private routeService: RouteService,\r\n    private toastrService: NbToastrService,\r\n    private datepipe: DatePipe\r\n    ) {\r\n      this.themeSubscription = this.theme.getJsTheme().subscribe(config => {\r\n        const colors: any = config.variables;\r\n        this.colorScheme = {\r\n          domain: [colors.primaryLight, colors.infoLight, colors.successLight, colors.warningLight, colors.dangerLight],\r\n        };\r\n      });\r\n      this.progressInfoData = [];\r\n      this.getTop(null, null);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = true;\r\n    this.themeSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n  }\r\n\r\n  getTop(start, end) {\r\n    let filter;\r\n    if (start == null && end == null) {\r\n      filter = {}\r\n    } else if (end == null) {\r\n      filter = {\r\n        start: start\r\n      }\r\n    } else {\r\n      filter = {\r\n        start: start,\r\n        end: end\r\n      }\r\n    }\r\n    this.routeService.getMostPopularRoute(filter)\r\n    .subscribe(\r\n        (res) => {\r\n          if (res == null || res.length === 0) {\r\n            this.notification.showToast(3, \"No hay rutas\", \"No se encuentran paquetes registrados en el inteervalo inidicado rutas registradas\", 3500);\r\n            this.results = []\r\n            this.results = [...this.results]\r\n            this.progressInfoData = []\r\n          } else {\r\n            this.results = []\r\n            this.results = [...this.results]\r\n            this.progressInfoData = []\r\n            for (const iterator of res) {\r\n              this.addNewTop(iterator[1], Number(iterator[0]), iterator[2]);\r\n            }\r\n            this.results = [...this.results];\r\n          }\r\n        }\r\n    );\r\n  }\r\n\r\n  addNewTop(title, value, destination) {\r\n    this.results.push({\r\n        name: title, \r\n        value : value\r\n    });\r\n    this.progressInfoData.push({\r\n      title: title,\r\n      value: value,\r\n      description: destination,\r\n      activeProgress: null\r\n    });\r\n  }\r\n\r\n  range(date){\r\n    if (date.queue == null){\r\n      this.getTop(null, null);\r\n    } else if (date.queue.end == null) {\r\n      let latest_date =this.datepipe.transform(date.queue.start, 'yyyy-MM-dd');\r\n      this.getTop(latest_date, null)\r\n    } else {\r\n      let latest_date_start =this.datepipe.transform(date.queue.start, 'yyyy-MM-dd');\r\n      let latest_date_end =this.datepipe.transform(date.queue.end, 'yyyy-MM-dd');\r\n      this.getTop(latest_date_start, latest_date_end)\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-6 col-lg-4 col-xxxl-3\">\r\n        <nb-card>\r\n            <nb-card-header>Fecha: </nb-card-header>\r\n            <nb-card-body>\r\n            <input nbInput placeholder=\"Selecciona un rango\" [nbDatepicker]=\"rangepicker\">\r\n            <nb-rangepicker #rangepicker></nb-rangepicker>\r\n            <br>\r\n            <button nbButton status=\"primary\" (click)=\"range(rangepicker)\" ghost>\r\n                Filtrar\r\n            </button>\r\n            <button nbButton status=\"primary\" (click)=\"getTop(null, null)\" ghost>\r\n                Todos\r\n            </button>\r\n            </nb-card-body>\r\n        </nb-card>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-xxl-9\">\r\n        <nb-card>\r\n            <nb-card-header>Rutas Populares</nb-card-header>\r\n                <nb-card-body>\r\n                    <ngx-charts-bar-vertical\r\n                        [scheme]=\"colorScheme\"\r\n                        [results]=\"results\"\r\n                        [xAxis]=\"showXAxis\"\r\n                        [yAxis]=\"showYAxis\"\r\n                        [legend]=\"showLegend\"\r\n                        [xAxisLabel]=\"xAxisLabel\"\r\n                        [yAxisLabel]=\"yAxisLabel\">\r\n                    </ngx-charts-bar-vertical>\r\n                </nb-card-body>\r\n            </nb-card>\r\n    </div>\r\n\r\n    <div class=\"col-xxl-3\">\r\n        <nb-card size=\"large\">\r\n            <nb-card-header>Rutas Populares</nb-card-header>\r\n            <nb-card-body>\r\n                <br>\r\n                <div class=\"progress-info\" *ngFor=\"let item of progressInfoData\">\r\n                    <div class=\"h3\">{{ item.title }}</div>\r\n                    <div class=\"subtitle\">Paquetes: {{ item.value | ngxNumberWithCommas }}</div>\r\n                    <div class=\"caption description\">\r\n                        <b>Destino: </b> <bdi>{{ item.description }}</bdi>\r\n                    </div>\r\n                    <br><br><br>\r\n                </div>\r\n            </nb-card-body>\r\n        </nb-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { User } from '../../others/models/employee';\r\nimport { AdminService } from '../../others/services/admin.service';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { UsersModule } from '../../users.module';\r\n\r\n@Component({\r\n  selector: 'ngx-activate-users',\r\n  templateUrl: './activate-users.component.html',\r\n  styleUrls: ['./activate-users.component.scss']\r\n})\r\nexport class ActivateUsersComponent implements OnInit {\r\n\r\n  users: User[];\r\n  user: User;\r\n\r\n  notification: NotificationsComponent;\r\n\r\n  settings = {\r\n    actions: {\r\n      add: false,\r\n      edit: false\r\n    },\r\n    delete: {\r\n      //editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      deleteButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      //cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmDelete: true\r\n    },\r\n    columns: {\r\n      name: {\r\n        title: 'Nombres',\r\n        type: 'string',\r\n      },\r\n      lastname: {\r\n        title: 'Apellidos',\r\n        type: 'string',\r\n      },\r\n      username: {\r\n        title: 'Username',\r\n        type: 'string',\r\n      },\r\n      email: {\r\n        title: 'E-mail',\r\n        type: 'string',\r\n      },\r\n      cui: {\r\n        title: 'CUI',\r\n        type: 'number',\r\n      },\r\n\r\n    },\r\n\r\n  };\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private adminService: AdminService, private toatrService: NbToastrService) {\r\n    this.getData();\r\n  }\r\n\r\n  getData(){\r\n    this.adminService.getAllDeactivates().subscribe(response => {\r\n      this.users = response;\r\n      console.log(this.users)\r\n      this.source.load(this.users)\r\n    })\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if(window.confirm('Estas seguro de activar a este usuario?')){\r\n      this.user = event.data;\r\n      this.user.activo = 1\r\n      this.adminService.updateUser(this.user).subscribe(data => {\r\n        this.notification.showToast(1, 'Activado', `Usuario activado con exito`, 2500);\r\n        console.log('empleado desactivo')\r\n        this.getData();\r\n      })\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toatrService);\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    Empleados con usuario desactivo\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminComponent } from './admin.component';\r\nimport { CreateDestinationComponent } from './create-destination/create-destination.component';\r\nimport { RatesComponent } from './rates/rates.component';\r\nimport { ListUsersComponent } from './list-users/list-users.component';\r\nimport { RegisterUserComponent } from './register-user/register-user.component';\r\nimport { CreateCheckpointComponent } from './create-checkpoint/create-checkpoint.component';\r\nimport { ActivateUsersComponent } from './activate-users/activate-users.component';\r\nimport { UpdateUserComponent } from './update-user/update-user.component';\r\nimport { EditCheckpointComponent } from './edit-checkpoint/edit-checkpoint.component';\r\nimport { UpdateAssignamentOperatorCheckpointComponent } from './update-assignament-operator-checkpoint/update-assignament-operator-checkpoint.component';\r\nimport { CheckpointListComponent } from './checkpoint-list/checkpoint-list.component';\r\nimport { ListDestinationsComponent } from './list-destinations/list-destinations.component';\r\nimport { EditDestinationComponent } from './edit-destination/edit-destination.component';\r\nimport { RouteListComponent } from './route-list/route-list.component';\r\nimport { EditRouteComponent } from './edit-route/edit-route.component';\r\nimport { AdminGuard } from '../../auth/others/guards/admin.guard';\r\nimport { ListEditUsersComponent } from './list-edit-users/list-edit-users.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminComponent,\r\n    children: [\r\n      {\r\n        path: 'routes',\r\n        loadChildren: () => import('./routes/routes.module').then(m => m.RoutesModule),\r\n        canActivate: [AdminGuard]\r\n      },\r\n      { // views/admin/rates\r\n        path: 'rates',\r\n        component: RatesComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      { // views/admin/create-destination\r\n        path: 'create-destination',\r\n        component: CreateDestinationComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      //Aqui iran los hijos\r\n      {\r\n        path: 'register',\r\n        component: RegisterUserComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'list-users',\r\n        component: ListUsersComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'list-edit-users',\r\n        component: ListEditUsersComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'create-checkpoint',\r\n        component: CreateCheckpointComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'activate-users',\r\n        component: ActivateUsersComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'update-user',\r\n        component: UpdateUserComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'edit-checkpoint/:id',\r\n        component: EditCheckpointComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'update-assignament-operator/:id',\r\n        component: UpdateAssignamentOperatorCheckpointComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'checkpoints',\r\n        component: CheckpointListComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'destinations',\r\n        component: ListDestinationsComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'edit-destination/:id',\r\n        component: EditDestinationComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      { // views/admin/routes\r\n        path: 'route-list',\r\n        component: RouteListComponent,\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'edit-route/:id',\r\n        component: EditRouteComponent,\r\n        canActivate: [AdminGuard]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ADMINISTRATOR_MENU_ITEMS } from './menu';\r\n\r\n@Component({\r\n  selector: 'ngx-admin',\r\n  templateUrl: './admin.component.html',\r\n})\r\n\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  menu = ADMINISTRATOR_MENU_ITEMS;\r\n\r\n}\r\n","<ngx-one-column-layout>\r\n  <nb-menu [items]=\"menu\"></nb-menu> \r\n  <router-outlet></router-outlet>\r\n</ngx-one-column-layout>\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  NbRadioModule,\r\n  NbButtonModule,\r\n  NbLayoutModule,\r\n  NbCardModule,\r\n  NbProgressBarModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbIconModule,\r\n  NbSelectModule,\r\n  NbListModule,\r\n  NbInputModule,\r\n  NbCheckboxModule,\r\n  NbMenuModule,\r\n  NbActionsModule,\r\n  NbSpinnerModule,\r\n  NbToggleModule,\r\n  NbSearchModule,\r\n  NbPopoverModule,\r\n  NbSidebarModule\r\n} from '@nebular/theme';\r\nimport { ListDestinationsComponent } from './list-destinations/list-destinations.component';\r\nimport { EditDestinationComponent } from './edit-destination/edit-destination.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ThemeModule } from '../../../@theme/theme.module';\r\nimport { RoutesModule } from './routes/routes.module';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { AdminComponent } from './admin.component';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { RatesComponent } from './rates/rates.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CreateDestinationComponent } from './create-destination/create-destination.component';\r\nimport { EditCheckpointComponent } from './edit-checkpoint/edit-checkpoint.component';\r\nimport { UpdateAssignamentOperatorCheckpointComponent } from './update-assignament-operator-checkpoint/update-assignament-operator-checkpoint.component';\r\nimport { CheckpointListComponent } from './checkpoint-list/checkpoint-list.component';\r\nimport { RegisterUserComponent } from './register-user/register-user.component';\r\nimport { ListUsersComponent } from './list-users/list-users.component';\r\nimport { CreateCheckpointComponent } from './create-checkpoint/create-checkpoint.component';\r\nimport { ActivateUsersComponent } from './activate-users/activate-users.component';\r\nimport { UpdateUserComponent } from './update-user/update-user.component';\r\nimport { RouteListComponent } from './route-list/route-list.component';\r\nimport { EditRouteComponent } from './edit-route/edit-route.component';\nimport { ListEditUsersComponent } from './list-edit-users/list-edit-users.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent,\r\n    RatesComponent,\r\n    CreateDestinationComponent,\r\n    RegisterUserComponent,\r\n    ListUsersComponent,\r\n    CreateCheckpointComponent,\r\n    ActivateUsersComponent,\r\n    UpdateUserComponent,\r\n    CheckpointListComponent,\r\n    EditCheckpointComponent,\r\n    UpdateAssignamentOperatorCheckpointComponent,\r\n    ListDestinationsComponent,\r\n    EditDestinationComponent,\r\n    RouteListComponent,\r\n    EditRouteComponent,\r\n    ListEditUsersComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NbRadioModule,\r\n    AdminRoutingModule,\r\n    NbMenuModule,\r\n    ThemeModule,\r\n    RoutesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbActionsModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbProgressBarModule,\r\n    NbTabsetModule,\r\n    NbUserModule,\r\n    NbIconModule,\r\n    NbSelectModule,\r\n    NbListModule,\r\n    NbInputModule,\r\n    NbSearchModule,\r\n    NbPopoverModule,\r\n    NbCheckboxModule,\r\n    NbSidebarModule,\r\n    Ng2SmartTableModule,\r\n    HttpClientModule,\r\n    NbIconModule,\r\n    NbListModule,\r\n    NbSpinnerModule,\r\n    NbCardModule,\r\n    NbListModule,\r\n    NbToggleModule,\r\n    RoutesModule\r\n  ]\r\n})\r\n\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CheckpointsService } from '../../others/services/checkpoint/checkpoints.service';\r\nimport { Router } from '@angular/router';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { CustomServerDataSource } from '../../others/models/CustomServerDataSource';\r\n\r\n@Component({\r\n  selector: 'ngx-checkpoint-list',\r\n  templateUrl: './checkpoint-list.component.html',\r\n  styleUrls: ['./checkpoint-list.component.scss']\r\n})\r\nexport class CheckpointListComponent implements OnInit {\r\n\r\n  notification : NotificationsComponent;\r\n  source: CustomServerDataSource;\r\n  showPerPage = 10;\r\n\r\n  settings = {\r\n    mode: 'external', \r\n    noDataMessage: 'No exite ningun punto de control en el sistema.',\r\n    pager:{\r\n      display: true,\r\n      perPage: this.showPerPage,\r\n    },\r\n    columns: {\r\n      description: {\r\n        title: 'Nombre',\r\n        type: 'string'\r\n      },\r\n      queueCapacity: {\r\n        title: 'Capacidad de cola',\r\n        type: 'number'\r\n      },\r\n      operationFee: {\r\n        title: 'Tarifa de operación',\r\n        type: 'number',\r\n        valuePrepareFunction: (operationFee) => {\r\n          return `Q${operationFee}`;\r\n        }\r\n      },\r\n      packagesOnQueue: {\r\n        title: 'Paquetes en cola',\r\n        type: 'number'\r\n      },\r\n      route: {\r\n        title: 'Ruta',\r\n        type: 'string',\r\n        valuePrepareFunction: (route) => {\r\n          return `${route.name}`;\r\n        }\r\n      },\r\n      active : {\r\n        title: 'Estado',\r\n        type: 'string',\r\n        valuePrepareFunction: (active) => {\r\n          return `${active == 1 ? 'Activo' : 'Desactivado'}`;}\r\n      },\r\n      assignedOperator: {\r\n        title: 'Operador Asignado',\r\n        type: 'string',\r\n        valuePrepareFunction: (assignedOperator) => {\r\n          return `${assignedOperator.cui} ${assignedOperator.name} ${assignedOperator.lastname}`;}\r\n      }  \r\n    },\r\n    defaultStyle: false,\r\n    actions: {\r\n      columnTitle: 'Acciones',\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n      custom: [\r\n        { name: 'editCheckpoint', title: '<i class=\"nb-edit\"></i>' },\r\n        { name: 'operatorCheckpoint', title: '<i class=\"ion-ios-people-outline\"></i>' },\r\n        { name: 'removeCheckpoint', title: '<i class=\"nb-trash\"></i>' },\r\n      ],\r\n      position: 'right'\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private api : CheckpointsService,  \r\n    private router: Router,\r\n    private toastrService: NbToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.source = this.api.getAllCheckpointsPaginated();\r\n  }\r\n\r\n  onCustomAction(event){\r\n    if(parseInt(event.data['packageOnQueue']) > 0){\r\n      this.notification.showToast(4, 'Error', 'Error no se pueden realizar acciones sobre este punto de control debido a que tiene paquetes en cola.', 3000);\r\n    } else{\r\n      switch (event.action) {\r\n        case 'editCheckpoint':\r\n          this.router.navigate(['views', 'admin', 'edit-checkpoint', event.data['id']]);\r\n          break;\r\n        case 'operatorCheckpoint':\r\n          this.router.navigate(['views', 'admin', 'update-assignament-operator', event.data['id']]);\r\n          break;\r\n        case 'removeCheckpoint':   \r\n          this.deleteCheckpoint(event.data['id']);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private deleteCheckpoint(id : number) {\r\n    if(window.confirm('¿Eliminar permanentemente el punto de control?')){\r\n      this.api.deleteCheckpoint(id).subscribe({\r\n        next:(res) => {\r\n          this.notification.showToast(1, 'Exito', 'Punto de control eliminado exitosamente.', 3000);\r\n          this.source.remove(id);\r\n        },  \r\n        error:(error) => {\r\n          this.notification.showToast(3, 'Error', error.error , 4000);\r\n        }\r\n      })\r\n    } \r\n  }\r\n\r\n}\r\n","<div class=\"center\">\r\n  <nb-card>\r\n    <nb-card-header>\r\n      Puntos de control\r\n    </nb-card-header>\r\n  \r\n    <nb-card-body>\r\n      <ng2-smart-table \r\n      [settings]=\"settings\" \r\n      [source]=\"source\"\r\n      (custom)=\"onCustomAction($event)\"\r\n      >\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n  </nb-card>\r\n</div>","import { Component, ElementRef, OnInit, ViewChild, Renderer2 } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport * as global from '../../../GLOBAL';\r\nimport { RouteService } from '../../others/services/route/route.service';\r\nimport { Router } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\nimport {\r\n  NbToastrService,\r\n} from '@nebular/theme';\r\nimport { OperatorService } from '../../others/services/operator/operator.service';\r\nimport { RatesService } from '../../others/services/rates/rates.service';\r\nimport { CheckpointService } from '../../others/services/checkpoint/checkpoint.service';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\n\r\n@Component({\r\n  selector: 'ngx-create-checkpoint',\r\n  templateUrl: './create-checkpoint.component.html',\r\n  styleUrls: ['./create-checkpoint.component.scss']\r\n})\r\n\r\nexport class CreateCheckpointComponent implements OnInit {\r\n\r\n   @ViewChild(\"routeLabel\") routeLabel: ElementRef;\r\n   @ViewChild(\"operatorLabel\") operatorLabel: ElementRef;\r\n   @ViewChild(\"operatorsSearchInput\") operatorsSearchInput: ElementRef;\r\n   @ViewChild(\"routesSearchInput\") routesSearchInput: ElementRef;\r\n   @ViewChild(\"rateInput\") rateInput: ElementRef;\r\n\r\n  //Constantes globales\r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n  ERROR_MIN = global.GLOBAL.ERROR_MIN;\r\n  ERROR_NUMBER = global.GLOBAL.ERROR_NUMBER;\r\n  ADMIN_HOME = global.GLOBAL.ADMIN_HOME;\r\n\r\n  //Variables para busqueda de rutas\r\n  routesSrc: string;\r\n  routesData: any = null;\r\n  routesLoading: boolean = false;\r\n\r\n  //Variables para busqueda de operadores\r\n  operatorsSrc: string;\r\n  operatorsData: any = null;\r\n  operatorsLoading: boolean = false;\r\n\r\n  //Variable que almacena la tarifa de operacion global\r\n  globalOperationFee: number;\r\n  customOperationFee: boolean = false;\r\n\r\n  notification: NotificationsComponent;\r\n\r\n  //Fomulario reactivo\r\n  formCheckpoint: FormGroup = new FormGroup({\r\n    name: new FormControl(null, Validators.required),\r\n    route: new FormControl(null, Validators.required),\r\n    routeId: new FormControl(null, null),\r\n    operator: new FormControl(null, Validators.required),\r\n    operatorCUI: new FormControl(null, null),\r\n    fee: new FormControl(null, [ \r\n      Validators.required, \r\n      Validators.min(0), \r\n      Validators.pattern('[0-9]+(.[0-9]+)?')]\r\n    ),\r\n    queueCapacity: new FormControl(null, [ \r\n      Validators.required, \r\n      Validators.min(0), \r\n      Validators.pattern('[0-9]+(.[0-9]+)?')\r\n     ])\r\n  });\r\n\r\n  constructor(\r\n    private routeService : RouteService,\r\n    private operatorService: OperatorService,\r\n    private ratesService: RatesService,\r\n    private checkpointService: CheckpointService,\r\n    private toastService: NbToastrService,\r\n    private router: Router\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastService);\r\n    this.ratesService.getOperationFee().subscribe(\r\n      (response) => {\r\n        this.setGlobalOperationFee(response)\r\n        this.rateInput.nativeElement.value = this.globalOperationFee;\r\n        this.formCheckpoint.get('fee').setValue(this.globalOperationFee);\r\n        this.notification.showToast(\r\n          0,\r\n          'Tarifa de Operacion Global',\r\n          `La tarifa de operacion global es de Q` + this.globalOperationFee,\r\n          5000\r\n        ); \r\n      },\r\n      (error) => {\r\n        this.notification.showToast(3, 'Error', `Hubo un error obteniendo la tarifa de operacion global.`, 5000);\r\n      } \r\n    );\r\n  }    \r\n\r\n  private setGlobalOperationFee(fees){\r\n    for (const iterator of fees) {\r\n      if (iterator['name'] === 'Tarifa por operación') \r\n        this.globalOperationFee = iterator['fee']\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que valida que el form sea valido, de ser \r\n   * asi llama al metodo create enviando como parametros los \r\n   * datos obtenidos en el form.\r\n   */\r\n  public createCheckpoint(){\r\n    if(this.formCheckpoint.valid){\r\n      this.create(\r\n        this.formCheckpoint.get('name').value,\r\n        this.formCheckpoint.get('routeId').value,\r\n        this.formCheckpoint.get('operatorCUI').value,\r\n        this.formCheckpoint.get('fee').value,\r\n        this.formCheckpoint.get('queueCapacity').value\r\n      );\r\n    } else{\r\n      this.formCheckpoint.markAllAsTouched();\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que llama al metodo createRoute del servicio \r\n   * RoutesServices, muestra un mensaje en pantalla segun el exito\r\n   * o fallo de la peticion que manda a realizar.\r\n   * @param checkpointName Nombre de la ruta\r\n   * @param routeDestinationId  Id del destino de la ruta\r\n   */\r\n  private create(checkpointName: string, routeId: number, operatorCUI: number, fee: number, queueCapacity: number){\r\n    this.checkpointService.createCheckpoint({\r\n      description: checkpointName, \r\n      queueCapacity: queueCapacity,\r\n      operationFee: fee,\r\n      packagesOnQueue: 0,\r\n      active: true,\r\n      assignedOperator: {\r\n        cui: operatorCUI\r\n      },\r\n      route: {\r\n        id: routeId\r\n      }\r\n      \r\n    }).subscribe({\r\n      next : (res) => {\r\n        this.notification.showToast(1, 'Exito', `Punto de Control ${checkpointName} creado exitosamente.`, 5000);\r\n        this.formCheckpoint.reset();\r\n        this.router.navigate([this.ADMIN_HOME]);\r\n      },\r\n      error : (error) => {\r\n        this.notification.showToast(3, 'Error', error.error, 5000);\r\n      }\r\n    });\r\n  }\r\n\r\n    /**\r\n   * Procedimiento que llama a la funcion getRoutes del servicio\r\n   * RouteService para obtener todas la rutas que coinciden con \r\n   * el patron de busqueda que se recibe como parametro. Los datos\r\n   * obtenidos se almacenan en la variable routesData.\r\n   * @param pattern Patron de busqueda\r\n   */\r\n    public searchRoutes(pattern: string){\r\n      if(pattern != ''){\r\n        this.routesLoading = true;\r\n        this.routesData = this.routeService.getRoutes(pattern).pipe(\r\n          finalize(() => this.routesLoading = false)\r\n        );\r\n      } else this.routesData = null;\r\n    }\r\n\r\n    /**\r\n   * Procedimiento que llama a la funcion getOperators del servicio\r\n   * OperatorService para obtener todas la rutas que coinciden con \r\n   * el patron de busqueda que se recibe como parametro. Los datos\r\n   * obtenidos se almacenan en la variable routesData.\r\n   * @param pattern Patron de busqueda\r\n   */\r\n    public searchOperators(pattern: string){\r\n      if(pattern != ''){\r\n        this.operatorsLoading = true;\r\n        this.operatorsData = this.operatorService.getOperators(pattern).pipe(\r\n          finalize(() => this.operatorsLoading = false)\r\n        );\r\n      } else this.operatorsData = null;\r\n    }\r\n\r\n  /**\r\n   * Procedimiento que setea el valor del label routeLabel,\r\n   * tambien establece el valor del formControl routeId, por\r\n   * ultimo elimina todos los errores existentes en el formControl\r\n   * route.\r\n   * @param routeId id del destino\r\n   * @param routeName  nombre del destino\r\n   */\r\n  public setRoute(routeId: number, routeName: string){\r\n    this.routeLabel.nativeElement.innerHTML = routeName;\r\n    this.formCheckpoint.get('routeId').setValue(routeId);\r\n    this.formCheckpoint.get('route').setErrors(null)\r\n    this.routesData = null;\r\n    this.routesSearchInput.nativeElement.value = '';\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que setea el valor del label operatorLabel,\r\n   * tambien establece el valor del formControl operatorCUI, por\r\n   * ultimo elimina todos los errores existentes en el formControl\r\n   * operator.\r\n   * @param routeId id del destino\r\n   * @param routeName  nombre del destino\r\n   */\r\n      public setOperator(cui: number, name: string, surname: string){\r\n        this.operatorLabel.nativeElement.innerHTML = cui +' - '+ name +\" \"+ surname;\r\n        this.formCheckpoint.get('operatorCUI').setValue(cui);\r\n        this.formCheckpoint.get('operator').setErrors(null)\r\n        this.operatorsData = null;\r\n        this.operatorsSearchInput.nativeElement.value = '';\r\n      }\r\n\r\n    /**\r\n     * Procedimiento que modifica el valor booleano de la variable\r\n     * customOperationFee. \r\n     */\r\n    public setToogleValue(){\r\n      this.customOperationFee = !this.customOperationFee\r\n      if(!this.customOperationFee){\r\n        this.rateInput.nativeElement.value = this.globalOperationFee;\r\n      }\r\n    }\r\n\r\n  /**\r\n   * Procedimiento que se encarga de establecer el tipo de borde\r\n   * del elemento html que se recibe como parametro.\r\n   * @param event Evento disparado\r\n   */\r\n     public setHoverBorder(event: MouseEvent) {\r\n      const newsImage: HTMLDivElement = <HTMLDivElement>event.target;\r\n      if (event.type === 'mouseenter') {\r\n        newsImage.style.border = 'ridge';\r\n      } else if (event.type === 'mouseleave') {\r\n        newsImage.style.border = 'none';\r\n      }\r\n    }\r\n\r\n}","<div class=\"center\">\r\n  <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n    <nb-card>\r\n\r\n      <!-- Titulo del formulario para creacion de puntos de control  -->\r\n      <nb-card-header>\r\n          <nb-icon icon=\"plus\" pack=\"eva\"></nb-icon>\r\n          <nb-icon icon=\"home-outline\" pack=\"eva\"></nb-icon>\r\n          Punto de Control\r\n      </nb-card-header>\r\n      \r\n      <!-- Cuerpo del formulario para creacion de rutas -->\r\n      <nb-card-body>\r\n        <form [formGroup]=\"formCheckpoint\">\r\n          \r\n          <!-- Nombre -->\r\n          <div class=\"form-group\">\r\n              <label class=\"required\">*</label>\r\n              <label for=\"name\" class=\"label\">Nombre</label> \r\n              <input \r\n                [ngClass]=\"{\r\n                  'inp-invalid': formCheckpoint.get('name').invalid && formCheckpoint.get('name').touched, \r\n                  'nbInput': formCheckpoint.get('name').valid\r\n                }\"\r\n                type=\"text\"\r\n                formControlName=\"name\"\r\n                nbInput \r\n                fullWidth \r\n                id=\"name\" \r\n                placeholder=\"Ingrese el nombre del punto de control a crear.\"\r\n                required\r\n              />\r\n              <div *ngIf=\"formCheckpoint.get('name').invalid && formCheckpoint.get('name').touched\" >\r\n                  <label class=\"label required\" *ngIf=\"formCheckpoint.get('name').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n              </div>  \r\n          </div>\r\n\r\n\r\n          <!-- Ruta  -->\r\n          <div class=\"form-group\">\r\n            <label class=\"required\">*</label>\r\n            <label for=\"route\" class=\"label\">Ruta: &nbsp;</label>\r\n            <label class=\"label black\" #routeLabel>No seleccionada.</label>\r\n            <br>   \r\n            \r\n            <!-- Barra de busqueda -->\r\n            <input\r\n              [ngClass]=\"{\r\n                'inp-invalid': formCheckpoint.get('route')?.invalid && formCheckpoint.get('route')?.touched, \r\n                'nbInput': formCheckpoint.get('route').valid\r\n              }\"\r\n              #routesSearchInput\r\n              nbInput\r\n              fullWidth\r\n              [ngClass]=\"{'loading': routesLoading}\"\r\n              [spellcheck]=\"false\"\r\n              placeholder=\"Buscar ruta por nombre.\"\r\n              type=\"text\"\r\n              (ngModelChange)=\"searchRoutes($event)\"\r\n              [(ngModel)]=\"routesSrc\"\r\n              [ngModelOptions]=\"{standalone: true}\">\r\n\r\n            <!-- Etiqueta de mensajes -->\r\n            <div *ngIf=\"formCheckpoint.get('route')?.invalid && formCheckpoint.get('route')?.touched\" >\r\n              <label class=\"label required\" *ngIf=\"formCheckpoint.get('route').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n            </div>\r\n            \r\n            <!-- Lista con las rutas obtenidos tras la busqueda -->\r\n              <nb-card \r\n                [hidden]=\"routesData == null ? true : false\"\r\n                [nbSpinner]=\"routesLoading\" nbSpinnerStatus=\"primary\"\r\n                class=\"list-card\"\r\n                size=\"small\">\r\n                  <nb-list>\r\n                    <nb-list-item \r\n                      (click)=\"setRoute(item.id, item.name)\" \r\n                      *ngFor=\"let item of routesData | async\"\r\n                      (mouseenter)=\"setHoverBorder($event)\"\r\n                      (mouseleave)=\"setHoverBorder($event)\">\r\n                        {{item.name}}\r\n                    </nb-list-item>\r\n                  </nb-list>\r\n              </nb-card>\r\n        </div>\r\n           \r\n        <!-- Operador Asignado -->\r\n        <div class=\"form-group\">\r\n          <label class=\"required\">*</label>\r\n          <label for=\"operator\" class=\"label\">Operador asignado: &nbsp;</label>\r\n          <label class=\"label black\" #operatorLabel>No seleccionado.</label>\r\n          <br>   \r\n          \r\n          <!-- Barra de busqueda -->\r\n          <input\r\n            [ngClass]=\"{\r\n              'inp-invalid': formCheckpoint.get('operator')?.invalid && formCheckpoint.get('operator')?.touched, \r\n              'nbInput': formCheckpoint.get('operator').valid\r\n            }\"\r\n            #operatorsSearchInput\r\n            nbInput\r\n            fullWidth\r\n            [ngClass]=\"{'loading': operatorsLoading}\"\r\n            [spellcheck]=\"false\"\r\n            placeholder=\"Buscar el operador por CUI.\"\r\n            type=\"text\"\r\n            (ngModelChange)=\"searchOperators($event)\"\r\n            [(ngModel)]=\"operatorsSrc\"\r\n            [ngModelOptions]=\"{standalone: true}\">\r\n\r\n          <!-- Etiqueta de mensajes -->\r\n          <div *ngIf=\"formCheckpoint.get('operator')?.invalid && formCheckpoint.get('operator')?.touched\" >\r\n            <label class=\"label required\" *ngIf=\"formCheckpoint.get('operator').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n          </div>\r\n          \r\n          <!-- Lista con los operadores obtenidos tras la busqueda -->\r\n            <nb-card \r\n              [hidden]=\"operatorsData == null ? true : false\"\r\n              [nbSpinner]=\"operatorsLoading\" nbSpinnerStatus=\"primary\"\r\n              class=\"list-card\"\r\n              size=\"small\">\r\n                <nb-list>\r\n                  <nb-list-item \r\n                    (click)=\"setOperator(item.cui, item.name, item.lastname)\" \r\n                    *ngFor=\"let item of operatorsData | async\"\r\n                    (mouseenter)=\"setHoverBorder($event)\"\r\n                    (mouseleave)=\"setHoverBorder($event)\">\r\n                      {{item.name +' ' +item.lastname}}\r\n                      <br>\r\n                      {{item.cui}}\r\n                  </nb-list-item>\r\n                </nb-list>\r\n            </nb-card>\r\n            \r\n            <!-- Capacidad de Cola -->\r\n            <div class=\"form-group\">\r\n              <br>\r\n              <label class=\"required\">*</label>\r\n              <label for=\"queueCapacity\" class=\"label\">Capacidad de Cola</label> \r\n              <input \r\n                [ngClass]=\"{\r\n                  'inp-invalid': formCheckpoint.get('queueCapacity').invalid && formCheckpoint.get('queueCapacity').touched, \r\n                  'nbInput': formCheckpoint.get('queueCapacity').valid\r\n                }\"\r\n                type=\"number\"\r\n                formControlName=\"queueCapacity\"\r\n                nbInput \r\n                fullWidth \r\n                id=\"queueCapacity\" \r\n                placeholder=\"Ingrese la capacidad de la cola de paquetes.\"\r\n                required\r\n              />\r\n              <div *ngIf=\"formCheckpoint.get('queueCapacity').invalid && formCheckpoint.get('queueCapacity').touched\" >\r\n                <label class=\"label required\" *ngIf=\"formCheckpoint.get('queueCapacity').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                <label class=\"label required\" *ngIf=\"formCheckpoint.get('queueCapacity').hasError('min')\">{{ERROR_MIN}}</label><br>\r\n                <label class=\"label required\" *ngIf=\"formCheckpoint.get('queueCapacity').hasError('pattern')\">{{ERROR_NUMBER}}</label>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Tarifa de Operacion -->\r\n            <div class=\"form-group\">\r\n              <br>\r\n              <label class=\"required\">*</label>\r\n              <label for=\"fee\" class=\"label\">Tarafia de Operacion</label> \r\n              <br>\r\n              <nb-toggle (checkedChange)=\"setToogleValue()\">Tarifa de Operacion Perzonalizada</nb-toggle> \r\n              <input \r\n                [ngClass]=\"{\r\n                  'inp-invalid': formCheckpoint.get('fee').invalid && formCheckpoint.get('fee').touched, \r\n                  'nbInput': formCheckpoint.get('fee').valid\r\n                }\"\r\n                #rateInput\r\n                type=\"number\"\r\n                formControlName=\"fee\"\r\n                nbInput \r\n                fullWidth \r\n                id=\"fee\" \r\n                placeholder=\"Ingrese la tarifa de operacion.\"\r\n                required\r\n                [readonly]=\"!customOperationFee\"\r\n              />\r\n              <div *ngIf=\"formCheckpoint.get('fee').invalid && formCheckpoint.get('fee').touched\" >\r\n                <label class=\"label required\" *ngIf=\"formCheckpoint.get('fee').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                <label class=\"label required\" *ngIf=\"formCheckpoint.get('fee').hasError('min')\">{{ERROR_MIN}}</label><br>\r\n                <label class=\"label required\" *ngIf=\"formCheckpoint.get('fee').hasError('pattern')\">{{ERROR_NUMBER}}</label>\r\n              </div>  \r\n          </div>\r\n\r\n        </div>\r\n\r\n          <div class=\"row\">\r\n            <button type=\"submit\" nbButton status=\"primary\" (click)=\"createCheckpoint()\" hero>Crear</button>&nbsp;&nbsp;\r\n            <button routerLink=\"{{ADMIN_HOME}}\" nbButton status=\"danger\" hero>Cancelar</button>\r\n          </div>\r\n        </form>\r\n\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DestinationService } from '../../others/services/destination/destination.service';\r\nimport * as global from '../../../GLOBAL';\r\nimport { Destination } from '../../others/models/destination';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-create-destination',\r\n  templateUrl: './create-destination.component.html',\r\n  styleUrls: ['./create-destination.component.scss']\r\n})\r\nexport class CreateDestinationComponent implements OnInit {\r\n\r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n  ERROR_MIN = global.GLOBAL.ERROR_MIN;\r\n  ERROR_NUMBER = global.GLOBAL.ERROR_NUMBER;\r\n  ADMIN_HOME = global.GLOBAL.ADMIN_HOME;\r\n\r\n  notification : NotificationsComponent;\r\n  errors = false;\r\n  formDestination : FormGroup = new FormGroup ({\r\n    name : new FormControl(null, [\r\n      Validators.required\r\n    ]),\r\n    fee : new FormControl(null, [\r\n      Validators.required,\r\n      Validators.min(0),\r\n      Validators.pattern('[0-9]+(.[0-9]+)?')\r\n    ]),\r\n    description : new FormControl(null, null)\r\n  });\r\n\r\n  constructor (\r\n    private api_destination : DestinationService,\r\n    private toastrService : NbToastrService,\r\n    private router : Router ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n  }\r\n\r\n  create_destination() {\r\n    if (this.formDestination.valid) {\r\n      this.service_create(\r\n        this.formDestination.get('name').value,\r\n        parseFloat(this.formDestination.get('fee').value),\r\n        this.formDestination.get('description').value\r\n      );\r\n    } else {\r\n      this.errors = true;\r\n      return;\r\n    }\r\n  }\r\n\r\n  service_create(nameDestintaion, rate, description) {\r\n    let newDestination : Destination = {\r\n      name: nameDestintaion,\r\n      fee: rate,\r\n      description: description\r\n    };\r\n    this.api_destination.createDestination(newDestination)\r\n    .subscribe({\r\n      next : (res) => {\r\n        this.notification.showToast(1, 'Agregado', `Destino: ${nameDestintaion}, agregado correctamente.`, 2500);\r\n        this.formDestination.reset();\r\n        this.errors = false;\r\n      },\r\n      error : (err) => {\r\n        err.status == 400 ?\r\n          this.notification.errors(400, \"Ya se encuentra creado un destino con el nombre: \" + nameDestintaion + \", vuelve a intentarlo.\") :\r\n          this.notification.errors(500, \"Error al crear el destino, vuelve a intentarlo.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.formDestination.reset();\r\n    this.router.navigate(['views', 'admin'])\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n      <nb-card>\r\n        <!-- Titulo del formulario para la creacion de Destinos  -->\r\n        <nb-card-header>\r\n          <nb-icon icon=\"plus\" pack=\"eva\"></nb-icon>\r\n          <nb-icon icon=\"map-outline\" pack=\"eva\"></nb-icon>\r\n          Destino\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n          <!-- Formulario para destino -->\r\n          <form [formGroup]=\"formDestination\">\r\n            \r\n            <!-- Nombre -->\r\n            <div class=\"form-group\">\r\n                <label for=\"name\" class=\"label\">Nombre</label> \r\n                <div *ngIf=\"formDestination.get('name')?.errors && formDestination.get('name')?.touched || errors\" >\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formDestination.get('name').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                </div>\r\n                <input \r\n                type=\"text\"\r\n                [class.inp-invalid]=\"formDestination.get('name')?.errors && formDestination.get('name')?.touched || errors\" \r\n                formControlName=\"name\"\r\n                nbInput \r\n                fullWidth \r\n                id=\"name\" \r\n                placeholder=\"Nombre\"\r\n                required\r\n                />\r\n            </div>\r\n            \r\n            <!-- Precio -->\r\n            <div class=\"form-group\">\r\n                <label for=\"fee\" class=\"label\">Tarifa</label> \r\n                <div *ngIf=\"formDestination.get('fee')?.errors && formDestination.get('fee')?.touched || errors\" >\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formDestination.get('fee').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formDestination.get('fee').hasError('min')\">{{ERROR_MIN}}</label><br>\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formDestination.get('fee').hasError('pattern')\">{{ERROR_NUMBER}}</label>\r\n                </div>\r\n                <input \r\n                type=\"number\"\r\n                [class.inp-invalid]=\"formDestination.get('fee')?.errors && formDestination.get('fee')?.touched || errors\" \r\n                formControlName=\"fee\" \r\n                step=\"0.01\" \r\n                min=\"0\" \r\n                nbInput \r\n                fullWidth \r\n                id=\"fee\" \r\n                placeholder=\"Tarifa\"\r\n                required\r\n                />\r\n            </div>\r\n            \r\n            <!-- Descripcion -->\r\n            <div class=\"form-group\">\r\n                <label for=\"description\" class=\"label\">Descripción</label>\r\n                <textarea \r\n                formControlName=\"description\" \r\n                nbInput \r\n                fullWidth \r\n                id=\"description\"\r\n                placeholder=\"Descripción\"\r\n                ></textarea>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n              <button type=\"submit\" nbButton status=\"primary\" (click)=\"create_destination()\" hero>Agregar</button>&nbsp;&nbsp;\r\n              <button nbButton status=\"danger\" (click)=\"onCancel()\" hero>Cancelar</button>\r\n            </div>\r\n          </form>\r\n        </nb-card-body>\r\n      </nb-card>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { CheckpointsService } from '../../others/services/checkpoint/checkpoints.service';\r\nimport { Router } from '@angular/router';\r\nimport * as global from '../../../GLOBAL';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ngx-edit-checkpoint',\r\n  templateUrl: './edit-checkpoint.component.html',\r\n  styleUrls: ['./edit-checkpoint.component.scss']\r\n})\r\nexport class EditCheckpointComponent implements OnInit {\r\n\r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n  ERROR_MIN = global.GLOBAL.ERROR_MIN;\r\n  ERROR_NUMBER = global.GLOBAL.ERROR_NUMBER;\r\n\r\n  errors = false;\r\n  notification : NotificationsComponent;\r\n  data;\r\n\r\n  formEditCheckpoint : FormGroup = new FormGroup ({\r\n    queueCapacity : new FormControl (null,  [\r\n      Validators.required,\r\n      Validators.min(0), \r\n      Validators.pattern('[0-9]+')\r\n    ]),\r\n    operationFee : new FormControl (null, [\r\n      Validators.required,\r\n      Validators.min(0), \r\n      Validators.pattern('[0-9]+(.[0-9]+)?')\r\n    ]),\r\n    description : new FormControl(null, [\r\n      Validators.required\r\n    ])\r\n  });\r\n\r\n  constructor( \r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private toastrService: NbToastrService,\r\n    private api : CheckpointsService,\r\n    private router : Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.getCheckpoint();\r\n  }\r\n\r\n  private getCheckpoint() {\r\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.api.getCheckpoint(id)\r\n    .subscribe({\r\n      next:(res) => {\r\n        this.data = res;\r\n        if (parseInt(this.data['packageOnQueue']) > 0) {\r\n          this.notification.showToast(4, \"Error\", \"Error no se puede editar el punto de control porque tiene paquetes en cola\", 3000);\r\n          setTimeout(() => {\r\n            this.location.back();\r\n          }, 2500);\r\n        } else {\r\n          this.formEditCheckpoint.controls['queueCapacity'].setValue(res.queueCapacity);\r\n          this.formEditCheckpoint.controls['operationFee'].setValue(res.operationFee);          \r\n          this.formEditCheckpoint.controls['description'].setValue(res.description);\r\n        }\r\n      }, \r\n      error:(err) => {\r\n        if (err.status == 404) {\r\n          this.notification.errors(404, 'un punto de control con el ID: ' + id);\r\n        } else {\r\n          this.notification.errors(400, 'Mientras se obtenian los datos del punto de control, vuelve a intentarlo.');\r\n        }\r\n        setTimeout(() => {\r\n          this.location.back();\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  edit_checkpoint() {\r\n    if (this.formEditCheckpoint.valid) {\r\n      this.data.queueCapacity = parseInt(this.formEditCheckpoint.get('queueCapacity').value);\r\n      this.data.operationFee = parseFloat(this.formEditCheckpoint.get('operationFee').value);\r\n      this.data.description = this.formEditCheckpoint.get('description').value;\r\n      this.service_edit(this.data);\r\n    } else {  \r\n      this.errors = true;\r\n      return;\r\n    }\r\n    \r\n  }\r\n\r\n  service_edit(dataEdit) {\r\n    this.api.putCheckpoint(dataEdit, dataEdit.id)\r\n    .subscribe({\r\n      next : (res) => {\r\n        this.notification.showToast(1, 'Editado', `El punto de control se a modificado con exito.`, 3500);\r\n        setTimeout(() => {\r\n          this.formEditCheckpoint.reset();\r\n          this.router.navigate(['views', 'admin' , 'checkpoints'])\r\n        }, 2600);\r\n      },\r\n      error : (err) => {\r\n        this.notification.errors(err.status, err.error);\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.formEditCheckpoint.reset();\r\n    this.router.navigate(['views', 'admin', 'checkpoints'])\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n      <nb-card>\r\n        <!-- Titulo del formulario para la creacion de Destinos  -->\r\n        <nb-card-header>\r\n          <nb-icon icon=\"edit-outline\" pack=\"eva\"></nb-icon>\r\n          <nb-icon icon=\"compass-outline\" pack=\"eva\"></nb-icon>\r\n          Punto de Control\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n          <!-- Formulario para editar un punto de control -->\r\n          <form [formGroup]=\"formEditCheckpoint\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">\r\n                    <!-- Capacidad de la cola  -->\r\n                    <div class=\"form-group\">\r\n                        <label for=\"queueCapacity\" class=\"label\">Capaciad de la cola</label> \r\n                        <div *ngIf=\"formEditCheckpoint.get('queueCapacity')?.errors && formEditCheckpoint.get('queueCapacity')?.touched || errors\" >\r\n                            <label class=\"label\" style=\"color: red;\" *ngIf=\"formEditCheckpoint.get('queueCapacity').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                            <label class=\"label\" style=\"color: red;\" *ngIf=\"formEditCheckpoint.get('queueCapacity').hasError('min')\">{{ERROR_MIN}}</label><br>\r\n                            <label class=\"label\" style=\"color: red;\" *ngIf=\"formEditCheckpoint.get('queueCapacity').hasError('pattern')\">{{ERROR_NUMBER}}</label>\r\n                        </div>\r\n                        <input \r\n                        type=\"number\"\r\n                        [class.inp-invalid]=\"formEditCheckpoint.get('queueCapacity')?.errors && formEditCheckpoint.get('queueCapacity')?.touched || errors\" \r\n                        formControlName=\"queueCapacity\"\r\n                        step=\"1\" \r\n                        min=\"0\" \r\n                        nbInput\r\n                        fullWidth \r\n                        id=\"queueCapacity\" \r\n                        placeholder=\"Capacidad de la cola\"\r\n                        required\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\">\r\n                    <!-- Tarifa de operacion -->\r\n                    <div class=\"form-group\">\r\n                        <label for=\"operationFee\" class=\"label\">Tarifa de operación</label> \r\n                        <div *ngIf=\"formEditCheckpoint.get('operationFee')?.errors && formEditCheckpoint.get('operationFee')?.touched || errors\" >\r\n                        <label class=\"label\" style=\"color: red;\" *ngIf=\"formEditCheckpoint.get('operationFee').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                        <label class=\"label\" style=\"color: red;\" *ngIf=\"formEditCheckpoint.get('operationFee').hasError('min')\">{{ERROR_MIN}}</label><br>\r\n                        <label class=\"label\" style=\"color: red;\" *ngIf=\"formEditCheckpoint.get('operationFee').hasError('pattern')\">{{ERROR_NUMBER}}</label>\r\n                        </div>\r\n                        <input \r\n                        type=\"number\"\r\n                        [class.inp-invalid]=\"formEditCheckpoint.get('operationFee')?.errors && formEditCheckpoint.get('operationFee')?.touched || errors\" \r\n                        formControlName=\"operationFee\" \r\n                        step=\"0.01\" \r\n                        min=\"0\" \r\n                        nbInput \r\n                        fullWidth \r\n                        id=\"operationFee\" \r\n                        placeholder=\"Tarifa de operación\"\r\n                        required\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n            <!-- Descripcion -->\r\n            <div class=\"form-group\">\r\n                <label for=\"description\" class=\"label\">Nombre del punto de control</label>\r\n                <textarea \r\n                formControlName=\"description\" \r\n                nbInput \r\n                fullWidth \r\n                id=\"description\"\r\n                placeholder=\"Descripción\"\r\n                ></textarea>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n              <button type=\"submit\" nbButton status=\"primary\" (click)=\"edit_checkpoint()\" hero>Editar</button>&nbsp;&nbsp;\r\n              <button nbButton status=\"danger\" (click)=\"onCancel()\" hero>Cancelar</button>\r\n            </div>\r\n          </form>\r\n        </nb-card-body>\r\n      </nb-card>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { DestinationService } from '../../others/services/destination/destination.service';\r\nimport * as global from '../../../GLOBAL';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DestinationListTemplate } from '../../others/models/DestinationListTemplate';\r\n\r\n@Component({\r\n  selector: 'ngx-edit-destination',\r\n  templateUrl: './edit-destination.component.html',\r\n  styleUrls: ['./edit-destination.component.scss']\r\n})\r\n\r\nexport class EditDestinationComponent implements OnInit {\r\n\r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n  ERROR_MIN = global.GLOBAL.ERROR_MIN;\r\n  ERROR_NUMBER = global.GLOBAL.ERROR_NUMBER;\r\n  ADMIN_HOME = global.GLOBAL.ADMIN_HOME;\r\n\r\n  destinationId: number;\r\n\r\n  notification : NotificationsComponent;\r\n\r\n  formDestination : FormGroup = new FormGroup ({\r\n    name : new FormControl(null, [\r\n      Validators.required\r\n    ]),\r\n    fee : new FormControl(null, [\r\n      Validators.required, \r\n      Validators.min(0), \r\n      Validators.pattern('[0-9]+(.[0-9]+)?')\r\n    ]),\r\n    description : new FormControl(null, null)\r\n  });\r\n\r\n  constructor (\r\n    private route: ActivatedRoute,\r\n    private destinationService : DestinationService, \r\n    private toastrService : NbToastrService,\r\n    private router : Router ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.getDestination();\r\n  }\r\n\r\n  private getDestination(){\r\n    this.destinationId = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.destinationService.getDestination(this.destinationId).subscribe({\r\n      next:(res) => {\r\n        console.log(res)\r\n        this.formDestination.controls['name'].setValue(res.name);\r\n        this.formDestination.controls['description'].setValue(res.description);          \r\n        this.formDestination.controls['fee'].setValue(res.fee);\r\n      }, \r\n        error:(err) => {\r\n          this.notification.showToast(3, 'Error', 'Hubo un error obteniendo los datos del destino seleccionado', 5000);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  public updateDestination() {\r\n    if (this.formDestination.valid) {\r\n      this.update(\r\n        this.formDestination.get('name').value,\r\n        parseFloat(this.formDestination.get('fee').value),\r\n        this.formDestination.get('description').value\r\n      );\r\n    } else {\r\n      this.formDestination.markAllAsTouched();\r\n      return;\r\n    }\r\n  }\r\n\r\n  private update(name, rate, description) {\r\n    let destination  = {\r\n      id: this.destinationId,\r\n      name: name,\r\n      fee: rate,\r\n      description: description\r\n    };\r\n     this.destinationService.updateDestination(destination).subscribe({\r\n      next : (res) => {\r\n        this.notification.showToast(1, 'Actualizado', `Destino ${name}, actualizado exitosamente.`, 5000);\r\n        this.onCancel();\r\n      },\r\n      error : (error) => {\r\n        this.notification.showToast(3, 'Error', error.error , 4000);\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    this.formDestination.reset();\r\n    this.router.navigate(['views', 'admin' , 'destinations']);\r\n  }\r\n\r\n}\r\n","<div class=\"row center\">\r\n    <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n      <nb-card>\r\n        <!-- Titulo del formulario para la creacion de Destinos  -->\r\n        <nb-card-header>\r\n          <nb-icon icon=\"edit-outline\" pack=\"eva\"></nb-icon>\r\n          <nb-icon icon=\"map-outline\" pack=\"eva\"></nb-icon>\r\n          Destino\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n          <!-- Formulario para destino -->\r\n          <form [formGroup]=\"formDestination\">\r\n            \r\n            <!-- Nombre -->\r\n            <div class=\"form-group\">\r\n                <label class=\"required\">*</label>\r\n                <label for=\"name\" class=\"label\">Nombre</label> \r\n                <input\r\n                    [ngClass]=\"{\r\n                        'inp-invalid': formDestination.get('name').invalid && formDestination.get('name').touched, \r\n                        'nbInput': formDestination.get('name').valid\r\n                    }\" \r\n                    type=\"text\"\r\n                    formControlName=\"name\"\r\n                    nbInput \r\n                    fullWidth \r\n                    id=\"name\" \r\n                    placeholder=\"Nombre\"\r\n                    required\r\n                />\r\n                <div *ngIf=\"formDestination.get('name').invalid && formDestination.get('name').touched\" >\r\n                    <label class=\"label required\" *ngIf=\"formDestination.get('name').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                  </div>  \r\n            </div>\r\n            \r\n            <!-- Precio -->\r\n            <div class=\"form-group\">\r\n                <label class=\"required\">*</label>\r\n                <label for=\"fee\" class=\"label\">Tarifa</label> \r\n                <input \r\n                    [ngClass]=\"{\r\n                        'inp-invalid': formDestination.get('fee').invalid && formDestination.get('fee').touched, \r\n                        'nbInput': formDestination.get('fee').valid\r\n                    }\" \r\n                    type=\"number\"\r\n                    formControlName=\"fee\" \r\n                    step=\"0.01\" \r\n                    min=\"0\" \r\n                    nbInput \r\n                    fullWidth \r\n                    id=\"fee\" \r\n                    placeholder=\"Tarifa\"\r\n                    required\r\n                />\r\n                <div *ngIf=\"formDestination.get('fee').invalid && formDestination.get('fee').touched\" >\r\n                    <label class=\"label required\" *ngIf=\"formDestination.get('fee').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                    <label class=\"label required\" *ngIf=\"formDestination.get('fee').hasError('min')\">{{ERROR_MIN}}</label><br>\r\n                    <label class=\"label required\" *ngIf=\"formDestination.get('fee').hasError('pattern')\">{{ERROR_NUMBER}}</label>\r\n                  </div>\r\n            </div>\r\n            \r\n            <!-- Descripcion -->\r\n            <div class=\"form-group\">\r\n                <label for=\"description\" class=\"label\">Descripción</label>\r\n                <textarea \r\n                    formControlName=\"description\" \r\n                    nbInput \r\n                    fullWidth \r\n                    id=\"description\"\r\n                    placeholder=\"Descripción\"> \r\n                </textarea>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n              <button type=\"submit\" nbButton status=\"primary\" (click)=\"updateDestination()\" hero>Actualizar</button>&nbsp;&nbsp;\r\n              <button nbButton status=\"danger\" (click)=\"onCancel()\" hero>Cancelar</button>\r\n            </div>\r\n          </form>\r\n        </nb-card-body>\r\n      </nb-card>\r\n    </div>\r\n  </div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport * as global from '../../../GLOBAL';\r\nimport { RouteService } from '../../others/services/route/route.service';\r\nimport { DestinationService } from '../../others/services/destination/destination.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  NbToastrService,\r\n} from '@nebular/theme';\r\nimport { Route } from '../../others/models/Route';\r\n\r\n@Component({\r\n  selector: 'ngx-edit-route',\r\n  templateUrl: './edit-route.component.html',\r\n  styleUrls: ['./edit-route.component.scss']\r\n})\r\n\r\nexport class EditRouteComponent implements OnInit {\r\n  \r\n  @ViewChild(\"destinationLabel\") destinationLabel: ElementRef;\r\n  @ViewChild(\"destinationSearchInput\") destinationSearchInput: ElementRef;\r\n  @ViewChild(\"activeToggle\") activeToggle: ElementRef;\r\n  //Constantes globales\r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n\r\n  //Varaiables\r\n  notification: NotificationsComponent;\r\n  isLoading: boolean = false;\r\n  src: string;\r\n  data: any;\r\n\r\n  routeId: number;\r\n  \r\n  //Fomulario reactivo\r\n  formRoute: FormGroup = new FormGroup({\r\n    name: new FormControl(null, Validators.required),\r\n    destination: new FormControl(null, Validators.required),\r\n    destinationId: new FormControl(null, null),\r\n    active: new FormControl(null, null)\r\n  });\r\n\r\n  constructor(\r\n    private routeService : RouteService,\r\n    private destinationService : DestinationService, \r\n    private toastService: NbToastrService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private location: Location\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastService);\r\n    this.getRoute();\r\n  }\r\n  \r\n  private getRoute() {\r\n    this.routeId = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.routeService.getRoute(this.routeId).subscribe({\r\n      next:(res) => {\r\n        this.formRoute.controls['name'].setValue(res.name);\r\n        this.formRoute.controls['destination'].setValue(res.destination.name);          \r\n        this.formRoute.controls['destinationId'].setValue(res.destination.id);\r\n        this.formRoute.controls['active'].setValue(res.active);\r\n        this.destinationLabel.nativeElement.innerHTML = res.destination.name;\r\n        this.activeToggle.nativeElement.checked = Boolean(res.active);\r\n      }, \r\n      error:(err) => {\r\n        this.notification.showToast(3, 'Error', 'Hubo un error obteniendo los datos de la ruta.', 3000);\r\n        setTimeout(() => {\r\n          this.location.back();\r\n        }, 2000);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Procedimiento que valida que el form sea valido, de ser \r\n   * asi llama al metodo create enviando como parametros los \r\n   * datos obtenidos en el form.\r\n   */\r\n  public updateRoute(){\r\n    if(this.formRoute.valid){\r\n      this.update(\r\n        this.formRoute.get('name').value,\r\n        Number(this.formRoute.get('destinationId').value),\r\n        Boolean(this.formRoute.get('active').value)\r\n      );\r\n    } else{\r\n      this.formRoute.markAllAsTouched();\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que llama al metodo createRoute del servicio \r\n   * RoutesServices, muestra un mensaje en pantalla segun el exito\r\n   * o fallo de la peticion que manda a realizar.\r\n   * @param routeName Nombre de la ruta\r\n   * @param routeDestinationId  Id del destino de la ruta\r\n   */\r\n  private update(routeName: string, routeDestinationId: number, active: boolean){\r\n    let route = {\r\n      id: this.routeId,\r\n      name: routeName, \r\n      active: active,\r\n      destination: {\r\n        id: routeDestinationId\r\n    }} \r\n\r\n    this.routeService.patchRoute(route).subscribe({\r\n      next : (res) => {\r\n        this.notification.showToast(1, 'Exito', `Ruta ${routeName} modificada exitosamente.`, 5000);\r\n        this.formRoute.reset();\r\n        this.goBack();\r\n      },\r\n      error : (error) => {\r\n        switch(error.status){\r\n          case 400:\r\n            this.notification.showToast(3, 'Error', error.error , 3000);\r\n            break;\r\n\r\n          default:\r\n            this.notification.showToast(3, 'Error', `Error desconocido en la creacion de la ruta: ${routeName}. Verifique los datos ingresados y vuelva a intentarlo.`, 3000);\r\n            break;\r\n        } \r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que llama a la funcion getDestinations del servicio\r\n   * DestinationService para obtener todos los destinos que coinciden \r\n   * con el patron de busqueda que se recibe como parametro. Los datos\r\n   * obtenidos se almacenan en la variable data.\r\n   * @param pattern Patron de busqueda\r\n   */\r\n  public search(pattern: string){\r\n    if(pattern != ''){\r\n      this.isLoading = true;\r\n      this.data = this.destinationService.getDestinations(pattern).pipe(\r\n        finalize(() => this.isLoading = false )\r\n      );\r\n    } else this.data = null;\r\n  }\r\n  \r\n  /**\r\n   * Procedimiento que setea el valor del lable destinationLabel,\r\n   * tambien establece el valor del formControl destinatioId, por\r\n   * ultimo elimina todos los errores existentes en el formControl\r\n   * destination.\r\n   * @param destinationId id del destino\r\n   * @param destinationName  nombre del destino\r\n   */\r\n  public setDestination(destinationId: number, destinationName: string){\r\n    this.destinationLabel.nativeElement.innerHTML = destinationName;\r\n    this.formRoute.get('destinationId').setValue(destinationId);\r\n    this.formRoute.get('destination').setErrors(null)\r\n    this.data = null;\r\n    this.destinationSearchInput.nativeElement.value = '';\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que se encarga de establecer el tipo de borde\r\n   * del elemento html que se recibe como parametro.\r\n   * @param event Evento disparado\r\n   */\r\n  public setHoverBorder(event: MouseEvent) {\r\n    const newsImage: HTMLDivElement = <HTMLDivElement>event.target;\r\n    if (event.type === 'mouseenter') {\r\n      newsImage.style.border = 'ridge';\r\n    } else if (event.type === 'mouseleave') {\r\n      newsImage.style.border = 'none';\r\n    }\r\n  }\r\n\r\n  public setActiveValue(){\r\n    this.formRoute.controls['active'].setValue(!Boolean(this.formRoute.get('active').value));\r\n  }\r\n\r\n  public goBack() {\r\n    this.formRoute.reset();\r\n    this.router.navigate(['views', 'admin', 'route-list'])\r\n  }\r\n}","<div class=\"center\">\r\n    <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n      <nb-card>\r\n\r\n        <!-- Titulo del formulario para creacion de rutas  -->\r\n        <nb-card-header>\r\n          <nb-icon icon=\"edit-outline\" pack=\"eva\"></nb-icon>\r\n            <nb-icon icon=\"car-outline\" pack=\"eva\"></nb-icon>\r\n            Ruta\r\n        </nb-card-header>\r\n        \r\n        <!-- Cuerpo del formulario para creacion de rutas -->\r\n        <nb-card-body>\r\n          <form [formGroup]=\"formRoute\">\r\n            \r\n            <!-- Nombre -->\r\n            <div class=\"form-group\">\r\n                <label class=\"required\">*</label>\r\n                <label for=\"name\" class=\"label\">Nombre</label> \r\n                <input \r\n                  [ngClass]=\"{\r\n                    'inp-invalid': formRoute.get('name').invalid && formRoute.get('name').touched, \r\n                    'nbInput': formRoute.get('name').valid\r\n                  }\"\r\n                  type=\"text\"\r\n                  formControlName=\"name\"\r\n                  nbInput \r\n                  fullWidth \r\n                  id=\"name\" \r\n                  placeholder=\"Ingrese el nombre de la ruta a crear.\"\r\n                  required\r\n                />\r\n                <div *ngIf=\"formRoute.get('name').invalid && formRoute.get('name').touched\" >\r\n                    <label class=\"label required\" *ngIf=\"formRoute.get('name').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                </div>  \r\n            </div>\r\n\r\n            <!-- Destino -->\r\n            <div class=\"form-group\">\r\n              <label class=\"required\">*</label>\r\n              <label for=\"destination\" class=\"label\">Destino: &nbsp;</label>\r\n              <label class=\"label black\" #destinationLabel>No seleccionado.</label>\r\n              <br>   \r\n              \r\n              <!-- Barra de busqueda -->\r\n              <input\r\n                [ngClass]=\"{\r\n                  'inp-invalid': formRoute.get('destination')?.invalid && formRoute.get('destination')?.touched, \r\n                  'nbInput': formRoute.get('destination').valid\r\n                }\"\r\n                #destinationSearchInput\r\n                nbInput\r\n                fullWidth\r\n                [ngClass]=\"{'loading': isLoading}\"\r\n                [spellcheck]=\"false\"\r\n                placeholder=\"Buscar destino\"\r\n                type=\"text\"\r\n                (ngModelChange)=\"search($event)\"\r\n                [(ngModel)]=\"src\"\r\n                [ngModelOptions]=\"{standalone: true}\">\r\n\r\n              <!-- Etiqueta de mensajes -->\r\n              <div *ngIf=\"formRoute.get('destination')?.invalid && formRoute.get('destination')?.touched\" >\r\n                <label class=\"label required\" *ngIf=\"formRoute.get('destination').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n              </div>\r\n              \r\n              <!-- Lista con los destinos obtenidos tras la busqueda -->\r\n              <nb-card \r\n                [hidden]=\"data == null ? true : false\"\r\n                [nbSpinner]=\"isLoading\" \r\n                nbSpinnerStatus=\"primary\" \r\n                class=\"list-card borderless\" size=\"small\">\r\n                  <nb-list >\r\n                    <nb-list-item \r\n                      (click)=\"setDestination(item.id, item.name)\" \r\n                      *ngFor=\"let item of data | async\"\r\n                      (mouseenter)=\"setHoverBorder($event)\"\r\n                      (mouseleave)=\"setHoverBorder($event)\">\r\n                        {{item.name}} <br>\r\n                        Tarifa: Q{{item.fee}}\r\n                    </nb-list-item>\r\n                  </nb-list>\r\n              </nb-card>  \r\n\r\n              <!-- Estado de la Ruta -->\r\n            <div class=\"form-group\">\r\n              <br>\r\n              <label class=\"required\">*</label>\r\n              <label for=\"fee\" class=\"label\">Ruta Activa</label> \r\n              <br>\r\n                <label class=\"switch\" for=\"checkbox\">\r\n                  <input #activeToggle (change)=\"setActiveValue()\" type=\"checkbox\" id=\"checkbox\" />\r\n                  <div class=\"slider round\"></div>\r\n                </label>   \r\n            </div>  \r\n               \r\n          </div>\r\n             \r\n            <div class=\"row\">\r\n              <button type=\"submit\" nbButton status=\"primary\" (click)=\"updateRoute()\" hero>Actualizar</button>&nbsp;&nbsp;\r\n              <button (click)=\"goBack()\" nbButton status=\"danger\" hero>Cancelar</button>\r\n            </div>\r\n          </form>\r\n\r\n        </nb-card-body>\r\n      </nb-card>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { DestinationService } from '../../others/services/destination/destination.service'; \r\nimport { Router } from '@angular/router';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { CustomServerDataSource } from '../../others/models/CustomServerDataSource';\r\n\r\n@Component({\r\n  selector: 'ngx-list-destinations',\r\n  templateUrl: './list-destinations.component.html',\r\n  styleUrls: ['./list-destinations.component.scss']\r\n})\r\nexport class ListDestinationsComponent implements OnInit {\r\n\r\n  notification : NotificationsComponent;\r\n  source: CustomServerDataSource;\r\n  showPerPage = 10;\r\n\r\n  settings = {\r\n    mode: 'external', \r\n    noDataMessage: 'No exite ningun destino en el sistema.',\r\n    pager:{\r\n      display: true,\r\n      perPage: this.showPerPage,\r\n    },\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n      },\r\n      name: {\r\n        title: 'Nombre',\r\n        type: 'string',\r\n      },\r\n      description: {\r\n        title: 'Descripcion',\r\n        type: 'string',\r\n      },\r\n      fee: {\r\n        title: 'Tarifa',\r\n        type: 'number',\r\n      }\r\n    },\r\n    defaultStyle: false,\r\n    actions: {\r\n      columnTitle: 'Acciones',\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n      custom: [\r\n        { name: 'edit', title: '<i class=\"nb-edit\"></i>' },\r\n        { name: 'delete', title: '<i class=\"nb-trash\"></i>' }\r\n      ],\r\n      position: 'right'\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private destinationService : DestinationService,  \r\n    private router: Router,\r\n    private toastrService: NbToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.source = this.destinationService.getAllDestinationsPaginated();\r\n  }\r\n\r\n  public onCustomAction(event){\r\n    switch(event.action){\r\n      case 'edit':\r\n        this.router.navigate(['views', 'admin', 'edit-destination', event.data['id']]);    \r\n        break;\r\n      \r\n      case 'delete':\r\n        this.delete(event.data['id']);\r\n        break;\r\n    }  \r\n  }\r\n\r\n  private delete(id : number) {\r\n    if(window.confirm('¿Eliminar permanentemente el destino?')){\r\n      this.destinationService.deleteDestination(id).subscribe({\r\n        next:(res) => {\r\n          this.notification.showToast(1, 'Exito', 'Destino eliminado exitosamente.', 3000);\r\n          this.source.remove(id);\r\n        },  \r\n        error:(error) => {\r\n          this.notification.showToast(3, 'Error', error.error , 4000);\r\n        }\r\n      })\r\n    } \r\n  }\r\n\r\n}","<div class=\"center\">\r\n      <nb-card>\r\n        <nb-card-header>\r\n          Destinos\r\n        </nb-card-header>\r\n      \r\n        <nb-card-body>\r\n          <ng2-smart-table \r\n          [settings]=\"settings\" \r\n          [source]=\"source\"\r\n          (custom)=\"onCustomAction($event)\"\r\n          >\r\n          </ng2-smart-table>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</div>\r\n\r\n\r\n","import { Component, ComponentFactoryResolver, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { User } from '../../others/models/employee';\nimport { AdminService } from '../../others/services/admin.service';\nimport { UpdateUserComponent } from '../update-user/update-user.component';\n\n@Component({\n  selector: 'ngx-list-edit-users',\n  templateUrl: './list-edit-users.component.html',\n  styleUrls: ['./list-edit-users.component.scss']\n})\nexport class ListEditUsersComponent implements OnInit {\n\n\n  @ViewChild('container', { read: ViewContainerRef })\n  container!: ViewContainerRef;\n\n  users: User[];\n  user: User;\n  settings = {\n    actions: {\n      columnTitle: 'Editar',\n      add: false,\n      edit: false\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-edit\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      name: {\n        title: 'Nombres',\n        type: 'string',\n      },\n      lastname: {\n        title: 'Apellidos',\n        type: 'string',\n      },\n      username: {\n        title: 'Username',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n      cui: {\n        title: 'CUI',\n        type: 'number',\n      },\n      type: {\n        title: 'Tipo de Usuario',\n        type: 'string',\n        valuePrepareFunction: (type) => {\n          if(type == 1) return 'Administrador'\n          if(type == 2) return 'Operador'\n          if(type == 3) return 'Recepcionista'\n        }\n      }\n    },\n\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, private adminService: AdminService, private router: Router) {\n    this.getData();\n  }\n\n  getData(){\n    this.adminService.getAllActivatesNotAdmin().subscribe(response => {\n      this.users = response;\n      console.log(this.users)\n      this.source.load(this.users)\n    })\n  }\n\n  deactivateConfirm(event): void{\n    if(window.confirm('Estas seguro de desactivar a este usuario?')){\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  goToEdit(event){\n    console.log('hola mundo')\n\n  }\n\n  onDeleteConfirm(event): void {\n    const dynamicComponentFactory = this.componentFactoryResolver.resolveComponentFactory(UpdateUserComponent);\n    const componentRef = this.container.createComponent(dynamicComponentFactory);\n    componentRef.instance.userReceive = event.data;\n    componentRef.instance.users = this.users;\n    componentRef.instance.source = this.source;\n    document.getElementById('table-employeers').style.display = \"none\";\n  }\n\n  onCustom(event): void {\n    console.log('hola mundo');\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nb-card id=\"table-employeers\">\n  <nb-card-header>\n    Listado de usuarios\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\n    </ng2-smart-table>\n\n\n  </nb-card-body>\n</nb-card>\n<ng-container #container></ng-container>\n","import { Component, ComponentFactoryResolver, Input, OnInit, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { Subject } from 'rxjs';\r\nimport { User } from '../../others/models/employee';\r\nimport { AdminService } from '../../others/services/admin.service';\r\nimport { UpdateUserComponent } from '../update-user/update-user.component';\r\n\r\n@Component({\r\n  selector: 'ngx-list-users',\r\n  templateUrl: './list-users.component.html',\r\n  styleUrls: ['./list-users.component.scss']\r\n})\r\nexport class ListUsersComponent implements OnInit {\r\n\r\n\r\n  users: User[];\r\n  user: User;\r\n  settings = {\r\n    actions: {\r\n      columnTitle: 'Editar',\r\n      add: false,\r\n      edit: false,\r\n      delete: false\r\n    },\r\n    columns: {\r\n      name: {\r\n        title: 'Nombres',\r\n        type: 'string',\r\n      },\r\n      lastname: {\r\n        title: 'Apellidos',\r\n        type: 'string',\r\n      },\r\n      username: {\r\n        title: 'Username',\r\n        type: 'string',\r\n      },\r\n      email: {\r\n        title: 'E-mail',\r\n        type: 'string',\r\n      },\r\n      cui: {\r\n        title: 'CUI',\r\n        type: 'number',\r\n      },\r\n      type: {\r\n        title: 'Tipo de Usuario',\r\n        type: 'string',\r\n        valuePrepareFunction: (type) => {\r\n          if(type == 1) return 'Administrador'\r\n          if(type == 2) return 'Operador'\r\n          if(type == 3) return 'Recepcionista'\r\n        },\r\n      },\r\n      activo: {\r\n        title: 'Estado',\r\n        type: 'string',\r\n        valuePrepareFunction: (activo) => {\r\n          if(activo == 1) return 'Activo'\r\n          if(activo == 0) return 'Desactivo'\r\n        }\r\n      }\r\n    },\r\n\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n\r\n\r\n  constructor(private adminService: AdminService) {\r\n    this.source = this.adminService.getAll();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<nb-card id=\"table-employeers\">\r\n  <nb-card-header>\r\n    Listado de usuarios\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\">\r\n    </ng2-smart-table>\r\n\r\n\r\n  </nb-card-body>\r\n</nb-card>\r\n<ng-container #container></ng-container>\r\n","import { NbMenuItem } from '@nebular/theme';\r\n\r\nexport const ADMINISTRATOR_MENU_ITEMS: NbMenuItem[] = [\r\n    {\r\n        title: 'Destinos',\r\n        icon: 'map-outline',\r\n        children:[\r\n            {\r\n                title: 'Crear',\r\n                link: '/views/users/admin/create-destination'\r\n            },\r\n            {\r\n                title: 'Listado de Destinos',\r\n                link: '/views/users/admin/destinations'\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        title: 'Puntos de Control',\r\n        icon: 'home-outline',\r\n        children:[\r\n            {\r\n                title: 'Crear',\r\n                link: '/views/users/admin/create-checkpoint'\r\n            },\r\n            {\r\n                title: 'Listado de Puntos de Control',\r\n                link: '/views/users/admin/checkpoints'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        title: 'Reportes',\r\n        icon: 'clipboard-outline',\r\n        children:[\r\n            {\r\n                title: 'Paquetes en rutas',\r\n                link: '/views/reports/report-1/'\r\n            },\r\n            {\r\n                title: 'Rutas populares',\r\n                link: '/views/reports/report-4/'\r\n            },\r\n            {\r\n                title: 'Ganancias por ruta',\r\n                link: '/views/reports/report-2/'\r\n            },\r\n            {\r\n                title: 'Ganancias por cliente',\r\n                link: '/views/reports/report-3/'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        title: 'Rutas',\r\n        icon: 'car-outline',\r\n        children:[\r\n            {\r\n                title: 'Crear',\r\n                link: '/views/users/admin/routes/create-route'\r\n            },\r\n            {\r\n                title: 'Listado de Rutas',\r\n                link: '/views/users/admin/route-list/'\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        title: 'Tarifas',\r\n        icon: 'trending-up-outline',\r\n        children:[\r\n            {\r\n                title: 'Tarifas Globales',\r\n                link: '/views/users/admin/rates'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Usuarios',\r\n        icon: 'person-outline',\r\n        children:[\r\n            {\r\n                title: 'Listado General',\r\n                link: '/views/users/admin/list-users'\r\n            },\r\n            {\r\n                title: 'Edicion',\r\n                link: '/views/users/admin/list-edit-users'\r\n            },\r\n            {\r\n              title: 'Registo',\r\n              link: '/views/users/admin/register'\r\n            },\r\n            {\r\n              title: 'Activacion',\r\n              link: '/views/users/admin/activate-users'\r\n            },\r\n            // Aca se agregan los links a cada una de las acciones de este apartado\r\n        ]\r\n    }\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { RatesService } from '../../others/services/rates/rates.service';\r\nimport * as global from '../../../GLOBAL';\r\nimport { Rate } from '../../others/models/rate';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-rates',\r\n  templateUrl: './rates.component.html',\r\n  styleUrls: ['./rates.component.scss']\r\n})\r\nexport class RatesComponent implements OnInit {\r\n  \r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n  ERROR_MIN = global.GLOBAL.ERROR_MIN;\r\n  ERROR_NUMBER = global.GLOBAL.ERROR_NUMBER;\r\n\r\n  OPERATION_FEE = 'Tarifa por operación';\r\n  PRICE_PER_POUND = 'Tarifa por libra';\r\n  PRIORIZATION_FEE = 'Tarifa por priorización';\r\n\r\n  datarates : Rate [];\r\n  notification : NotificationsComponent;\r\n\r\n  errors = false;\r\n  formRates : FormGroup = new FormGroup ({\r\n    /** \r\n     * Primer parametro: valor incial\r\n     * Segundo parametro: validators\r\n    */  \r\n    operatorFee : new FormControl(null, [ \r\n        Validators.min(0), \r\n        Validators.pattern('[0-9]+(.[0-9]+)?')\r\n      ] \r\n    ),\r\n    priorizationFee : new FormControl(null, [ \r\n      Validators.min(0), \r\n      Validators.pattern('[0-9]+(.[0-9]+)?')\r\n      ] \r\n      ),  \r\n    pricePerPound: new FormControl(null, [ \r\n      Validators.min(0), \r\n      Validators.pattern('[0-9]+(.[0-9]+)?')\r\n      ] \r\n      ),  \r\n  });\r\n\r\n  constructor(\r\n    private api_rates : RatesService, \r\n    private toastrService: NbToastrService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.set_values();\r\n  }\r\n\r\n  set_rates() {\r\n    if (this.formRates.valid) {\r\n      // Mandar la peticion de crear\r\n      this.addRates(this.OPERATION_FEE, this.formRates.get('operatorFee').value, true)  \r\n      this.addRates(this.PRIORIZATION_FEE, this.formRates.get('priorizationFee').value, false)  \r\n      this.addRates(this.PRICE_PER_POUND, this.formRates.get('pricePerPound').value, false);\r\n    } else {\r\n      this.errors = true;\r\n      return;\r\n    }\r\n  }\r\n\r\n  private set_values(){\r\n    this.api_rates.getRates()\r\n    .subscribe({\r\n      next:(res) => {\r\n        this.addField(res);\r\n      },\r\n      error:(err) => {\r\n        this.notification.showToast(4, 'Error', 'Error mientras se obtenian las tarifas, vuelve a intentarlo.', 2500);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getIdRate(name) : Rate {\r\n    return this.datarates.find( function(item){\r\n        return item.name === name;\r\n    });\r\n  }\r\n\r\n  private addField(data){\r\n    this.datarates = data;\r\n    for (const iterator of data) {\r\n      if (iterator['name'] === 'Tarifa por operación') {\r\n        this.formRates.controls['operatorFee'].setValue(iterator['fee'])\r\n      } else if (iterator['name'] === 'Tarifa por priorización') {\r\n        this.formRates.controls['priorizationFee'].setValue(iterator['fee'])\r\n      } else {\r\n        this.formRates.controls['pricePerPound'].setValue(iterator['fee'])\r\n      }\r\n    }\r\n  }\r\n\r\n  private addRates(name, fee, redirect) {\r\n    let newRate : Rate;\r\n    let rateSearch = this.getIdRate(name);\r\n    if (rateSearch != null) {\r\n      newRate = {\r\n        id : rateSearch.id,\r\n        name : name,\r\n        fee : fee == null ? 0 : parseFloat(fee)\r\n      }\r\n      this.api_rates.putRates(newRate, rateSearch.id)\r\n      .subscribe({\r\n        next : (res) => {\r\n          if (redirect) {\r\n            setTimeout(() => {\r\n              this.formRates.reset();\r\n              this.router.navigate(['views', 'admin']);\r\n            }, 3000);\r\n          }\r\n          fee == null \r\n          ? this.notification.showToast(3, 'Precaución', 'Debido a que el campo de: ' + name + ', esta vacio, el valor por defecto sera 0.', 2500)\r\n          : console.log(\"\");  \r\n          this.notification.showToast(1, 'Editado', name + ', modificado correctamente.', 2500);\r\n        },\r\n        error:(err) => {\r\n          err.status == 404 ?\r\n            this.notification.errors(404, \"No se encuentra la tarifa: \" + name + \", vuelve a intentarlo.\") :\r\n            this.notification.errors(500, \"Error en el servidor, vuelve a intentarlo.\");\r\n        }\r\n      }); \r\n    } else {\r\n      newRate = { \r\n        name: name,\r\n        fee: fee == null ? 0 : fee\r\n      };\r\n      this.api_rates.postRates(newRate)\r\n      .subscribe({\r\n        next : (res) => {\r\n          if (redirect) {\r\n            setTimeout(() => {\r\n              this.formRates.reset();\r\n              this.router.navigate(['views', 'admin']);\r\n            }, 3000);\r\n          }\r\n          fee == null \r\n          ? this.notification.showToast(3, 'Precaución', 'Debido a que el campo de: ' + name + ', esta vacio, el valor por defecto sera 0.', 2500)\r\n          : console.log(\"\");\r\n          this.notification.showToast(1, 'Agregado', name + ', agregado correctamente.', 2500);\r\n        },\r\n        error:(err) =>{\r\n          err.status == 404 ?\r\n            this.notification.errors(404, \"No se encuentra la tarifa: \" + name + \", vuelve a intentarlo.\") :\r\n            this.notification.errors(500, \"Error en el servidor, vuelve a intentarlo.\");\r\n        }\r\n      }); \r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    this.formRates.reset();\r\n    this.router.navigate(['views', 'admin'])\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n    <nb-card>\r\n      <!-- Titulo del formulario de tarifas globales  -->\r\n      <nb-card-header>\r\n        <nb-icon icon=\"plus\" pack=\"eva\"></nb-icon>\r\n        <nb-icon icon=\"trending-up-outline\" pack=\"eva\"></nb-icon>\r\n        Tarifas\r\n      </nb-card-header>\r\n      <nb-card-body>\r\n        <!-- Formulario para tarifas -->\r\n        <form [formGroup]=\"formRates\">\r\n          <div class=\"row\">\r\n            <!-- Por Operacion -->\r\n            <div class=\"col-sm-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"operationFee\" class=\"label\">Por Operación</label> \r\n                <div *ngIf=\"formRates.get('operatorFee')?.errors && formRates.get('operatorFee')?.touched || errors\" >\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formRates.get('operatorFee').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formRates.get('operatorFee').hasError('min')\">{{ERROR_MIN}}</label><br>\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formRates.get('operatorFee').hasError('pattern')\">{{ERROR_NUMBER}}</label>\r\n                </div>\r\n                <input \r\n                type=\"number\"\r\n                [class.inp-invalid]=\"formRates.get('operatorFee')?.errors && formRates.get('operatorFee')?.touched || errors\" \r\n                formControlName=\"operatorFee\" \r\n                step=\"0.01\" \r\n                min=\"0\" \r\n                nbInput \r\n                fullWidth \r\n                id=\"operationFee\" \r\n                placeholder=\"Por Operacion\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n             <!-- De Priorización -->\r\n             <div class=\"col-sm-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"priorizationFee\" class=\"label\">Por Priorización</label> \r\n                <div *ngIf=\"formRates.get('priorizationFee')?.errors && formRates.get('priorizationFee')?.touched || errors\" >\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formRates.get('priorizationFee').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formRates.get('priorizationFee').hasError('min')\">{{ERROR_MIN}}</label><br>\r\n                  <label class=\"label\" style=\"color: red;\" *ngIf=\"formRates.get('priorizationFee').hasError('pattern')\">{{ERROR_NUMBER}}</label>\r\n                </div>\r\n                <input \r\n                type=\"number\"\r\n                [class.inp-invalid]=\"formRates.get('priorizationFee')?.errors && formRates.get('priorizationFee')?.touched || errors\" \r\n                formControlName=\"priorizationFee\" \r\n                step=\"0.01\" \r\n                min=\"0\" \r\n                nbInput \r\n                fullWidth \r\n                id=\"priorizationFee\" \r\n                placeholder=\"Por Priorización\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n          <div class=\"row\">\r\n            <!-- Por Libra -->\r\n            <div class=\"form-group\">\r\n              <label for=\"pricePerPound\" class=\"label\">Por Libra</label> \r\n              <div *ngIf=\"formRates.get('pricePerPound')?.errors && formRates.get('pricePerPound')?.touched || errors\" >\r\n                <label class=\"label\" style=\"color: red;\" *ngIf=\"formRates.get('pricePerPound').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                <label class=\"label\" style=\"color: red;\" *ngIf=\"formRates.get('pricePerPound').hasError('min')\">{{ERROR_MIN}}</label><br>\r\n                <label class=\"label\" style=\"color: red;\" *ngIf=\"formRates.get('pricePerPound').hasError('pattern')\">{{ERROR_NUMBER}}</label>\r\n              </div>\r\n              <input \r\n              type=\"number\"\r\n              [class.inp-invalid]=\"formRates.get('pricePerPound')?.errors && formRates.get('pricePerPound')?.touched || errors\" \r\n              formControlName=\"pricePerPound\" \r\n              step=\"0.01\" \r\n              min=\"0\" \r\n              nbInput \r\n              fullWidth \r\n              id=\"pricePerPound\" \r\n              placeholder=\"Por Libra\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"row\">\r\n            <button type=\"submit\" nbButton status=\"primary\" (click)=\"set_rates()\" hero>Agregar</button>&nbsp;&nbsp;\r\n            <button nbButton status=\"danger\" (click)=\"onCancel()\" hero>Cancelar</button>\r\n          </div>\r\n        </form>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { EMPTY } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AdminService } from '../../others/services/admin.service';\r\nimport { User } from '../../others/models/employee';\r\nimport * as global from '../../../GLOBAL';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-register-user',\r\n  templateUrl: './register-user.component.html',\r\n  styleUrls: ['./register-user.component.scss']\r\n})\r\nexport class RegisterUserComponent implements OnInit {\r\n\r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n  ERROR_MIN = global.GLOBAL.ERROR_MIN;\r\n  ERROR_NUMBER = global.GLOBAL.ERROR_NUMBER;\r\n\r\n  form: FormGroup = new FormGroup({\r\n    username: new FormControl('', [ Validators.required ]),\r\n    name: new FormControl('', [ Validators.required ]),\r\n    lastname: new FormControl('', [ Validators.required ]),\r\n    password: new FormControl('', [ Validators.required, Validators.minLength(7) ]),\r\n    repitPassword: new FormControl('', [ Validators.required, Validators.minLength(7) ]),\r\n    cui: new FormControl('', [ Validators.required ]),\r\n    type: new FormControl('', [ Validators.required ]),\r\n    activo: new FormControl(''),\r\n    email: new FormControl('', [ Validators.required, Validators.email ]),\r\n//    id: new FormControl('')\r\n  })\r\n  pass2: string;\r\n  user: User;\r\n  public identity: any;\r\n  public token: any;\r\n\r\n  errors = false;\r\n  notification: NotificationsComponent;\r\n\r\n  constructor(private adminService: AdminService, private router: Router, private toastrService: NbToastrService) { }\r\n\r\n  submit(){\r\n    this.form.value.activo = 1;\r\n    if(this.form.valid){\r\n      this.user = this.form.value;\r\n      this.adminService.add(this.user)\r\n      .pipe(\r\n        catchError(error => {\r\n          console.log(error.error)\r\n        this.notification.showToast(4, 'Error', error.error, 2500);\r\n        return EMPTY\r\n        })\r\n      )\r\n      .subscribe(\r\n        result => {\r\n          this.notification.showToast(1, 'Agregado', `Empleado agregado correctamente`, 2500);\r\n          this.router.navigate(['/views/users/admin']);\r\n        },\r\n      )\r\n    } else {\r\n      console.log('error form no valido');\r\n    }\r\n  }\r\n\r\n  pruebas(){\r\n    console.log(this.form.value.type)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n  }\r\n\r\n}\r\n\r\n","\r\n<div class=\"row\">\r\n  <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n    <nb-card >\r\n      <nb-card-header><h1 id=\"title\" class=\"title\">Register</h1></nb-card-header>\r\n\r\n        <nb-card-body>\r\n\r\n<form [formGroup]=\"form\" aria-labelledby=\"title\">\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >Nombres</label>\r\n    <div class=\"col-sm-9\">\r\n\r\n    <input nbInput\r\n           formControlName=\"name\"\r\n           id=\"input-name\"\r\n           name=\"fullName\"\r\n           placeholder=\"Full name\"\r\n           autofocus\r\n           fullWidth>\r\n     <div *ngIf=\"form.get('name')?.errors && form.get('name')?.touched || errors\" >\r\n      <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('name').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >Apellidos</label>\r\n    <div class=\"col-sm-9\">\r\n\r\n    <input nbInput\r\n           formControlName=\"lastname\"\r\n           id=\"input-lastname\"\r\n           name=\"fullName\"\r\n           placeholder=\"Full name\"\r\n           autofocus\r\n           fullWidth>\r\n           <!-- Aqui abajo va la condicional de si el fullname no existe -->\r\n     <div *ngIf=\"form.get('lastname')?.errors && form.get('lastname')?.touched || errors\" >\r\n      <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('lastname').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\" for=\"input-email\">Email:</label>\r\n    <div class=\"col-sm-9\">\r\n      <input nbInput\r\n           formControlName=\"email\"\r\n           id=\"input-email\"\r\n           name=\"email\"\r\n           placeholder=\"Email address\"\r\n           fullWidth>\r\n           <!-- Abajo la condicional de si el email no existe o tiene errores -->\r\n      <div *ngIf=\"form.get('email')?.errors && form.get('email')?.touched || errors\" >\r\n        <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('email').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n        <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('email').hasError('email')\">Debe ser un email valido</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\"  for=\"input-email\">Username:</label>\r\n    <div class=\"col-sm-9\">\r\n    <input nbInput\r\n            formControlName=\"username\"\r\n           id=\"input-username\"\r\n           name=\"username\"\r\n           placeholder=\"Username\"\r\n           fullWidth>\r\n           <!-- Abajo la condicional de si el email no existe o tiene errores -->\r\n      <div *ngIf=\"form.get('username')?.errors && form.get('username')?.touched || errors\" >\r\n        <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('username').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\"  for=\"input-password\">Contraseña:</label>\r\n    <div class=\"col-sm-9\">\r\n    <input nbInput\r\n          formControlName=\"password\"\r\n           type=\"password\"\r\n           id=\"input-password\"\r\n           name=\"password\"\r\n           placeholder=\"Password\"\r\n           fullWidth>\r\n           <!-- Abajo la condicional de si el password no existe o tiene errores -->\r\n      <div *ngIf=\"form.get('password')?.errors && form.get('password')?.touched || errors\" >\r\n        <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('password').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n        <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('password').hasError('minLength')\">La contraseña debe tener almenos 7 caracteres</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\"  for=\"input-re-password\">Repetir contraseña</label>\r\n    <div class=\"col-sm-9\">\r\n      <input nbInput\r\n           type=\"password\"\r\n           id=\"input-re-password\"\r\n           name=\"rePass\"\r\n           placeholder=\"Confirm Password\"\r\n           fullWidth\r\n           formControlName=\"repitPassword\">\r\n           <!-- Abajo la condicional de si la verificacion de password no existe o tiene errores -->\r\n         <div *ngIf=\"form.get('repitPassword')?.errors && form.get('repitPassword')?.touched || errors\" >\r\n          <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('repitPassword').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n          <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('repitPassword').hasError('minLength')\">La contraseña debe tener almenos 7 caracteres</label>\r\n          </div>\r\n          <div *ngIf=\"form.get('repitPassword').value != form.get('password').value && form.get('repitPassword')?.touched \">\r\n            <label class=\"label\" style=\"color: red;\">El campo no coincide con la contraseña previamente definida</label>\r\n          </div>\r\n\r\n        </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\"  for=\"input-name\" >CUI</label>\r\n    <div class=\"col-sm-9\">\r\n      <input nbInput\r\n           formControlName=\"cui\"\r\n           id=\"input-cui\"\r\n           name=\"cui\"\r\n           placeholder=\"CUI\"\r\n           autofocus\r\n           fullWidth>\r\n           <!-- Aqui abajo va la condicional de si el fullname no existe -->\r\n      <div *ngIf=\"form.get('CUI')?.errors && form.get('CUI')?.touched || errors\" >\r\n        <label class=\"label\" style=\"color: red;\" *ngIf=\"form.get('CUI').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\"  for=\"input-name\" >Tipo de usuario</label>\r\n    <div class=\"col-sm-9\">\r\n\r\n    <nb-select [selected]=1 status=\"primary\" formControlName=\"type\">\r\n      <nb-option [value]=\"1\">Administrador</nb-option>\r\n      <nb-option [value]=\"2\">Operador</nb-option>\r\n      <nb-option [value]=\"3\">Recepcionista</nb-option>\r\n    </nb-select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-control-group\">\r\n    <button nbButton\r\n    status=\"primary\"\r\n    [disabled]=\"form.invalid\"\r\n    (click)=\"submit()\">\r\n      Register\r\n    </button>\r\n\r\n  </div>\r\n</form>\r\n</nb-card-body>\r\n\r\n</nb-card>\r\n</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { CustomServerDataSource } from '../../others/models/CustomServerDataSource';\r\nimport { RouteService } from '../../others/services/route/route.service';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\n\r\n@Component({\r\n  selector: 'ngx-route-list',\r\n  templateUrl: './route-list.component.html',\r\n  styleUrls: ['./route-list.component.scss']\r\n})\r\nexport class RouteListComponent implements OnInit {\r\n\r\n  notification : NotificationsComponent;\r\n  source: CustomServerDataSource;\r\n  showPerPage = 10;\r\n\r\n  settings = {\r\n    mode: 'external', \r\n    noDataMessage: 'No exite ninguna ruta en el sistema.',\r\n    pager:{\r\n      display: true,\r\n      perPage: this.showPerPage,\r\n    },\r\n    actions: {\r\n      columnTitle: 'Acciones',\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n      custom: [\r\n        { name: 'editRoute', title: '<i class=\"nb-edit\"></i>' },\r\n        { name: 'deleteRoute', title: '<i class=\"nb-trash\"></i>' },\r\n      ],\r\n      position: 'right'\r\n    },\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n      },\r\n      active: {\r\n        title: 'Estado',\r\n        type: 'string',\r\n        valuePrepareFunction: (state) => {\r\n          return `${state == 1 ? 'Activa' : 'Desactivada'}`;\r\n        },\r\n      },\r\n      name: {\r\n        title: 'Nombre',\r\n        type: 'string',\r\n        compareFunction: 'sortName'\r\n      },\r\n      destination: {\r\n        title: 'Destino',\r\n        type: 'string',\r\n        valuePrepareFunction: (destination) => {\r\n          return `${destination.name}`;\r\n        }\r\n      },\r\n      packagesOnRoute: {\r\n        title: 'Paquetes en Ruta',\r\n        type: 'number',\r\n      },\r\n    },\r\n  };\r\n\r\n  constructor(\r\n    private api : RouteService,\r\n    private router : Router,\r\n    private toastrService : NbToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.source = this.api.getAllRoutesPaginated();\r\n  }\r\n\r\n  onCustomAction(event){\r\n    if(parseInt(event.data['packagesOnRoute']) > 0){\r\n      this.notification.showToast(4, 'Error', 'No se puede realizar la accion sobre esta ruta debido a que tiene paquetes en ruta.', 3000);\r\n    } else{\r\n      switch (event.action) {\r\n        case 'editRoute':\r\n          this.router.navigate(['views', 'admin', 'edit-route', event.data['id']]);\r\n          break;\r\n        case 'deleteRoute':\r\n          this.deleteRoute(parseInt(event.data['id']))\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private deleteRoute(id : number) {\r\n    if(window.confirm('¿Eliminar permanentemente la ruta?')){\r\n      this.api.deleteRoute(id).subscribe({\r\n        next:(res) => {\r\n          this.notification.showToast(1, 'Exito', 'Ruta eliminada exitosamente.', 3000);\r\n          this.source.remove(id);\r\n        },  \r\n        error:(error) => {\r\n          this.notification.showToast(3, 'Error', error.error , 4000);\r\n        }\r\n      })\r\n    } \r\n  }\r\n}","<nb-card>\r\n    <nb-card-header>\r\n      Rutas\r\n    </nb-card-header>\r\n  \r\n    <nb-card-body>\r\n      <ng2-smart-table \r\n      [settings]=\"settings\" \r\n      [source]=\"source\"\r\n      (custom)=\"onCustomAction($event)\"\r\n      >\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n  </nb-card>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport * as global from '../../../../GLOBAL';\r\nimport { RouteService } from '../../../others/services/route/route.service';\r\nimport { DestinationService } from '../../../others/services/destination/destination.service';\r\nimport { Router } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { NotificationsComponent } from '../../../others/source/notifications/notifications.component';\r\nimport {\r\n  NbToastrService,\r\n} from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-create-route',\r\n  templateUrl: './create-route.component.html',\r\n  styleUrls: ['./create-route.component.scss']\r\n})\r\n\r\nexport class CreateRouteComponent implements OnInit {\r\n  \r\n  @ViewChild(\"destinationLabel\") destinationLabel: ElementRef;\r\n  @ViewChild(\"destinationSearchInput\") destinationSearchInput: ElementRef;\r\n\r\n  //Constantes globales\r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n  ADMIN_HOME = global.GLOBAL.ADMIN_HOME;\r\n\r\n  //Varaiables\r\n  notification: NotificationsComponent;\r\n  isLoading: boolean = false;\r\n  src: string;\r\n  data: any;\r\n\r\n  //Fomulario reactivo\r\n  formRoute: FormGroup = new FormGroup({\r\n    name: new FormControl(null, Validators.required),\r\n    destination: new FormControl(null, Validators.required),\r\n    destinationId: new FormControl(null, null)\r\n  });\r\n\r\n  constructor(\r\n    private routeService : RouteService,\r\n    private destinationService : DestinationService, \r\n    private toastService: NbToastrService,\r\n    private router: Router\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastService);\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que valida que el form sea valido, de ser \r\n   * asi llama al metodo create enviando como parametros los \r\n   * datos obtenidos en el form.\r\n   */\r\n  public createRoute(){\r\n    if(this.formRoute.valid){\r\n      this.create(\r\n        this.formRoute.get('name').value,\r\n        this.formRoute.get('destinationId').value\r\n      );\r\n    } else{\r\n      this.formRoute.markAllAsTouched();\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que llama al metodo createRoute del servicio \r\n   * RoutesServices, muestra un mensaje en pantalla segun el exito\r\n   * o fallo de la peticion que manda a realizar.\r\n   * @param routeName Nombre de la ruta\r\n   * @param routeDestinationId  Id del destino de la ruta\r\n   */\r\n  private create(routeName: string, routeDestinationId: number){\r\n    this.routeService.createRoute({\r\n      name: routeName, \r\n      packagesOnRoute: 0,\r\n      totalPackages: 0,\r\n      active: false,\r\n      destination: {\r\n        id: routeDestinationId\r\n      } \r\n    }).subscribe({\r\n      next : (res) => {\r\n        this.notification.showToast(1, 'Exito', `Ruta ${routeName} creada exitosamente.`, 5000);\r\n        this.formRoute.reset();\r\n        this.router.navigate([this.ADMIN_HOME]);\r\n      },\r\n      error : (error) => {\r\n        switch(error.status){\r\n          case 400:\r\n            this.notification.showToast(3, 'Error', error.error , 3000);\r\n            break;\r\n\r\n          default:\r\n            this.notification.showToast(3, 'Error', `Error desconocido en la creacion de la ruta: ${routeName}. Verifique los datos ingresados y vuelva a intentarlo.`, 3000);\r\n            break;\r\n        } \r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que llama a la funcion getDestinations del servicio\r\n   * DestinationService para obtener todos los destinos que coinciden \r\n   * con el patron de busqueda que se recibe como parametro. Los datos\r\n   * obtenidos se almacenan en la variable data.\r\n   * @param pattern Patron de busqueda\r\n   */\r\n  public search(pattern: string){\r\n    if(pattern != ''){\r\n      this.isLoading = true;\r\n      this.data = this.destinationService.getDestinations(pattern).pipe(\r\n        finalize(() => this.isLoading = false )\r\n      );\r\n    } else this.data = null;\r\n  }\r\n  \r\n  /**\r\n   * Procedimiento que setea el valor del lable destinationLabel,\r\n   * tambien establece el valor del formControl destinatioId, por\r\n   * ultimo elimina todos los errores existentes en el formControl\r\n   * destination.\r\n   * @param destinationId id del destino\r\n   * @param destinationName  nombre del destino\r\n   */\r\n  public setDestination(destinationId: number, destinationName: string){\r\n    this.destinationLabel.nativeElement.innerHTML = destinationName;\r\n    this.formRoute.get('destinationId').setValue(destinationId);\r\n    this.formRoute.get('destination').setErrors(null)\r\n    this.data = null;\r\n    this.destinationSearchInput.nativeElement.value = '';\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que se encarga de establecer el tipo de borde\r\n   * del elemento html que se recibe como parametro.\r\n   * @param event Evento disparado\r\n   */\r\n  public setHoverBorder(event: MouseEvent) {\r\n    const newsImage: HTMLDivElement = <HTMLDivElement>event.target;\r\n    if (event.type === 'mouseenter') {\r\n      newsImage.style.border = 'ridge';\r\n    } else if (event.type === 'mouseleave') {\r\n      newsImage.style.border = 'none';\r\n    }\r\n  }\r\n}","<div class=\"center\">\r\n    <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n      <nb-card>\r\n\r\n        <!-- Titulo del formulario para creacion de rutas  -->\r\n        <nb-card-header>\r\n            <nb-icon icon=\"plus\" pack=\"eva\"></nb-icon>\r\n            <nb-icon icon=\"car-outline\" pack=\"eva\"></nb-icon>\r\n            Ruta\r\n        </nb-card-header>\r\n        \r\n        <!-- Cuerpo del formulario para creacion de rutas -->\r\n        <nb-card-body>\r\n          <form [formGroup]=\"formRoute\">\r\n            \r\n            <!-- Nombre -->\r\n            <div class=\"form-group\">\r\n                <label class=\"required\">*</label>\r\n                <label for=\"name\" class=\"label\">Nombre</label> \r\n                <input \r\n                  [ngClass]=\"{\r\n                    'inp-invalid': formRoute.get('name').invalid && formRoute.get('name').touched, \r\n                    'nbInput': formRoute.get('name').valid\r\n                  }\"\r\n                  type=\"text\"\r\n                  formControlName=\"name\"\r\n                  nbInput \r\n                  fullWidth \r\n                  id=\"name\" \r\n                  placeholder=\"Ingrese el nombre de la ruta a crear.\"\r\n                  required\r\n                />\r\n                <div *ngIf=\"formRoute.get('name').invalid && formRoute.get('name').touched\" >\r\n                    <label class=\"label required\" *ngIf=\"formRoute.get('name').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                </div>  \r\n            </div>\r\n\r\n            <!-- Destino -->\r\n            <div class=\"form-group\">\r\n              <label class=\"required\">*</label>\r\n              <label for=\"destination\" class=\"label\">Destino: &nbsp;</label>\r\n              <label class=\"label black\" #destinationLabel>No seleccionado.</label>\r\n              <br>   \r\n              \r\n              <!-- Barra de busqueda -->\r\n              <input\r\n                [ngClass]=\"{\r\n                  'inp-invalid': formRoute.get('destination')?.invalid && formRoute.get('destination')?.touched, \r\n                  'nbInput': formRoute.get('destination').valid\r\n                }\"\r\n                #destinationSearchInput\r\n                nbInput\r\n                fullWidth\r\n                [ngClass]=\"{'loading': isLoading}\"\r\n                [spellcheck]=\"false\"\r\n                placeholder=\"Buscar destino\"\r\n                type=\"text\"\r\n                (ngModelChange)=\"search($event)\"\r\n                [(ngModel)]=\"src\"\r\n                [ngModelOptions]=\"{standalone: true}\">\r\n\r\n              <!-- Etiqueta de mensajes -->\r\n              <div *ngIf=\"formRoute.get('destination')?.invalid && formRoute.get('destination')?.touched\" >\r\n                <label class=\"label required\" *ngIf=\"formRoute.get('destination').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n              </div>\r\n              \r\n              <!-- Lista con los destinos obtenidos tras la busqueda -->\r\n              <nb-card \r\n                [hidden]=\"data == null ? true : false\"\r\n                [nbSpinner]=\"isLoading\" \r\n                nbSpinnerStatus=\"primary\" \r\n                class=\"list-card borderless\" size=\"small\">\r\n                  <nb-list >\r\n                    <nb-list-item \r\n                      (click)=\"setDestination(item.id, item.name)\" \r\n                      *ngFor=\"let item of data | async\"\r\n                      (mouseenter)=\"setHoverBorder($event)\"\r\n                      (mouseleave)=\"setHoverBorder($event)\">\r\n                        {{item.name}} <br>\r\n                        Tarifa: Q{{item.fee}}\r\n                    </nb-list-item>\r\n                  </nb-list>\r\n              </nb-card>  \r\n          </div>\r\n             \r\n            <div class=\"row\">\r\n              <button type=\"submit\" nbButton status=\"primary\" (click)=\"createRoute()\" hero>Crear</button>&nbsp;&nbsp;\r\n              <button routerLink=\"{{ADMIN_HOME}}\" nbButton status=\"danger\" hero>Cancelar</button>\r\n            </div>\r\n          </form>\r\n\r\n        </nb-card-body>\r\n      </nb-card>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGuard } from '../../../auth/others/guards/admin.guard';\r\nimport { CreateRouteComponent } from './create-route/create-route.component';\r\n\r\nconst routes: Routes = [\r\n   {\r\n        path: 'create-route',\r\n        component: CreateRouteComponent,\r\n        canActivate: [AdminGuard]\r\n   }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoutesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RoutesRoutingModule } from './routes-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { \r\n  NbCardModule,\r\n  NbButtonModule,\r\n  NbInputModule,\r\n  NbIconModule,\r\n  NbSearchModule,\r\n  NbListModule,\r\n  NbSpinnerModule,\r\n  NbCheckboxModule,\r\n  NbRadioModule, \r\n  NbStepperModule\r\n} from '@nebular/theme';\r\n\r\nimport { CreateRouteComponent } from './create-route/create-route.component'; \r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RoutesRoutingModule,\r\n    NbCardModule,\r\n    NbButtonModule,\r\n    NbInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbIconModule,\r\n    HttpClientModule,\r\n    NbSearchModule,\r\n    NbListModule,\r\n    NbSpinnerModule,\r\n    NbCheckboxModule,\r\n    NbRadioModule,\r\n    NbStepperModule\r\n  ],\r\n  declarations: [\r\n    CreateRouteComponent\r\n  ] \r\n\r\n})\r\n\r\nexport class RoutesModule { }","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { CheckpointsService } from '../../others/services/checkpoint/checkpoints.service';\r\nimport { Router } from '@angular/router';\r\nimport { finalize } from 'rxjs/operators';\r\nimport * as global from '../../../GLOBAL';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalDataSource }from 'ng2-smart-table';\r\nimport { OperatorService } from '../../others/services/operator/operator.service';\r\n\r\n@Component({\r\n  selector: 'ngx-update-assignament-operator-checkpoint',\r\n  templateUrl: './update-assignament-operator-checkpoint.component.html',\r\n  styleUrls: ['./update-assignament-operator-checkpoint.component.scss']\r\n})\r\n\r\nexport class UpdateAssignamentOperatorCheckpointComponent implements OnInit {\r\n\r\n  @ViewChild(\"operatorsSearchInput\") operatorsSearchInput: ElementRef;\r\n\r\n  ERROR_REQUIRED = global.GLOBAL.ERROR_REQUIRED;\r\n  ERROR_MIN = global.GLOBAL.ERROR_MIN;\r\n  ERROR_NUMBER = global.GLOBAL.ERROR_NUMBER;\r\n\r\n  errors = false;\r\n  notification : NotificationsComponent;\r\n  data;\r\n  selected;\r\n\r\n  //Variables para busqueda de operadores\r\n  operatorsSrc: string;\r\n  operatorsData: any = null;\r\n  operatorsLoading: boolean = false;\r\n\r\n  formOperatorAssigment : FormGroup = new FormGroup ({\r\n    currentOperator : new FormControl ({ \r\n      value: '', \r\n      disabled: true \r\n    }, null),\r\n    operatorCUI: new FormControl(null, null),\r\n    selectedOperator : new FormControl (null, \r\n      Validators.required\r\n    )\r\n  });\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private location: Location,\r\n    private toastrService: NbToastrService,\r\n    private api : CheckpointsService,\r\n    private operatorService: OperatorService,\r\n    private router : Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.getCheckpoint();\r\n  }\r\n\r\n  private getCheckpoint() {\r\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.api.getCheckpoint(id)\r\n    .subscribe({\r\n      next:(res) => {\r\n        this.data = res;\r\n        if (parseInt(this.data['packageOnQueue']) > 0) {\r\n          this.notification.showToast(4, \"Error\", \"Error no se puede editar el punto de control porque tiene paquetes en cola\", 3000);\r\n          setTimeout(() => {\r\n            this.location.back();\r\n          }, 2000);\r\n        } else {\r\n          this.formOperatorAssigment.controls['currentOperator'].setValue(this.data.assignedOperator.cui + ' - '+ this.data.assignedOperator.name);\r\n        }\r\n      }, \r\n      error:(err) => {\r\n        if (err.status == 404) {\r\n          this.notification.errors(404, 'un punto de control con el ID: ' + id);\r\n        } else {\r\n          this.notification.errors(400, 'Mientras se obtenian los datos del punto de control, vuelve a intentarlo.');\r\n        }\r\n        setTimeout(() => {\r\n          this.location.back();\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  modify_operator() { \r\n    if (this.formOperatorAssigment.valid) {\r\n      this.data.assignedOperator = {\r\n        cui: this.selected.cui\r\n      }\r\n      this.service_edit(this.data);\r\n    } else {\r\n      this.errors = true;\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que llama a la funcion getOperators del servicio\r\n   * OperatorService para obtener todas la rutas que coinciden con \r\n   * el patron de busqueda que se recibe como parametro. Los datos\r\n   * obtenidos se almacenan en la variable routesData.\r\n   * @param pattern Patron de busqueda\r\n   */\r\n  public searchOperators(pattern: string){\r\n    if(pattern != ''){\r\n      this.operatorsLoading = true;\r\n      this.operatorsData = this.operatorService.getOperators(pattern).pipe(\r\n        finalize(() => this.operatorsLoading = false)\r\n      );\r\n    } else this.operatorsData = null;\r\n  }\r\n\r\n  service_edit(dataEdit) {\r\n    this.api.putOperatorCheckpoint(dataEdit, dataEdit.id)\r\n    .subscribe({\r\n      next : (res) => {\r\n        this.notification.showToast(1, 'Modificado', `El operador fue asignado con exito.`, 2000);\r\n        setTimeout(() => {\r\n          this.formOperatorAssigment.reset();\r\n          this.router.navigate(['views', 'admin' , 'checkpoints'])\r\n        }, 2300);\r\n      },\r\n      error : (err) => {\r\n        this.notification.errors(400, \"Error mientras se asignaba el operador, vuelve a intentarlo.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  public setOperator(cui: number, name: string, surname: string){\r\n    this.formOperatorAssigment.controls['selectedOperator'].setValue(cui + ' - ' + name);\r\n    this.selected = {\r\n      cui: cui,\r\n    };\r\n    this.operatorsData = null;\r\n    this.operatorsSearchInput.nativeElement.value = '';\r\n  }\r\n\r\n  onCancel() {\r\n    this.formOperatorAssigment.reset();\r\n    this.router.navigate(['views', 'admin', 'checkpoints'])\r\n  }\r\n\r\n  /**\r\n   * Procedimiento que se encarga de establecer el tipo de borde\r\n   * del elemento html que se recibe como parametro.\r\n   * @param event Evento disparado\r\n   */\r\n  public setHoverBorder(event: MouseEvent) {\r\n    const newsImage: HTMLDivElement = <HTMLDivElement>event.target;\r\n    if (event.type === 'mouseenter') {\r\n      newsImage.style.border = 'ridge';\r\n    } else if (event.type === 'mouseleave') {\r\n      newsImage.style.border = 'none';\r\n    }\r\n}\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n        <nb-card>\r\n        <!-- Titulo de actualizar assignacion de operador -->\r\n        <nb-card-header>\r\n            <nb-icon icon=\"edit-outline\" pack=\"eva\"></nb-icon>\r\n            <nb-icon icon=\"compass-outline\" pack=\"eva\"></nb-icon>\r\n            Asignación de Operador\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <!-- Formulario para asignar un operador -->\r\n            <form [formGroup]=\"formOperatorAssigment\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <!-- Operador actual  -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"currentOperator\" class=\"label\">Operador actual</label> \r\n                            <input \r\n                            type=\"text\"\r\n                            formControlName=\"currentOperator\" \r\n                            nbInput\r\n                            fullWidth \r\n                            id=\"currentOperator\" \r\n                            placeholder=\"Operador Actual\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-6\">\r\n                        <!-- Operador Seleccionado -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"selectedOperator\" class=\"label\">Operador Seleccionado</label> \r\n                            <div *ngIf=\"formOperatorAssigment.get('selectedOperator')?.errors && formOperatorAssigment.get('selectedOperator')?.touched || errors\" >\r\n                                <label class=\"label\" style=\"color: red;\" *ngIf=\"formOperatorAssigment.get('selectedOperator').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                            </div>\r\n                            <input \r\n                            type=\"text\"\r\n                            [class.inp-invalid]=\"formOperatorAssigment.get('selectedOperator')?.errors && formOperatorAssigment.get('selectedOperator')?.touched || errors\" \r\n                            formControlName=\"selectedOperator\" \r\n                            nbInput \r\n                            fullWidth \r\n                            id=\"selectedOperator\" \r\n                            placeholder=\"Operador seleccionado\"\r\n                            readonly\r\n                            required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n                <div class=\"col-sm-12\">\r\n                    <!-- Seleccionado -->\r\n                    <label for=\"operator\" class=\"label\">Buscar Operador por CUI: &nbsp;</label>\r\n                    <br>   \r\n\r\n                    <input\r\n                    [class.inp-invalid]=\"formOperatorAssigment.get('selectedOperator')?.errors && formOperatorAssigment.get('selectedOperator')?.touched || errors\" \r\n                    #operatorsSearchInput\r\n                    nbInput\r\n                    fullWidth\r\n                    [ngClass]=\"{'loading': operatorsLoading}\"\r\n                    [spellcheck]=\"false\"\r\n                    placeholder=\"Buscar el operador por CUI.\"\r\n                    type=\"text\"\r\n                    (ngModelChange)=\"searchOperators($event)\"\r\n                    [(ngModel)]=\"operatorsSrc\"\r\n                    [ngModelOptions]=\"{standalone: true}\">\r\n                </div>\r\n\r\n                <br>\r\n\r\n                <!-- Lista con los operadores obtenidos tras la busqueda -->\r\n                <nb-card \r\n                    [hidden]=\"operatorsData == null ? true : false\"\r\n                    [nbSpinner]=\"operatorsLoading\" nbSpinnerStatus=\"primary\"\r\n                    class=\"list-card\"\r\n                    size=\"small\">\r\n                    <nb-list>\r\n                        <nb-list-item \r\n                        (click)=\"setOperator(item.cui, item.name, item.lastname)\" \r\n                        *ngFor=\"let item of operatorsData | async\"\r\n                        (mouseenter)=\"setHoverBorder($event)\"\r\n                        (mouseleave)=\"setHoverBorder($event)\">\r\n                            {{item.name + ' ' + item.lastname}}\r\n                            <br>\r\n                            {{item.cui}}\r\n                        </nb-list-item>\r\n                    </nb-list>\r\n                </nb-card>\r\n\r\n                <div class=\"row\">\r\n                    <button type=\"submit\" nbButton status=\"primary\" (click)=\"modify_operator()\" hero>Editar</button>&nbsp;&nbsp;\r\n                    <button nbButton status=\"danger\" (click)=\"onCancel()\" hero>Cancelar</button>        \r\n                </div>\r\n\r\n                <br>\r\n\r\n                \r\n        </form>\r\n        </nb-card-body>\r\n    </nb-card>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { User } from '../../others/models/employee';\r\nimport { AdminService } from '../../others/services/admin.service';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\n\r\n@Component({\r\n  selector: 'ngx-update-user',\r\n  templateUrl: './update-user.component.html',\r\n  styleUrls: ['./update-user.component.scss']\r\n})\r\nexport class UpdateUserComponent implements OnInit {\r\n\r\n  @Input() userReceive: User;\r\n  @Input() users: User[];\r\n  @Input() source: LocalDataSource;\r\n\r\n  activeAux: boolean;\r\n  userAux: User;\r\n\r\n  pass2: string;\r\n  user: User;\r\n\r\n  notification: NotificationsComponent;\r\n\r\n  constructor(private adminService: AdminService, private router: Router, private toastrService: NbToastrService) { }\r\n\r\n  submit(){\r\n    if(this.activeAux == undefined){\r\n      this.activeAux = false;\r\n    }\r\n    if(this.activeAux){\r\n      this.userReceive.activo = 0;\r\n    } else {\r\n      this.userReceive.activo = 1;\r\n    }\r\n    this.adminService.updateUser(this.userReceive).subscribe(response => {\r\n      //modal de que se actualizo al usuario\r\n      this.notification.showToast(1, 'Realizado', `Informacion modificada con exito`, 2500);\r\n      this.userAux = this.userReceive;\r\n      this.close(1);\r\n    })\r\n  }\r\n\r\n  close(param){\r\n    document.getElementById('update-user')?.remove();\r\n    if(param == 1){\r\n      this.updateInformation();\r\n    }\r\n    this.router.navigate(['/views/users/admin/list-users']);\r\n    document.getElementById('table-employeers').style.display = \"block\";\r\n  }\r\n\r\n  updateInformation(){\r\n    for(let i = 0; i < this.users.length; i++){\r\n      if(this.users[i].cui == this.userReceive.cui){\r\n        this.users[i] = this.userReceive;\r\n      }\r\n      break;\r\n    }\r\n    this.source.load(this.users)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService)\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"row\" id=\"update-user\">\r\n  <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n    <nb-card >\r\n      <nb-card-header><h1 id=\"title\" class=\"title\">Actualizacion de informacion</h1></nb-card-header>\r\n\r\n        <nb-card-body>\r\n<div *ngIf=\"userReceive\">\r\n<div  aria-labelledby=\"title\">\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >Nombres</label>\r\n    <div class=\"col-sm-9\">\r\n\r\n    <input nbInput\r\n           [(ngModel)]=\"userReceive.name\"\r\n           id=\"input-name\"\r\n           name=\"fullName\"\r\n           placeholder=\"Full name\"\r\n           autofocus\r\n           fullWidth>\r\n     <div *ngIf=\"userReceive?.name == ''\" >\r\n      <label class=\"label\" style=\"color: red;\">{{ERROR_REQUIRED}}</label>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >Apellidos</label>\r\n    <div class=\"col-sm-9\">\r\n\r\n    <input nbInput\r\n           [(ngModel)]=\"userReceive.lastname\"\r\n           id=\"input-lastname\"\r\n           name=\"fullName\"\r\n           placeholder=\"Full name\"\r\n           autofocus\r\n           fullWidth>\r\n           <!-- Aqui abajo va la condicional de si el fullname no existe -->\r\n     <div *ngIf=\"userReceive.lastname == ''\">\r\n      <label class=\"label\" style=\"color: red;\">{{ERROR_REQUIRED}}</label>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\" for=\"input-email\">Email:</label>\r\n    <div class=\"col-sm-9\">\r\n    <input nbInput\r\n           [(ngModel)]=\"userReceive.email\"\r\n           id=\"input-email\"\r\n           name=\"email\"\r\n           placeholder=\"Email address\"\r\n           fullWidth>\r\n           <!-- Abajo la condicional de si el email no existe o tiene errores -->\r\n      <div *ngIf=\"userReceive.email == ''\" >\r\n        <label class=\"label\" style=\"color: red;\">{{ERROR_REQUIRED}}</label>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\"  for=\"input-email\">Username:</label>\r\n    <div class=\"col-sm-9\">\r\n    <input nbInput\r\n           [(ngModel)]=\"userReceive.username\"\r\n           id=\"input-username\"\r\n           name=\"email\"\r\n           placeholder=\"Email address\"\r\n           fullWidth>\r\n           <!-- Abajo la condicional de si el email no existe o tiene errores -->\r\n      <div *ngIf=\"userReceive.username == ''\" >\r\n        <label class=\"label\" style=\"color: red;\">{{ERROR_REQUIRED}}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\"  for=\"input-name\" >CUI</label>\r\n    <div class=\"col-sm-9\">\r\n      <input nbInput\r\n           [(ngModel)]=\"userReceive.cui\"\r\n           id=\"input-cui\"\r\n           name=\"fullName\"\r\n           placeholder=\"Full name\"\r\n           autofocus\r\n           readonly\r\n           fullWidth>\r\n           <!-- Aqui abajo va la condicional de si el fullname no existe -->\r\n      <div *ngIf=\"userReceive.CUI == null\" >\r\n        <label class=\"label\" style=\"color: red;\">{{ERROR_REQUIRED}}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"label col-sm-3 col-form-label\"  for=\"input-name\" >Tipo de usuario</label>\r\n    <div class=\"col-sm-9\">\r\n\r\n    <nb-select [selected]=1 status=\"primary\" [(ngModel)]=\"userReceive.type\">\r\n      <nb-option [value]=\"1\">Administrador</nb-option>\r\n      <nb-option [value]=\"2\">Operador</nb-option>\r\n      <nb-option [value]=\"3\">Recepcionista</nb-option>\r\n    </nb-select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <div class=\"offset-sm-3 col-sm-9\">\r\n      <nb-checkbox [(ngModel)]=\"activeAux\">Desactivar Usuario</nb-checkbox>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n  <div class=\"form-group row\">\r\n    <div class=\"offset-sm-3 col-sm-9\">\r\n\r\n      <button nbButton\r\n    status=\"primary\"\r\n    (click)=\"submit()\">\r\n      Confirmar cambios\r\n    </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n    <div class=\"offset-sm-3 col-sm-9\">\r\n      <button nbButton\r\n    status=\"danger\"\r\n    (click)=\"close(2)\">\r\n      Cerrar\r\n    </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n</nb-card-body>\r\n<!-- abajo iba una condicion de si hay links -->\r\n</nb-card>\r\n</div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GeneralComponent } from './general.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GeneralComponent,\n    children: [\n      {\n        path: 'profile',\n        component: ProfileComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GeneralRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ADMINISTRATOR_MENU_ITEMS } from '../admin/menu';\n\n@Component({\n  selector: 'ngx-general',\n  templateUrl: './general.component.html',\n  styleUrls: ['./general.component.scss']\n})\nexport class GeneralComponent implements OnInit {\n\n  admin = false;\n  operator = false;\n  recep = false;\n\n  constructor() { }\n\n  seeUserType(){\n    let user = JSON.parse(localStorage.getItem('user'));\n    if(user.type == 1){\n      this.admin = true;\n    } else if(user.type == 2){\n      this.operator = true;\n    } else if(user.type == 3){\n      this.recep = true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.seeUserType();\n  }\n\n  menuAdmin = ADMINISTRATOR_MENU_ITEMS;\n\n}\n","<ngx-one-column-layout>\n  <nb-menu *ngIf=\"admin == true\" [items]=\"menuAdmin\"></nb-menu>\n  <router-outlet></router-outlet>\n</ngx-one-column-layout>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThemeModule } from '../../../@theme/theme.module';\n\nimport { GeneralRoutingModule } from './general-routing.module';\nimport { GeneralComponent } from './general.component';\nimport {\n  NbRadioModule,\n  NbButtonModule,\n  NbLayoutModule,\n  NbCardModule,\n  NbProgressBarModule,\n  NbTabsetModule,\n  NbUserModule,\n  NbIconModule,\n  NbSelectModule,\n  NbListModule,\n  NbInputModule,\n  NbCheckboxModule,\n  NbMenuModule,\n  NbActionsModule,\n  NbSpinnerModule,\n  NbTreeGridModule,\n  NbToggleModule,\n  NbSearchModule,\n  NbPopoverModule,\n  NbSidebarModule\n} from '@nebular/theme';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    GeneralComponent,\n    ProfileComponent\n  ],\n  imports: [\n    CommonModule,\n    GeneralRoutingModule,\n    NbRadioModule,\n    NbButtonModule,\n    NbLayoutModule,\n    NbCardModule,\n    NbProgressBarModule,\n    NbTabsetModule,\n    NbUserModule,\n    NbIconModule,\n    NbSelectModule,\n    NbListModule,\n    NbInputModule,\n    NbCheckboxModule,\n    NbMenuModule,\n    NbActionsModule,\n    NbSpinnerModule,\n    NbTreeGridModule,\n    NbToggleModule,\n    NbSearchModule,\n    NbPopoverModule,\n    NbSidebarModule,\n    ThemeModule\n  ]\n})\nexport class GeneralModule { }\n","<div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\n  <nb-card>\n    <nb-card-header><h1 id=\"title\" class=\"title\">Mi perfil</h1></nb-card-header>\n\n    <nb-card-body>\n      <div *ngIf=\"user\">\n      <div class=\"form-group row\">\n        <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >Nombres</label>\n        <div class=\"col-sm-9\">\n\n        <input nbInput\n               id=\"input-name\"\n               name=\"fullName\"\n               autofocus\n               fullWidth\n               [value]=\"user.name\"\n               readonly>\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >Apellidos</label>\n        <div class=\"col-sm-9\">\n\n        <input nbInput\n               id=\"input-lastname\"\n               name=\"fullName\"\n               autofocus\n               [value]=\"user.lastname\"\n               fullWidth\n               readonly>\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >CUI</label>\n      <div class=\"col-sm-9\">\n\n      <input nbInput\n             id=\"input-cui\"\n             name=\"fullName\"\n             autofocus\n             [value]=\"user.cui\"\n             fullWidth\n             readonly>\n    </div>\n  </div>\n\n  <div class=\"form-group row\">\n    <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >Username</label>\n    <div class=\"col-sm-9\">\n\n    <input nbInput\n           id=\"input-username\"\n           name=\"fullName\"\n           autofocus\n           [value]=\"user.username\"\n           fullWidth\n           readonly>\n  </div>\n</div>\n\n<div class=\"form-group row\">\n  <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >Email</label>\n  <div class=\"col-sm-9\">\n\n  <input nbInput\n         id=\"input-email\"\n         name=\"fullName\"\n         autofocus\n         [value]=\"user.email\"\n         fullWidth\n         readonly>\n</div>\n</div>\n\n<div class=\"form-group row\">\n  <label class=\"label col-sm-3 col-form-label\" for=\"input-name\" >Tipo de usuario</label>\n  <div class=\"col-sm-9\">\n\n  <input nbInput\n         id=\"input-type\"\n         name=\"fullName\"\n         autofocus\n         [value]=\"type\"\n         fullWidth\n         readonly>\n</div>\n</div>\n</div>\n  </nb-card-body>\n  </nb-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any;\n  type: string;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('user'));\n    if(this.user != null){\n      if(this.user.type == 1){\n        this.type = 'Administrador';\n      } else if(this.user.type == 2){\n        this.type = 'Operador'\n      } else if(this.user.type == 3){\n        this.type = 'Recepcionista'\n      }\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { LocalDataSource }from 'ng2-smart-table';\r\nimport { CheckpointsService } from '../../others/services/checkpoint/checkpoints.service';\r\nimport { CheckpointListTemplate } from '../../others/models/checkpoint-list-template';\r\nimport { Router } from '@angular/router';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { CustomServerDataSource } from '../../others/models/CustomServerDataSource';\r\n\r\n@Component({\r\n  selector: 'ngx-checkpoints-list',\r\n  templateUrl: './checkpoints-list.component.html',\r\n  styleUrls: ['./checkpoints-list.component.scss']\r\n})\r\nexport class CheckpointsListComponent implements OnInit {\r\n\r\n  notification : NotificationsComponent;\r\n  source: LocalDataSource = new LocalDataSource;\r\n\r\n  settings = {\r\n    noDataMessage: 'No exite ningun punto asignado a su usuario.',\r\n    actions: {\r\n      columnTitle:'Ver',\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n      custom: [\r\n        { name: 'search', title: '<i class=\"nb-search\"></i>' }\r\n      ]\r\n    },\r\n    columns: {\r\n      description: {\r\n        title: 'Nombre',\r\n        type: 'string',\r\n      },\r\n      queueCapacity: {\r\n        title: 'Capacidad de cola',\r\n        type: 'number',\r\n      },\r\n      operationFee: {\r\n        title: 'Tarifa de operación',\r\n        type: 'number',\r\n        valuePrepareFunction: (operationFee) => {\r\n          return `Q${operationFee}`;\r\n        }\r\n      },\r\n      packagesOnQueue: {\r\n        title: 'Paquetes en cola',\r\n        type: 'number',\r\n      },\r\n      route: {\r\n        title: 'Ruta',\r\n        type: 'number',\r\n        valuePrepareFunction: (route) => {\r\n          return `${route.name}`;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private checkpointService : CheckpointsService,\r\n    private router: Router,\r\n    private toastrService: NbToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.getAllCheckpointsAssigned();\r\n  }\r\n\r\n  private getAllCheckpointsAssigned(){\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    this.checkpointService.getAllCheckpointsAssignedToOperator(Number(user.cui))\r\n    .subscribe({\r\n      next:(res) => {\r\n        this.source.load(res);\r\n      },\r\n      error:(res) => {\r\n        this.notification.errors(400, 'Error mientras se obtenia la lista de puntos de control asignados.');\r\n      }\r\n    });\r\n  }\r\n\r\n  showPackages(event){\r\n    console.log('entro aqui')\r\n    this.router.navigate(['views', 'operator', 'packages-list', event.data['id']]);\r\n  }\r\n\r\n}\r\n","<div class=\"center\">\r\n    <nb-card>\r\n      <nb-card-header>\r\n        <h3>Puntos de control asignados.</h3>\r\n      </nb-card-header>\r\n    \r\n      <nb-card-body>\r\n        <ng2-smart-table \r\n        [settings]=\"settings\" \r\n        [source]=\"source\"\r\n        (custom)=\"showPackages($event)\"\r\n        >\r\n        </ng2-smart-table>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>","import { NbMenuItem } from '@nebular/theme';\r\n\r\nexport const OPERATOR_MENU_ITEMS: NbMenuItem[] = [    \r\n    {\r\n        title: 'Puntos de Control',\r\n        icon: 'home-outline',\r\n        children:[\r\n            {\r\n                title: 'Listado de Puntos de Control',\r\n                link: '/views/users/operator'\r\n            }\r\n        ], \r\n    }\r\n];","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { OperatorGuard } from '../../auth/others/guards/operator.guard';\r\nimport { CheckpointsListComponent } from './checkpoints-list/checkpoints-list.component';\r\nimport { OperatorComponent } from './operator.component';\r\nimport { PackagesListComponent } from './packages-list/packages-list.component';\r\nimport { ProcessPackageComponent } from './process-package/process-package.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OperatorComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: CheckpointsListComponent,\r\n        canActivate: [OperatorGuard]\r\n      },\r\n      {\r\n        path: 'packages-list/:id',\r\n        component: PackagesListComponent,\r\n        canActivate: [OperatorGuard]\r\n      },\r\n      {\r\n        path: 'process-package/:id',\r\n        component: ProcessPackageComponent,\r\n        canActivate: [OperatorGuard]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OperatorRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { OPERATOR_MENU_ITEMS } from './menu';\r\n\r\n@Component({\r\n  selector: 'ngx-operator',\r\n  templateUrl: './operator.component.html',\r\n  styleUrls: ['./operator.component.scss']\r\n})\r\nexport class OperatorComponent implements OnInit {\r\n\r\n  menu = OPERATOR_MENU_ITEMS;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ngx-one-column-layout>\r\n  <nb-menu [items]=\"menu\"></nb-menu>\r\n  <ngx-checkpoints-list></ngx-checkpoints-list>\r\n  <router-outlet></router-outlet>\r\n</ngx-one-column-layout>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NbButtonModule, NbCardModule, NbIconModule, NbInputModule, NbMenuModule } from '@nebular/theme';\r\nimport { OperatorRoutingModule } from './operator-routing.module';\r\nimport { OperatorComponent } from './operator.component';\r\nimport { ThemeModule } from '../../../@theme/theme.module';\r\nimport { ProcessPackageComponent } from './process-package/process-package.component';\r\nimport { CheckpointsListComponent } from './checkpoints-list/checkpoints-list.component';\r\nimport { PackagesListComponent } from './packages-list/packages-list.component';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { FormGroup, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OperatorComponent,\r\n    ProcessPackageComponent,\r\n    CheckpointsListComponent,\r\n    PackagesListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    OperatorRoutingModule,\r\n    NbMenuModule,\r\n    ThemeModule,\r\n    NbCardModule,\r\n    Ng2SmartTableModule,\r\n    NbButtonModule,\r\n    NbIconModule,\r\n    ReactiveFormsModule,\r\n    NbInputModule\r\n  ]\r\n})\r\nexport class OperatorModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { Package } from '../../others/models/Package';\r\nimport { RecepService } from '../../others/services/recep.service';\r\n\r\n@Component({\r\n  selector: 'ngx-packages-list',\r\n  templateUrl: './packages-list.component.html',\r\n  styleUrls: ['./packages-list.component.scss']\r\n})\r\n\r\n\r\nexport class PackagesListComponent implements OnInit {\r\n\r\n  settings = {\r\n    noDataMessage: 'No hay ningun paquete por procesar en este punto de control.',\r\n    actions: {\r\n      columnTitle:'Procesar',\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n      custom: [\r\n        { name: 'process', title: '<i class=\"nb-compose\"></i>' }\r\n      ]\r\n    },\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n      },\r\n      description: {\r\n        title: 'Descripcion del Paquete',\r\n        type: 'string',\r\n      }\r\n    }\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(\r\n    private receptionistService: RecepService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ){} \r\n\r\n  ngOnInit(): void {\r\n    this.getPackages();\r\n  }\r\n\r\n  public getPackages(){\r\n    this.receptionistService.getPackagesOnCheckpoint(Number(this.route.snapshot.paramMap.get('id'))).subscribe(response => {\r\n      this.source.load(this.convertData(response));\r\n    })\r\n  }\r\n\r\n  public processPackage(event): void{\r\n    this.router.navigate(['views', 'operator', 'process-package', event.data['id']]);\r\n  }\r\n\r\n  public goBack(){\r\n    this.router.navigate(['views', 'operator']);\r\n  }\r\n\r\n  private convertData(data : any) {\r\n    let array = [];\r\n    for (const iterator of data) {\r\n      let newData  = {\r\n        id : iterator['packages'].id,\r\n        description: iterator['packages'].description\r\n      }\r\n      array.push(newData);\r\n    }\r\n    return array;\r\n  }\r\n}\r\n","\r\n  <nb-card>\r\n    <nb-card-header>\r\n      <h3>Listado de paquetes en el punto de control.</h3>\r\n    </nb-card-header>\r\n  \r\n    <nb-card-body>\r\n      <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (custom)=\"processPackage($event)\">\r\n      </ng2-smart-table>\r\n      \r\n    </nb-card-body>\r\n  \r\n    <nb-card-footer>\r\n      <div class=\"row\">\r\n        <button nbButton status=\"primary\" (click)=\"goBack()\" hero>Regresar</button>\r\n      </div>\r\n    </nb-card-footer>\r\n  </nb-card>\r\n  \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RecepService } from '../../others/services/recep.service';\r\nimport { GLOBAL } from '../../../GLOBAL';\r\nimport { OperatorService } from '../../others/services/operator/operator.service';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { NbToastrService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-process-package',\r\n  templateUrl: './process-package.component.html',\r\n  styleUrls: ['./process-package.component.scss']\r\n})\r\nexport class ProcessPackageComponent implements OnInit {\r\n\r\n  id: number;\r\n  description: string;\r\n  weight: number;\r\n  packageId: number;\r\n  checkpointId: number;\r\n\r\n  ERROR_REQUIRED = GLOBAL.ERROR_REQUIRED;\r\n  notification : NotificationsComponent;\r\n\r\n   //Fomulario reactivo\r\n   formPackage: FormGroup = new FormGroup({\r\n    time: new FormControl(null, Validators.required),\r\n    date: new FormControl(null, Validators.required)\r\n  });\r\n\r\n  constructor(\r\n    private receptionistService: RecepService,\r\n    private operatorService: OperatorService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private toastrService : NbToastrService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    this.getPackage();\r\n  }\r\n\r\n  public getPackage(){\r\n    this.packageId = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.receptionistService.getPackage(this.packageId).subscribe(response => {\r\n      this.id = response.packages.id;\r\n      this.description = response.packages.description;\r\n      this.weight = response.packages.weight;\r\n      this.checkpointId = response.checkpoint.id;\r\n    })\r\n  }\r\n\r\n  public proccessPackage(){\r\n    if(this.formPackage.valid){\r\n      this.operatorService.processPackage({\r\n        checkpoint: {\r\n          id: this.checkpointId\r\n        },\r\n        packages: {\r\n          id: this.packageId\r\n        },\r\n        timeOnCheckpoint: this.formPackage.get('time').value,\r\n        date: this.formPackage.get('date').value,\r\n        currentCheckpoint: Boolean(false)\r\n      }).subscribe({\r\n        next : (res) => {\r\n          this.notification.showToast(1, 'Exito', `Paquete procesado exitosamente.`, 3000);\r\n          this.goBack();\r\n        },\r\n        error : (error) => {\r\n          this.notification.showToast(4, 'Error', error.error, 5000);\r\n        }\r\n      });\r\n    }else{\r\n      this.formPackage.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  public goBack(){\r\n    this.router.navigate(['views', 'operator', 'packages-list', this.checkpointId]);\r\n  }\r\n\r\n}\r\n","<div class=\"center\">\r\n    <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n      <nb-card>\r\n        \r\n        <!-- Titulo del formulario para procesamiento de paquetes  -->\r\n        <nb-card-header>\r\n          <nb-icon icon=\"cube-outline\" pack=\"eva\"></nb-icon>\r\n          Procesar Paquete\r\n        </nb-card-header>\r\n        <nb-card-body>          \r\n        <form [formGroup]=\"formPackage\">\r\n        \r\n            <!-- ID -->\r\n            <div class=\"form-group\">\r\n                <label class=\"label\">Identificador: &nbsp; {{id}}</label> \r\n            </div>\r\n\r\n            <!-- Descripcion -->\r\n            <div class=\"form-group\">\r\n                <label class=\"label\">Descripcion: &nbsp; {{description}}</label> \r\n            </div>\r\n            \r\n            <!-- Peso -->\r\n            <div class=\"form-group\">\r\n                <label class=\"label\">Peso: &nbsp; {{weight}} libras</label> \r\n            </div>\r\n\r\n            <!-- Horas en punto de control -->\r\n            <div class=\"form-group\">\r\n                <label class=\"required\">*</label>\r\n                <label for=\"time\" class=\"label\">Tiempo</label> \r\n                <input \r\n                    [ngClass]=\"{\r\n                    'inp-invalid': formPackage.get('time').invalid && formPackage.get('time').touched, \r\n                    'nbInput': formPackage.get('time').valid\r\n                    }\"\r\n                    type=\"time\"\r\n                    step=\"1\"\r\n                    formControlName=\"time\"\r\n                    nbInput \r\n                    fullWidth \r\n                    id=\"name\" \r\n                    placeholder=\"Ingrese la cantidad de tiempo.\"\r\n                    required\r\n                />\r\n\r\n                <div *ngIf=\"formPackage.get('time').invalid && formPackage.get('time').touched\" >\r\n                    <label class=\"label required\" *ngIf=\"formPackage.get('time').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                </div>  \r\n            </div>\r\n\r\n             <!-- Fecha de procesamiento -->\r\n             <div class=\"form-group\">\r\n                <label class=\"required\">*</label>\r\n                <label for=\"time\" class=\"label\">Fecha de Procesamiento</label> \r\n                <input \r\n                    [ngClass]=\"{\r\n                    'inp-invalid': formPackage.get('date').invalid && formPackage.get('date').touched, \r\n                    'nbInput': formPackage.get('date').valid\r\n                    }\"\r\n                    type=\"date\"\r\n                    formControlName=\"date\"\r\n                    nbInput \r\n                    fullWidth \r\n                    id=\"date\" \r\n                    placeholder=\"Ingrese la fecha de procesamiento.\"\r\n                    required\r\n                />\r\n\r\n                <div *ngIf=\"formPackage.get('date').invalid && formPackage.get('date').touched\" >\r\n                    <label class=\"label required\" *ngIf=\"formPackage.get('date').hasError('required')\">{{ERROR_REQUIRED}}</label>\r\n                </div>     \r\n            </div>\r\n                \r\n            <div class=\"row\">\r\n                <button type=\"submit\" nbButton status=\"primary\" (click)=\"proccessPackage()\" hero>Procesar</button> &nbsp; &nbsp;\r\n                <button nbButton status=\"danger\" (click)=\"goBack()\" hero>Cancelar</button>\r\n            </div>  \r\n         </form>\r\n        </nb-card-body>\r\n     </nb-card>\r\n   </div>\r\n</div>\r\n","import { HttpParams } from \"@angular/common/http\";\r\nimport { ServerDataSource } from \"ng2-smart-table\";\r\n\r\nexport class CustomServerDataSource extends ServerDataSource {\r\n    addPagerRequestParams(httpParams: HttpParams): HttpParams {\r\n        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n            httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page'] + (-1));\r\n            httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n        }\r\n        return httpParams;\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { GLOBAL } from '../../../GLOBAL';\r\nimport { CustomServerDataSource } from '../models/CustomServerDataSource';\r\nimport { User } from '../models/employee';\r\nimport { Route } from '../models/Route';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n\r\n  url = GLOBAL.url;\r\n  urlApi = GLOBAL.urlApi;\r\n  public user = null;\r\n  userSession: any;\r\nconstructor(private httpClient: HttpClient) { }\r\n\r\n  getAll() {\r\n    return new CustomServerDataSource(this.httpClient, {\r\n      dataKey: 'content',\r\n      endPoint: `${this.urlApi}/employee/`,\r\n      pagerPageKey: 'page',\r\n      pagerLimitKey: 'size',\r\n      totalKey: 'totalElements'\r\n    })\r\n  }\r\n\r\n  getAllActivates(): Observable<any>{\r\n    let a = this.httpClient.get(`${this.urlApi}/employee/actives/`);\r\n    return a;\r\n  }\r\n\r\n  getAllActivatesNotAdmin(): Observable<any>{\r\n    let a = this.httpClient.get(`${this.urlApi}/employee/actives/not-admin/`)\r\n    return a;\r\n  }\r\n\r\n  //Falta arreglar\r\n  getAllDeactivates(): Observable<any>{\r\n    let a = this.httpClient.get(`${this.urlApi}/employee/deactivates/`);\r\n    return a;\r\n  }\r\n\r\n  updateUser(user: User){\r\n    return this.httpClient.put(`${this.urlApi}/employee/${user.cui}`, user);\r\n  }\r\n\r\n\r\n  add(user: User): Observable<any>{\r\n    return this.httpClient.post(`${this.urlApi}/employee/`, user);\r\n  }\r\n\r\n  getAllRoutes(){\r\n    return this.httpClient.get<Route[]>(`${this.url}/route`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Route } from '../../models/Route';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as global from '../../../../GLOBAL';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CheckpointService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createCheckpoint(checkpointData: any){\r\n    return this.http.post<any>(global.GLOBAL.urlApi + \"/checkpoint\", checkpointData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as global from '../../../../GLOBAL';\r\nimport { CheckpointListTemplate } from '../../models/checkpoint-list-template';\r\nimport { User } from '../../models/employee';\r\nimport { CustomServerDataSource } from '../../models/CustomServerDataSource';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CheckpointsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllOperators() {\r\n    return this.http.get<User[]>(`${global.GLOBAL.url}/employees?activo=1&type=2`)\r\n  }\r\n\r\n  getAllCheckpoints() {\r\n    return this.http.get<CheckpointListTemplate[]>(`${global.GLOBAL.url}/checkpoints/`)\r\n  }\r\n\r\n    /**\r\n   * datakey: Nombre del array que contiene los datos del servidor\r\n   * endPoint: URI \r\n   * pagerPageKey: Nombre del parametro que representa el numero de pagina en el servidor.\r\n   * pagerLimitKey: Nombre del parametro que representa la cantidad de elementos por pagina en el servidor.\r\n   * totalKey: Nombre del atributo que contiene el numero total de elementos.\r\n   */\r\n    public getAllCheckpointsPaginated() {\r\n      return new CustomServerDataSource(this.http, {\r\n        dataKey: 'content',\r\n        endPoint: global.GLOBAL.urlApi + '/checkpoint/list',\r\n        pagerPageKey: 'page', \r\n        pagerLimitKey: 'size', \r\n        totalKey: 'totalElements' \r\n      });\r\n    }\r\n  \r\n  getAllCheckpointsAssignedToOperator(operatorId: number) {\r\n    return this.http.get<CheckpointListTemplate[]>(`${global.GLOBAL.urlApi}/checkpoint/list/${operatorId}`)\r\n  }\r\n\r\n  getCheckpoint(id : number) {\r\n    return this.http.get<any>(`${global.GLOBAL.urlApi}/checkpoint/` + id);\r\n  }\r\n\r\n  putCheckpoint(data : CheckpointListTemplate, id : number) {\r\n    return this.http.put<any>(`${global.GLOBAL.urlApi}/checkpoint/update/` + id, data);\r\n  }\r\n\r\n  putOperatorCheckpoint(data : CheckpointListTemplate, id : number) {\r\n    return this.http.put<any>(`${global.GLOBAL.urlApi}/checkpoint/operator/` + id, data);\r\n  }\r\n\r\n  public deleteCheckpoint(id : number) {\r\n    return this.http.delete<any>(`${global.GLOBAL.urlApi}/checkpoint/` + id);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport * as global from '../../../../GLOBAL';\r\nimport { Destination } from '../../models/destination';\r\nimport { Observable } from 'rxjs';\r\nimport { DestinationListTemplate } from '../../models/DestinationListTemplate';\r\nimport { CustomServerDataSource } from '../../models/CustomServerDataSource';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DestinationService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public createDestination(data: any) {\r\n    return this.http.post<any>(global.GLOBAL.urlApi + \"/destination/\", data);\r\n  }\r\n\r\n  /**\r\n   * Funcion que ejecuta una peticion http GET para obtener todos los destinos\r\n   * que coincidan con el patron de busqueda que se recibe como parametro.\r\n   * @param pattern Patron de a buscar\r\n   * @returns Listado de destinos que coinciden con el patron de busquda\r\n   */\r\n  public getDestinations(pattern: string):Observable<Destination[]>{\r\n    return this.http.get<Destination[]>(global.GLOBAL.urlApi + \"/destination/search-by-name/\"+pattern);\r\n  }\r\n\r\n  /**\r\n   * Funcion que ejecuta una peticion http GET para obtener todos los destinos.\r\n   * @returns Listado de destinos\r\n   */\r\n  public getAllDestinations():Observable<Destination[]>{\r\n    return this.http.get<Destination[]>(global.GLOBAL.url + '/destination');\r\n  }\r\n\r\n  public getDestination(id: number):Observable<any>{\r\n    return this.http.get<any>(global.GLOBAL.urlApi + '/destination/' + id);\r\n  }\r\n\r\n  public updateDestination(destination: any) {\r\n    return this.http.patch<any>(`${global.GLOBAL.urlApi}/destination`, destination);\r\n  }\r\n\r\n  public getDestinationById(id : number) {\r\n    return this.http.get<Destination>(global.GLOBAL.url + \"/destination/\" + id);\r\n  }\r\n\r\n  /**\r\n   * datakey: Nombre del array que contiene los datos del servidor\r\n   * endPoint: URI \r\n   * pagerPageKey: Nombre del parametro que representa el numero de pagina en el servidor.\r\n   * pagerLimitKey: Nombre del parametro que representa la cantidad de elementos por pagina en el servidor.\r\n   * totalKey: Nombre del atributo que contiene el numero total de elementos.\r\n   */\r\n  public getAllDestinationsPaginated() {\r\n    return new CustomServerDataSource(this.http, {\r\n      dataKey: 'content',\r\n      endPoint: global.GLOBAL.urlApi + '/destination/list',\r\n      pagerPageKey: 'page', \r\n      pagerLimitKey: 'size', \r\n      totalKey: 'totalElements' \r\n    });\r\n  }\r\n\r\n  public deleteDestination(id : number) {\r\n    return this.http.delete<any>(`${global.GLOBAL.urlApi}/destination/` + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as global from '../../../../GLOBAL';\r\nimport { Observable } from 'rxjs';\r\nimport { Operator } from '../../models/Operator';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OperatorService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getOperators(pattern: string):Observable<Operator[]>{\r\n    return this.http.get<Operator[]>(global.GLOBAL.urlApi + \"/employee/search-by-cui/\" + pattern);\r\n  }\r\n\r\n  public processPackage(data: any ){\r\n    return this.http.patch<any>(`${global.GLOBAL.urlApi}/package-checkpoint`, data);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  \r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport 'rxjs/add/operator/map';\r\nimport * as global from \"../../../../GLOBAL\";\r\nimport { Rate } from \"../../models/rate\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RatesService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  postRates(data: any) {\r\n    return this.http.post<any>(global.GLOBAL.urlApi + \"/fee/\", data);\r\n  }\r\n\r\n  public getOperationFee(): Observable<Rate[]>{\r\n    return this.http.get<Rate[]>(global.GLOBAL.urlApi + \"/fee/\")\r\n  }\r\n\r\n  getRates(){\r\n    return this.http.get<Rate[]>(global.GLOBAL.urlApi + \"/fee/\");\r\n  }\r\n\r\n  putRates(data : any, id : number) {\r\n    return this.http.put<any>(global.GLOBAL.urlApi + \"/fee/\" + id, data);\r\n  }\r\n}\r\n\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { GLOBAL } from '../../../GLOBAL';\r\nimport { Client } from '../models/Client';\r\nimport { Destination } from '../models/destination';\r\nimport { Route } from '../models/Route';\r\nimport { Invoice } from '../models/Invoice';\r\nimport { Package } from '../models/Package';\r\nimport { PackageInformation } from '../models/PackageInformation';\r\nimport { CustomServerDataSource } from '../models/CustomServerDataSource';\r\nimport { Queue } from '../models/Queue';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecepService {\r\n\r\n  url = GLOBAL.url;\r\n  urlApi = GLOBAL.urlApi;\r\n  public client = null;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n  createQueue(queue: Queue): Observable<any> {\r\n    let a = this.httpClient.post(`${this.urlApi}/queue/`, queue);\r\n    return a;\r\n  }\r\n\r\n  //Querys relacionadas a clientes\r\n  getAllClients(): Observable<any>{                                   //LISTO\r\n    let a = this.httpClient.get(`${this.urlApi}/client/`);\r\n    return a;\r\n  }\r\n\r\n  getClient(nit: number): Observable<any>{                            //LISTO\r\n    let a = this.httpClient.get(`${this.urlApi}/client/${nit}`);\r\n    return a;\r\n  }\r\n\r\n  addClient(client: Client): Observable<any>{                         //LISTO\r\n    return this.httpClient.post(`${this.urlApi}/client/`, client);\r\n  }\r\n\r\n  //Querys relacionadas a destinos\r\n  getAllDestinys(): Observable<any>{                                  //LISTO\r\n    let a = this.httpClient.get(`${this.urlApi}/destination/`);\r\n    return a;\r\n  }\r\n\r\n  //busca de rutas segun destino\r\n  getRouteByDestiny(idDestiny: number): Observable<any>{              //LISTO\r\n    let a = this.httpClient.get<any>(`${this.urlApi}/route/destination/${idDestiny}`);\r\n    return a;\r\n  }\r\n\r\n  getDestinyById(idDestiny: number): Observable<any>{                 //LISTO\r\n    let a = this.httpClient.get(`${this.urlApi}/destination/${idDestiny}`);\r\n    return a;\r\n  }\r\n\r\n  createInvoice(invoice: Invoice): Observable<any>{                   //LISTO\r\n    return this.httpClient.post(`${this.urlApi}/invoice/`, invoice);\r\n  }\r\n\r\n  creaatePackage(pack: Package): Observable<any>{                     //LISTO\r\n    return this.httpClient.post(`${this.urlApi}/package/`, pack);\r\n  }\r\n\r\n  //Todos los paquetes que ya esten en destino\r\n  getPackagesInDest(): Observable<any> {                              //LISTO\r\n    return this.httpClient.get(`${this.urlApi}/package/in-destination/`);\r\n  }\r\n\r\n//Todos los paquetes que estan en ruta\r\n  getAllPackages(): Observable<Package[]> {\r\n  return this.httpClient.get<Package[]>(`${this.url}/packages?atDestination=false&retired=false&onWay=true`);\r\n  }\r\n\r\n  public getPackage(id: number): Observable<any>{\r\n    return this.httpClient.get<any>(`${this.urlApi}/package-checkpoint/${id}`);\r\n  }\r\n\r\n  editRetiredStatePackage(pack: Package){\r\n    return this.httpClient.put(`${this.urlApi}/package/${pack.id}`, pack);\r\n  }\r\n\r\n  public getPackageInfo(packageId: number): Observable<any>{\r\n    return this.httpClient.get<any>(`${this.urlApi}/package-checkpoint/${packageId}`);\r\n  }\r\n\r\n    /**\r\n   * datakey: Nombre del array que contiene los datos del servidor\r\n   * endPoint: URI\r\n   * pagerPageKey: Nombre del parametro que representa el numero de pagina en el servidor.\r\n   * pagerLimitKey: Nombre del parametro que representa la cantidad de elementos por pagina en el servidor.\r\n   * totalKey: Nombre del atributo que contiene el numero total de elementos.\r\n   */\r\n  public getAllPackagesAtDestinationPaginated() {\r\n    return new CustomServerDataSource(this.httpClient, {\r\n      dataKey: 'content',\r\n      endPoint: this.urlApi + '/package/in-destination/',\r\n      pagerPageKey: 'page',\r\n      pagerLimitKey: 'size',\r\n      totalKey: 'totalElements'\r\n    });\r\n  }\r\n\r\n  public getAllPackagesOnRoutePaginated() {\r\n    return new CustomServerDataSource(this.httpClient, {\r\n      dataKey: 'content',\r\n      endPoint: this.urlApi + '/package/on-route',\r\n      pagerPageKey: 'page',\r\n      pagerLimitKey: 'size',\r\n      totalKey: 'totalElements'\r\n    });\r\n  }\r\n\r\n  public getPackageByInvoiceId(id: number){\r\n    return this.httpClient.get<any>(`${this.urlApi}/package/trace-by-invoice/${id}`);\r\n  }\r\n\r\n  public getPackagesOnCheckpoint(checkpointId : number): Observable<any> {\r\n    return this.httpClient.get<any>(`${this.urlApi}/package-checkpoint/list/${checkpointId}`);\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { GLOBAL } from '../../../GLOBAL';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportService {\n\n  urlApi = GLOBAL.urlApi;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllClients(): Observable<any>{\n    let a = this.httpClient.get(`${this.urlApi}/client/`);\n    return a;\n  }\n\n  getAllInvoices(nit: any): Observable<any> {\n    let a = this.httpClient.get(`${this.urlApi}/invoice/client/${nit}`)\n    return a;\n  }\n\n  getPackagesByInvoice(idInvoice: any): Observable<any> {\n    let a = this.httpClient.get(`${this.urlApi}/package/invoice/${idInvoice}`)\n    return a;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Route } from '../../models/Route';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport * as global from '../../../../GLOBAL';\r\nimport { Observable } from 'rxjs';\r\nimport { CustomServerDataSource } from '../../models/CustomServerDataSource';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createRoute(routeData: any){\r\n    return this.http.post<any>(global.GLOBAL.urlApi + \"/route\", routeData);\r\n  }\r\n\r\n  public getRoutes(pattern: string):Observable<Route[]>{\r\n    return this.http.get<Route[]>(global.GLOBAL.urlApi + \"/route/search-by-name/\"+pattern);\r\n  }\r\n\r\n  getAllRoutes() {\r\n    return this.http.get<any>(global.GLOBAL.url + \"/route/\");\r\n  }\r\n\r\n    /**\r\n   * datakey: Nombre del array que contiene los datos del servidor\r\n   * endPoint: URI \r\n   * pagerPageKey: Nombre del parametro que representa el numero de pagina en el servidor.\r\n   * pagerLimitKey: Nombre del parametro que representa la cantidad de elementos por pagina en el servidor.\r\n   * totalKey: Nombre del atributo que contiene el numero total de elementos.\r\n   */\r\n  public getAllRoutesPaginated() {\r\n    return new CustomServerDataSource(this.http, {\r\n      dataKey: 'content',\r\n      endPoint: global.GLOBAL.urlApi + '/route/list',\r\n      pagerPageKey: 'page', \r\n      pagerLimitKey: 'size', \r\n      totalKey: 'totalElements' \r\n    });\r\n  }\r\n\r\n  /**\r\n   * datakey: Nombre del array que contiene los datos del servidor\r\n   * endPoint: URI \r\n   * pagerPageKey: Nombre del parametro que representa el numero de pagina en el servidor.\r\n   * pagerLimitKey: Nombre del parametro que representa la cantidad de elementos por pagina en el servidor.\r\n   * totalKey: Nombre del atributo que contiene el numero total de elementos.\r\n   */\r\n    public getRoutesByActivePaginated(active : boolean) {\r\n      return new CustomServerDataSource(this.http, {\r\n        dataKey: 'content',\r\n        endPoint: global.GLOBAL.urlApi + '/route/list/' + active,\r\n        pagerPageKey: 'page', \r\n        pagerLimitKey: 'size', \r\n        totalKey: 'totalElements' \r\n      });\r\n    }\r\n\r\n  public getRoute(id : number) {\r\n    return this.http.get<any>(global.GLOBAL.urlApi + \"/route/\" + id);\r\n  }\r\n\r\n  public patchRoute(data : any) {\r\n    return this.http.patch<any>(global.GLOBAL.urlApi + \"/route\", data);\r\n  }\r\n\r\n  public deleteRoute(id : number) {\r\n    return this.http.delete<any>(`${global.GLOBAL.urlApi}/route/` + id);\r\n  }\r\n  \r\n  getAllRoutesStatus(status : boolean) {\r\n    console.log(status);\r\n    return this.http.get<any>(global.GLOBAL.url + `/route?active=${status}`);\r\n  }\r\n\r\n  public getMostPopularRoute(data) {\r\n    return this.http.post<any>(global.GLOBAL.urlApi + \"/route/most-popular-route\", data)\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  NbComponentStatus,\r\n  NbGlobalPhysicalPosition,\r\n  NbGlobalPosition,\r\n  NbToastrService,\r\n  NbToastrConfig,\r\n} from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.scss']\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n\r\n  ERROR_NOT_FOUD = 'No se encuentra '\r\n\r\n   /** Toastr */\r\n   config: NbToastrConfig;\r\n\r\n   index = 1;\r\n   destroyByClick = true;\r\n   duration = 2500;\r\n   hasIcon = true;\r\n   position: NbGlobalPosition = NbGlobalPhysicalPosition.TOP_RIGHT;\r\n   preventDuplicates = false;\r\n \r\n   types: NbComponentStatus[] = [\r\n     'primary', // 0\r\n     'success',  // 1\r\n     'info',  // 2\r\n     'warning',  // 3\r\n     'danger',  // 4\r\n   ];\r\n\r\n  constructor(private toastrService: NbToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  errors(type, message) {\r\n    console.log(type);\r\n    if (type == 404) {\r\n      this.showToast(4, 'Error',`${this.ERROR_NOT_FOUD} ${message}`, 3000);\r\n    } else {\r\n      this.showToast(4, 'Error',`${message}`, 3000);\r\n    }\r\n  }\r\n\r\n  showToast(typeNotification, title: string, body: string, durationNotification) {\r\n    let type: NbComponentStatus;\r\n    type = this.types[typeNotification];\r\n    const config = {\r\n      status: type,\r\n      destroyByClick: this.destroyByClick,\r\n      duration: durationNotification,\r\n      hasIcon: this.hasIcon,\r\n      position: this.position,\r\n      preventDuplicates: this.preventDuplicates,\r\n    };\r\n    const titleContent = title ? `${title}` : '';\r\n\r\n    this.index += 1;\r\n    this.toastrService.show(\r\n      body,\r\n      `${titleContent}`,\r\n      config);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { Client } from '../../others/models/Client';\r\nimport { RecepService } from '../../others/services/recep.service';\r\n@Component({\r\n  selector: 'ngx-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.scss']\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n\r\n  clients: Client[];\r\n  client: Client;\r\n  names: string[] = [];\r\n\r\n  settings = {\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      delete: false\r\n    },\r\n    columns: {\r\n      name: {\r\n        title: 'Nombres',\r\n        type: 'string',\r\n      },\r\n      lastname: {\r\n        title: 'Apellidos',\r\n        type: 'string',\r\n      },\r\n      age: {\r\n        title: 'Edad',\r\n        type: 'string',\r\n      },\r\n      cui: {\r\n        title: 'CUI',\r\n        type: 'string',\r\n      },\r\n      nit: {\r\n        title: 'NIT',\r\n        type: 'number',\r\n      },\r\n      address: {\r\n        title: 'Direccion',\r\n        type: 'string'\r\n      }\r\n\r\n    },\r\n\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private recepService: RecepService) {\r\n    this.getData();\r\n  }\r\n\r\n  openModalClient(){\r\n    // this.dialogService.open(CreateClientComponent)\r\n    //   .onClose.subscribe(name => name && this.names.push(name));\r\n  }\r\n\r\n  getData(){\r\n    this.recepService.getAllClients().subscribe(response => {\r\n      this.clients = response;\r\n      this.source.load(this.clients)\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    Listado de clientes\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component, Inject, Injectable, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { NbDialogRef } from '@nebular/theme';\r\nimport { Client } from '../../others/models/Client';\r\nimport { RecepService } from '../../others/services/recep.service';\r\nimport {\r\n  NbComponentStatus,\r\n  NbGlobalPhysicalPosition,\r\n  NbGlobalPosition,\r\n  NbToastrService,\r\n} from '@nebular/theme';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { EMPTY } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-create-client',\r\n  templateUrl: './create-client.component.html',\r\n  styleUrls: ['./create-client.component.scss']\r\n})\r\nexport class CreateClientComponent implements OnInit {\r\n\r\n  //Configuraciones para el mensaje\r\n  duration = 2000;\r\n  index = 1;\r\n  hasIcon = true;\r\n  destroyByClick = true;\r\n  position: NbGlobalPosition = NbGlobalPhysicalPosition.TOP_RIGHT;\r\n  preventDuplicates = false;\r\n  notification: NotificationsComponent;\r\n\r\n  form:FormGroup = new FormGroup({\r\n    name: new FormControl(''),\r\n    lastname: new FormControl(''),\r\n    age: new FormControl(''),\r\n    cui: new FormControl(''),\r\n    nit: new FormControl(''),\r\n    address: new FormControl('')\r\n  })\r\n\r\n  client: Client;\r\n  constructor(protected ref: NbDialogRef<CreateClientComponent>, private recepService: RecepService, private toastrService: NbToastrService) {\r\n\r\n  }\r\n\r\n  cancel(){\r\n    this.ref.close();\r\n  }\r\n\r\n  submit(){\r\n    if(this.form.valid){\r\n      this.client = this.form.value;\r\n      this.recepService.addClient(this.client).pipe(\r\n        catchError(error => {\r\n          this.notification.showToast(4, 'Error', error.error, 2500);\r\n          return EMPTY\r\n        })\r\n      )\r\n      .subscribe(\r\n        result => {\r\n          this.ref.close(this.client);\r\n          this.makeToast('success', null, 'Cliente agregado!');\r\n        }\r\n      )\r\n\r\n    }\r\n  }\r\n\r\n  makeToast(status, title, body){\r\n    this.showToast(status, title, body);\r\n  }\r\n\r\n  private showToast(type: NbComponentStatus, title: string, body: string){\r\n    const config = {\r\n      status: type,\r\n      destroyByClick: this.destroyByClick,\r\n      duration: this.duration,\r\n      hasIcon: this.hasIcon,\r\n      position: this.position,\r\n      preventDuplicates: this.preventDuplicates\r\n    };\r\n    const titleContent = title ? `. ${title}` : '';\r\n    this.index += 1;\r\n    this.toastrService.show(\r\n      body,\r\n      `Operacion realizada con exito`,\r\n      config)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Ingrese los datos del cliente</nb-card-header>\r\n  <nb-card-body>\r\n\r\n    <form [formGroup]=\"form\">\r\n      <div class=\"form-control-group\">\r\n        <input nbInput placeholder=\"Nombres\" formControlName=\"name\" required>\r\n    </div>\r\n    <div class=\"form-control-group\">\r\n      <input nbInput placeholder=\"Apellidos\" formControlName=\"lastname\" required>\r\n  </div>\r\n  <div class=\"form-control-group\">\r\n    <input type=\"number\" nbInput placeholder=\"Edad\" formControlName=\"age\" required>\r\n</div>\r\n<div class=\"form-control-group\">\r\n  <input type=\"number\" nbInput placeholder=\"CUI\" formControlName=\"cui\" required>\r\n</div>\r\n<div class=\"form-control-group\">\r\n  <input type=\"number\" nbInput placeholder=\"NIT\" formControlName=\"nit\" required>\r\n</div>\r\n<div class=\"form-control-group\">\r\n  <input nbInput placeholder=\"Direccion\" formControlName=\"address\" required>\r\n</div>\r\n</form>\r\n</nb-card-body>\r\n  <nb-card-footer>\r\n    <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Cancelar</button>\r\n    <button nbButton status=\"success\" (click)=\"submit()\">Registrar</button>\r\n  </nb-card-footer>\r\n</nb-card>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-deliver-button',\r\n  templateUrl: './deliver-button.component.html',\r\n  styleUrls: ['./deliver-button.component.scss']\r\n})\r\nexport class DeliverButtonComponent implements OnInit {\r\n\r\n  @Input() rowData: any;\r\n  @Output() click:EventEmitter<any> = new EventEmitter();\r\n  constructor() { }\r\n\r\n  onClick(){\r\n    this.click.emit('hola mundo');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<button (click)=\"onClick()\">{{rowData}}</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { CustomServerDataSource } from '../../others/models/CustomServerDataSource';\r\nimport { Package } from '../../others/models/Package';\r\nimport { RecepService } from '../../others/services/recep.service';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-deliver-package',\r\n  templateUrl: './deliver-package.component.html',\r\n  styleUrls: ['./deliver-package.component.scss']\r\n})\r\nexport class DeliverPackageComponent implements OnInit {\r\n\r\n  notification : NotificationsComponent;\r\n  source: CustomServerDataSource;\r\n  showPerPage = 10;\r\n  pack: Package;\r\n\r\n  settings = {\r\n    mode: 'external', \r\n    noDataMessage: 'No hay paquetes en destino actualmente.',\r\n    pager:{\r\n      display: true,\r\n      perPage: this.showPerPage,\r\n    },\r\n    actions: {\r\n      columnTitle:'Entregar',\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n      custom: [\r\n        { name: 'removeCheckpoint', title: '<i class=\"nb-checkmark\"></i>' }\r\n      ],\r\n      position: 'left'\r\n    },\r\n    columns: {\r\n      invoice: {\r\n        title: 'No. Factura',\r\n        type: 'number',\r\n        valuePrepareFunction: (invoice) => {\r\n          return `${invoice.id}`;\r\n        }\r\n      },\r\n      description: {\r\n        title: 'Descripcion',\r\n        type: 'number'\r\n      },\r\n    }\r\n  };\r\n\r\n\r\n  constructor(private recepService: RecepService, private toastrService: NbToastrService) {\r\n    this.source = recepService.getAllPackagesAtDestinationPaginated();\r\n  }\r\n\r\n\r\n\r\n  deliverPackage(event): void{\r\n    if(window.confirm('¿El paquete ha sido entregado?')){\r\n      this.pack = event.data;\r\n      this.pack.retired = true;\r\n      this.recepService.editRetiredStatePackage(this.pack).subscribe(data => {\r\n        this.notification.showToast(1, 'Entregado', `Paquete marcado como entregado con exito`, 2500);\r\n        this.source.remove(event.data['id'])\r\n      })\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    <h2>Listado de Paquetes  en destino.</h2>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (custom)=\"deliverPackage($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component, ComponentRef, OnInit } from '@angular/core';\r\nimport { NbDialogService, NbIconLibraries, NbToastrService, NbWindowComponent } from '@nebular/theme';\r\nimport { Client } from '../../others/models/Client';\r\nimport { Destination } from '../../others/models/destination';\r\nimport { Package } from '../../others/models/Package';\r\nimport { Route } from '../../others/models/Route';\r\nimport { RecepService } from '../../others/services/recep.service';\r\nimport { CreateClientComponent } from '../create-client/create-client.component';\r\nimport { NbWindowService } from '@nebular/theme';\r\nimport { InvoiceComponent } from '../invoice/invoice.component';\r\nimport * as moment from 'moment'\r\nimport { Invoice } from '../../others/models/Invoice';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\n\r\n@Component({\r\n  selector: 'ngx-enter-package',\r\n  templateUrl: './enter-package.component.html',\r\n  styleUrls: ['./enter-package.component.scss']\r\n})\r\nexport class EnterPackageComponent implements OnInit {\r\n\r\n  evaIcons = [];\r\n\r\n  packages: Package[] =[];\r\n  destinys: Destination[] = [];\r\n  routes: Route[] = [];\r\n\r\n  destinySelected: number[] = [];\r\n  feeByDestiny: number[] = [];\r\n  routeSelected: number[] = [];\r\n  unitTotal: number[] = [];\r\n  priority: boolean[] = [];\r\n\r\n  notification: NotificationsComponent;\r\n\r\n  actualDate: any;\r\n  generalTotal: number = 0;\r\n  invoice: Invoice = { id:null, nitClient: null, subTotal: null, total: null, dateEmit: null, nit: null, myPackages: null};\r\n\r\n  client: Client;\r\n  name: string; lastname: string; address: string;\r\n  age: number; CUI: number; NIT: number;\r\n  nitParameter: number;\r\n\r\n  constructor(iconsLibrary: NbIconLibraries, private recepService: RecepService, private dialogService: NbDialogService, private windowService: NbWindowService, private toastrService: NbToastrService) {\r\n    this.evaIcons = Array.from(iconsLibrary.getPack('eva').icons.keys())\r\n      .filter(icon => icon.indexOf('outline') === -1);\r\n\r\n    iconsLibrary.registerFontPack('fa', { packClass: 'fa', iconClassPrefix: 'fa' });\r\n    iconsLibrary.registerFontPack('far', { packClass: 'far', iconClassPrefix: 'fa' });\r\n    iconsLibrary.registerFontPack('ion', { iconClassPrefix: 'ion' });\r\n    this.findDestinys();\r\n    this.actualDate = moment(new Date()).format('YYYY-MM-DD');\r\n  }\r\n\r\n  icons = {\r\n    ionicons: [\r\n      'search'\r\n    ]\r\n  }\r\n\r\n  //listado de destinos inscritos\r\n  findDestinys(){\r\n    this.recepService.getAllDestinys().subscribe(response => {\r\n      this.destinys = response;\r\n    })\r\n  }\r\n\r\n  //Busqueda de cliente por NIT\r\n  searchClient(){\r\n    this.client = null;\r\n    this.recepService.getClient(this.nitParameter).subscribe(result => {\r\n      console.log(this.nitParameter+' asfasdfsdfa');\r\n      this.client = result;\r\n      console.log(this.client)\r\n      if(this.client != null){\r\n        this.name = this.client.name;\r\n        this.lastname = this.client.lastname;\r\n        this.age = this.client.age;\r\n        this.CUI = this.client.cui;\r\n        this.NIT = this.client.nit;\r\n        this.address = this.client.address;\r\n      } else {\r\n        this.notification.showToast(4, 'Not Found', `El cliente con el NIT: ${this.nitParameter} no existe`, 2500);\r\n        this.openModalClient();\r\n        console.log('no existe el cleinte')\r\n      }\r\n  },\r\n  (error) => {\r\n    console.log(error)\r\n    this.notification.showToast(4, 'Not Found', `El cliente con el NIT: ${this.nitParameter} no existe`, 2500);\r\n    this.cleanData();\r\n    this.openModalClient();\r\n  })\r\n  }\r\n\r\n  //Modal para la creacion de un cliente\r\n  openModalClient(){\r\n    this.dialogService.open(CreateClientComponent)\r\n      .onClose.subscribe(response => {\r\n        if(response != undefined){\r\n          this.name = response.name;\r\n          this.lastname = response.lastname;\r\n          this.age = response.age;\r\n          this.CUI = response.cui;\r\n          this.NIT = response.nit;\r\n          this.address = response.address;\r\n        }\r\n      });\r\n  }\r\n\r\n  //Crea un nuevo paquete\r\n  newPackage(){\r\n    if(this.name != undefined){\r\n      if(this.name != \"\"){\r\n        const pack: Package = {} as Package;\r\n        this.packages.push(pack);\r\n        const actual = this.packages.length-1;\r\n      } else {\r\n        //Modal de advertencia que indique que se debe elegir un usuario\r\n        console.log('Antes debe asignar un cliente')\r\n        this.notification.showToast(3, 'Cuidado', `Debe elegir un usuario antes de ingresar un paquete`, 2500);\r\n      }\r\n    } else {\r\n      //Modal de advertencia que indique que se debe elegir un usuario\r\n      this.notification.showToast(3, 'Cuidado', `Debe elegir un usuario antes de ingresar un paquete`, 2500);\r\n      console.log('Antes debe asignar un cliente')\r\n    }\r\n  }\r\n\r\n  //Busca rutas segun el destino\r\n  findRoutes(event, i){\r\n    console.log(this.destinySelected[i])\r\n    this.recepService.getDestinyById(this.destinySelected[i]).subscribe( result => {\r\n      this.feeByDestiny[i] = result.fee;\r\n      console.log(this.feeByDestiny[i])\r\n      this.calculateUnitTotal(i);\r\n      this.recepService.getRouteByDestiny(this.destinySelected[i]).subscribe(response => {\r\n        this.routes = response;\r\n\r\n      })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  calculateUnitTotal(i){\r\n    if(this.packages[i] != undefined){\r\n      if(this.packages[i].weight != undefined){\r\n        if(this.destinySelected[i] != undefined){\r\n          this.packages[i].unitTotal = this.packages[i].weight * this.feeByDestiny[i];\r\n          this.calculateTotal();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //limpia la cola de paquetes\r\n  cleanPackages(){\r\n    this.packages = [];\r\n  }\r\n\r\n  //Calcula el total general de la factura\r\n  calculateTotal(){\r\n    this.generalTotal = 0;\r\n    for(let i = 0; i < this.packages.length; i++){\r\n      this.generalTotal = this.packages[i].unitTotal + this.generalTotal;\r\n    }\r\n  }\r\n\r\n  //Crea la factura para la transaccion\r\n  createInvoice(){\r\n    let aproved = true;\r\n    if(this.packages.length > 0){\r\n      for(let i = 0; i < this.packages.length; i++){\r\n        if(this.packages[i].unitTotal == undefined){\r\n          aproved = false;\r\n          break\r\n        }\r\n      }\r\n    } else {\r\n      aproved = false;\r\n    }\r\n    if(aproved){\r\n      this.invoice.nit = this.NIT;\r\n      this.invoice.subTotal = this.generalTotal;\r\n      this.invoice.total = this.generalTotal;\r\n      this.invoice.dateEmit = this.actualDate;\r\n      console.log(this.invoice)\r\n      this.recepService.createInvoice(this.invoice).subscribe(result => {\r\n        for(let i = 0; i < this.packages.length; i++){\r\n          this.packages[i].route = {\r\n            id: this.routeSelected[i]\r\n          }\r\n          this.packages[i].destination = {\r\n            id: this.destinySelected[i]\r\n          }\r\n          this.packages[i].onWay = false;\r\n          this.packages[i].atDestination = false;\r\n          this.packages[i].retired = false;\r\n          this.packages[i].noInvoice = result.id;\r\n          this.packages[i].invoice = result;\r\n\r\n          if(this.priority[i] == undefined){\r\n            this.priority[i] = false;\r\n          }\r\n          this.packages[i].priority = this.priority[i];\r\n          this.recepService.creaatePackage(this.packages[i]).subscribe(result => {\r\n            this.createQueue(result);\r\n            this.cleanData();\r\n          })\r\n        }\r\n        this.notification.showToast(1, 'Completado', `Factura realizada con exito`, 2500);\r\n     })\r\n    } else {\r\n      //Aqui debe ir un modal\r\n      this.notification.showToast(3, 'Cuidado', `Todos los paquetes deben ser llenados antes de su proceso`, 2500);\r\n      console.log('todos los paquetes deben ser llenados')\r\n    }\r\n\r\n  }\r\n\r\n  createQueue(pack: Package){\r\n    let queue = {\r\n      packages: pack,\r\n      position: 0\r\n    }\r\n    this.recepService.createQueue(queue).subscribe(response => {\r\n\r\n    })\r\n  }\r\n\r\n  cleanData(){\r\n    this.cleanPackages();\r\n    this.generalTotal = 0;\r\n    this.name = \"\"; this.lastname = \"\"; this.CUI = 0; this.NIT=0; this.address = \"\", this.age=0;\r\n    this.nitParameter = 0;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService)\r\n  }\r\n\r\n}\r\n","\r\n\r\n <div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <nb-card class=\"inline-form-card\">\r\n      <nb-card-header>Busqueda de cliente por NIT:</nb-card-header>\r\n      <nb-card-body>\r\n        <div class=\"form-inline\">\r\n          <input type=\"number\" [(ngModel)]=\"nitParameter\"  nbInput fullWidth >\r\n          <nb-icon [icon]=\"icons.ionicons[0]\" pack=\"ion\"></nb-icon>\r\n          <!-- <div *ngIf=\"searchInput != ''\">\r\n            <a *ngFor=\"client of clients; let i=index\" (click)=\"functionClick(i)\">{{client.NIT}}</a>\r\n\r\n          </div> -->\r\n          <button type=\"submit\" nbButton status=\"primary\" (click)=\"searchClient()\">Buscar</button>\r\n          <button type=\"submit\" nbButton status=\"success\" (click)=\"openModalClient()\">Nuevo cliente</button>\r\n        </div>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <nb-card>\r\n      <nb-card-header>Datos del cliente</nb-card-header>\r\n      <nb-card-body>\r\n        <div class=\"form-inline\">\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Nombres</label>\r\n\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"text\" nbInput fullWidth [ngModel]=\"name\" readonly>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">NIT</label>\r\n\r\n              <div class=\"col-sm-9\">\r\n                <input type=\"text\" nbInput fullWidth [ngModel]=\"NIT\" readonly>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-inline\">\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Apellidos</label>\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"text\" nbInput fullWidth [ngModel]=\"lastname\" readonly>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">CUI</label>\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"text\" nbInput fullWidth [ngModel]=\"CUI\" readonly>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-inline\">\r\n          <div class=\"form-group row\">\r\n            <label for=\"address1\" class=\"label col-sm-3 col-form-label\">Direccion</label>\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"text\" nbInput fullWidth [ngModel]=\"address\" readonly>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label for=\"age1\" class=\"label col-sm-3 col-form-label\">Edad</label>\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"text\" nbInput fullWidth [ngModel]=\"age\" readonly>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngFor=\"let pack of packages index as i\">\r\n  <div class=\"col-md-12\">\r\n    <nb-card>\r\n      <nb-card-header>Informacion de paquete No. {{i+1}}</nb-card-header>\r\n      <nb-card-body>\r\n        <div class=\"form-inline\">\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Peso (Lb)</label>\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"number\" nbInput fullWidth (keyup)=\"calculateUnitTotal(i)\"  [(ngModel)]=\"packages[i].weight\">\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Total</label>\r\n\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"text\" nbInput fullWidth [(ngModel)]=\"packages[i].unitTotal\" readonly>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-inline\">\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Descripcion</label>\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"text\" nbInput fullWidth  [(ngModel)]=\"packages[i].description\">\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Rutas</label>\r\n              <div class=\"col-sm-9\">\r\n                <nb-select status=\"primary\" [selected]=\"1\" [(ngModel)]=\"routeSelected[i]\" >\r\n                  <nb-option *ngFor=\"let route of routes\" [value]=\"route.id\" >{{route.name}}</nb-option>\r\n                </nb-select>\r\n                <!-- <input type=\"text\" nbInput fullWidth  readonly> -->\r\n\r\n              </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Destino</label>\r\n              <div class=\"col-sm-9\">\r\n                <nb-select status=\"primary\" [selected]=\"1\" [(ngModel)]=\"destinySelected[i]\" (ngModelChange)=\"findRoutes($event, i)\" >\r\n                  <nb-option *ngFor=\"let dest of destinys\" [value]=\"dest.id\" >{{dest.name}}</nb-option>\r\n                </nb-select>\r\n              </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-sm-3 col-sm-9\">\r\n              <nb-checkbox [(ngModel)]=\"priority[i]\">Dar prioridad</nb-checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <div class=\"form-inline\">\r\n      <button type=\"submit\" nbButton status=\"success\" (click)=\"newPackage()\">Nuevo paquete</button>\r\n      <button type=\"submit\" nbButton status=\"warning\" (click)=\"cleanPackages()\">Limpiar cola</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <nb-card>\r\n      <nb-card-header>Resumen de la factura</nb-card-header>\r\n      <nb-card-body>\r\n        <div class=\"form-inline\">\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Total de paquetes:</label>\r\n\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"text\" nbInput fullWidth [value]=\"packages.length\" readonly>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Total General:</label>\r\n\r\n              <div class=\"col-sm-9\">\r\n                <input type=\"text\" nbInput fullWidth [(ngModel)]=\"generalTotal\" readonly>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-inline\">\r\n          <div class=\"form-group row\">\r\n            <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Fecha de emision:</label>\r\n            <div class=\"col-sm-9\">\r\n              <input type=\"text\" nbInput fullWidth [(ngModel)]=\"actualDate\" readonly>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <div class=\"col-sm-9\">\r\n              <button type=\"submit\" nbButton status=\"success\" (click)=\"createInvoice()\">Confirmar transaccion</button>\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NbWindowRef } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-invoice',\r\n  templateUrl: './invoice.component.html',\r\n  styleUrls: ['./invoice.component.scss']\r\n})\r\nexport class InvoiceComponent implements OnInit {\r\n\r\n  //@Input() totalProducts: number[];\r\n  //@Input() idClient: number;\r\n  @Input() nameClient: string;\r\n  //@Input() lastnameClient: string;\r\n\r\n  total: number = 0;\r\n\r\n  constructor(public windowRef: NbWindowRef) {\r\n//    this.calculateTotal();\r\n  }\r\n\r\n  // calculateTotal(){\r\n  //   for(let i = 0; i < this.totalProducts.length; i++){\r\n  //     this.total = this.total + this.totalProducts[i];\r\n  //   }\r\n  // }\r\n\r\n  close(){\r\n    this.windowRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","<form class=\"form\">\r\n  <label for=\"subject\"><b>Datos:</b> {{nameClient}} </label><br>\r\n  <label for=\"subject\"><b>No. Paquetes:</b> </label><br>\r\n  <!-- <input nbInput id=\"subject\" type=\"text\"> -->\r\n  <label for=\"subject\"><b>Total:</b> {{total}}</label><br>\r\n  <!-- <input nbInput id=\"subject\" type=\"text\"> -->\r\n  <button type=\"submit\" nbButton status=\"info\" >Confirmar compra</button>\r\n\r\n</form>\r\n","import { NbMenuItem } from '@nebular/theme';\r\n\r\nexport const RECEPTIONIST_MENU_ITEMS: NbMenuItem[] = [\r\n    {\r\n        title: 'Clientes',\r\n        icon: 'person-outline',\r\n        children:[\r\n            {\r\n                title: 'Listado de Clientes',\r\n                link: '/views/users/recep/client-list'\r\n            }\r\n        ]\r\n    },\r\n    \r\n    {\r\n        title: 'Paquetes',\r\n        icon: 'cube-outline',\r\n        children:[\r\n            {\r\n                title: 'Ingresar Paquete',\r\n                link: '/views/users/recep/enter-package'\r\n            },\r\n            {\r\n                title: 'Buscar Paquete en Ruta',\r\n                link: '/views/users/recep/trace-package'\r\n            },\r\n            {\r\n                title: 'Paquetes en Destino',\r\n                link: '/views/users/recep/'\r\n            }\r\n        ] \r\n    }\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { TemperatureHumidityService } from '../../../../@core/mock/temperature-humidity.service';\r\nimport { RecepService } from '../../others/services/recep.service';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\n\r\n@Component({\r\n  selector: 'ngx-package-info',\r\n  templateUrl: './package-info.component.html',\r\n  styleUrls: ['./package-info.component.scss']\r\n})\r\n\r\nexport class PackageInfoComponent implements OnInit {\r\n\r\n  description: string;\r\n  currentCheckpoint: string;\r\n  timeOnRoute: string;\r\n  routeName: string\r\n  total: number;\r\n  weight: number;\r\n\r\n  notification : NotificationsComponent;\r\n\r\n  constructor (\r\n    private receptionistService : RecepService, \r\n    private router : Router,\r\n    private route: ActivatedRoute,\r\n    private toastrService: NbToastrService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.notification = new NotificationsComponent(this.toastrService);\r\n    let id = Number(this.route.snapshot.paramMap.get('id'));\r\n    this.setPackageInfo(id);\r\n  }\r\n\r\n  private setPackageInfo(id: number){\r\n    this.receptionistService.getPackageInfo(id).subscribe({\r\n      next:(res) => {\r\n        console.log(res)\r\n        this.description = res.packages.description;\r\n        this.currentCheckpoint = res.checkpoint.description;\r\n        this.timeOnRoute = res.timeOnCheckpoint;\r\n        this.routeName = res.checkpoint.route.name;\r\n        this.total = res.packages.invoice.total;\r\n        this.weight = res.packages.weight;\r\n      }, \r\n      error:(err) => {\r\n        this.notification.showToast(3,'Error', 'Hubo un error obteniendo la informacion del paquete.', 3000);\r\n      }\r\n    })\r\n  }\r\n   \r\n  public onClose() {\r\n    this.router.navigate(['views', 'recep' , 'trace-package']);\r\n  }\r\n}\r\n","<div class=\"center\">\r\n    <div class=\"col-xxxl-9 col-xxl-8 col-lg-7 col-md-6\">\r\n      <nb-card>\r\n        \r\n        <!-- Titulo del formulario para la creacion de Destinos  -->\r\n        <nb-card-header>\r\n          <nb-icon icon=\"alert-circle-outline\" pack=\"eva\"></nb-icon>\r\n          <nb-icon icon=\"cube-outline\" pack=\"eva\"></nb-icon>\r\n          Informacion del Paquete\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n          \r\n            \r\n            <!-- Descripcion -->\r\n            <div class=\"form-group\">\r\n                <label class=\"label\">Nombre: &nbsp; {{description}}</label> \r\n            </div>\r\n            \r\n            <!-- Ruta Actual -->\r\n            <div class=\"form-group\">\r\n               <label class=\"label\">Ruta: &nbsp; {{routeName}}</label>  \r\n            </div>\r\n\r\n            <!-- Punto de Control Actual -->\r\n            <div class=\"form-group\">\r\n                <label class=\"label\">Punto de Control Actual: &nbsp; {{currentCheckpoint}}</label> \r\n            </div>\r\n\r\n            <!-- Tiempo en Ruta -->\r\n            <div class=\"form-group\">\r\n                <label class=\"label\">Tiempo en Punto de Control: &nbsp; {{timeOnRoute}}</label> \r\n            </div>\r\n\r\n             <!-- Peso -->\r\n             <div class=\"form-group\">\r\n                <label class=\"label\">Peso: &nbsp; {{weight}}lb</label> \r\n             </div>\r\n\r\n           <!-- Total -->\r\n           <div class=\"form-group\">\r\n              <label class=\"label\">Total Cancelado: &nbsp; Q{{total}}</label> \r\n           </div>\r\n\r\n            <div class=\"row\">\r\n                <button nbButton status=\"primary\" (click)=\"onClose()\" hero>Regresar</button>&nbsp;&nbsp;\r\n            </div>\r\n\r\n            \r\n        </nb-card-body>\r\n      </nb-card>\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RecepGuard } from '../../auth/others/guards/recep.guard';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport { DeliverPackageComponent } from './deliver-package/deliver-package.component';\r\nimport { EnterPackageComponent } from './enter-package/enter-package.component';\r\nimport { PackageInfoComponent } from './package-info/package-info.component';\r\nimport { RecepComponent } from './recep.component';\r\nimport { TracePackageComponent } from './trace-package/trace-package.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RecepComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DeliverPackageComponent\r\n      },\r\n      {\r\n        path: 'client-list',\r\n        component: ClientListComponent,\r\n        canActivate: [RecepGuard]\r\n      },\r\n      {\r\n        path: 'enter-package',\r\n        component: EnterPackageComponent,\r\n        canActivate: [RecepGuard]\r\n      },\r\n      {\r\n        path: 'trace-package',\r\n        component: TracePackageComponent,\r\n        canActivate: [RecepGuard]\r\n      },\r\n      {\r\n        path: 'package-info/:id',\r\n        component: PackageInfoComponent,\r\n        canActivate: [RecepGuard]\r\n      },\r\n      {\r\n        path: 'deliver-package',\r\n        component: DeliverPackageComponent,\r\n        canActivate: [RecepGuard]\r\n      }\r\n      \r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RecepRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RECEPTIONIST_MENU_ITEMS } from './menu';\r\n\r\n@Component({\r\n  selector: 'ngx-recep',\r\n  templateUrl: './recep.component.html',\r\n  styleUrls: ['./recep.component.scss']\r\n})\r\nexport class RecepComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  menu = RECEPTIONIST_MENU_ITEMS;\r\n\r\n}\r\n","<ngx-one-column-layout>\r\n  <nb-menu [items]=\"menu\"></nb-menu> \r\n  <ngx-deliver-package></ngx-deliver-package>\r\n  <router-outlet></router-outlet>\r\n</ngx-one-column-layout>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RecepRoutingModule } from './recep-routing.module';\r\nimport { RecepComponent } from './recep.component';\r\nimport { ThemeModule } from '../../../@theme/theme.module';\r\nimport { ClientListComponent } from './client-list/client-list.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport {\r\n  NbButtonModule,\r\n  NbLayoutModule,\r\n  NbCardModule,\r\n  NbProgressBarModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbIconModule,\r\n  NbSelectModule,\r\n  NbListModule,\r\n  NbInputModule,\r\n  NbCheckboxModule,\r\n  NbMenuModule,\r\n  NbActionsModule,\r\n  NbSearchModule,\r\n  NbPopoverModule,\r\n  NbSidebarModule,\r\n  NbRadioModule\r\n} from '@nebular/theme';\r\nimport { CreateClientComponent } from './create-client/create-client.component';\r\nimport { EnterPackageComponent } from './enter-package/enter-package.component';\r\nimport { InvoiceComponent } from './invoice/invoice.component';\r\nimport { DeliverPackageComponent } from './deliver-package/deliver-package.component';\r\nimport { DeliverButtonComponent } from './deliver-package/deliver-button/deliver-button.component';\r\nimport { TracePackageComponent } from './trace-package/trace-package.component';\r\nimport { PackageInfoComponent } from './package-info/package-info.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecepComponent,\r\n    ClientListComponent,\r\n    CreateClientComponent,\r\n    EnterPackageComponent,\r\n    InvoiceComponent,\r\n    DeliverPackageComponent,\r\n    DeliverButtonComponent,\r\n    TracePackageComponent,\r\n    PackageInfoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RecepRoutingModule,\r\n    NbMenuModule,\r\n    ThemeModule,\r\n    NbButtonModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbProgressBarModule,\r\n    NbTabsetModule,\r\n    NbUserModule,\r\n    NbIconModule,\r\n    NbSelectModule,\r\n    NbListModule,\r\n    NbInputModule,\r\n    NbCheckboxModule,\r\n    NbMenuModule,\r\n    NbActionsModule,\r\n    NbSearchModule,\r\n    NbPopoverModule,\r\n    NbSidebarModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2SmartTableModule,\r\n    NbRadioModule\r\n  ]\r\n})\r\nexport class RecepModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { disableDebugTools } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { NbSearchService, NbToastrService } from '@nebular/theme';\r\nimport { CustomServerDataSource } from '../../others/models/CustomServerDataSource';\r\nimport { Package } from '../../others/models/Package';\r\nimport { RecepService } from '../../others/services/recep.service';\r\nimport { NotificationsComponent } from '../../others/source/notifications/notifications.component';\r\n\r\n@Component({\r\n  selector: 'ngx-trace-package',\r\n  templateUrl: './trace-package.component.html',\r\n  styleUrls: ['./trace-package.component.scss']\r\n})\r\n\r\nexport class TracePackageComponent implements OnInit {\r\n\r\n  notification : NotificationsComponent;\r\n  source: CustomServerDataSource;\r\n  showPerPage = 10;\r\n  pack: Package;\r\n\r\n  settings = {\r\n    hideSubHeader: disableDebugTools,\r\n    mode: 'external', \r\n    noDataMessage: 'No se encontraron paquetes en ruta.',\r\n    pager:{\r\n      display: true,\r\n      perPage: this.showPerPage,\r\n    },\r\n    actions: {\r\n      columnTitle:'Localizar',\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n      custom: [\r\n        { name: 'search', title: '<i class=\"nb-location\"></i>' }\r\n      ],\r\n      position: 'left'\r\n    },\r\n    columns: {\r\n      invoice: {\r\n        title: 'No. Factura',\r\n        type: 'number',\r\n        valuePrepareFunction: (invoice) => {\r\n          return `${invoice.id}`;\r\n        }\r\n      },\r\n      description: {\r\n        title: 'Descripcion',\r\n        type: 'number'\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private receptionistService: RecepService,\r\n    private router: Router,\r\n    private searchService: NbSearchService,\r\n    private toastrService: NbToastrService\r\n  ) {\r\n    this.searchService.onSearchSubmit().subscribe((data: any) => {\r\n      this.receptionistService.getPackageByInvoiceId(data.term).subscribe({\r\n        next:(res) => {\r\n          this.source = res;\r\n        }, \r\n        error:(err) => {\r\n          this.notification.showToast(3,'Error', 'Hubo un error realizando la busqueda.', 3000);\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.source = this.receptionistService.getAllPackagesOnRoutePaginated();\r\n  }\r\n\r\n\r\n  public tracePackage(event): void{\r\n    this.router.navigate(['views', 'recep', 'package-info', event.data['id']]);  \r\n  }\r\n\r\n}","<nb-card>\r\n    <nb-card-header>\r\n      <h2>Listado de Paquetes en Ruta</h2>\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n      <nb-search placeholder=\"No. Factura\" type=\"column-curtain\" tag=\"column-curtain\" hint=\"Presione enter para buscar el paquete.\"></nb-search>\r\n      Buscar paquete por numero de factura\r\n      <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (custom)=\"tracePackage($event)\">\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n</nb-card>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminGuard } from '../auth/others/guards/admin.guard';\r\nimport { OperatorGuard } from '../auth/others/guards/operator.guard';\r\nimport { RecepGuard } from '../auth/others/guards/recep.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'admin',\r\n        loadChildren: () => import('./admin/admin.module')\r\n          .then(m => m.AdminModule),\r\n        canActivate: [AdminGuard]\r\n      },\r\n      {\r\n        path: 'operator',\r\n        loadChildren: () => import('./operator/operator.module')\r\n          .then(m => m.OperatorModule),\r\n        canActivate: [OperatorGuard]\r\n      },\r\n      {\r\n        path: 'recep',\r\n        loadChildren: () => import('./recep/recep.module')\r\n          .then(m => m.RecepModule),\r\n          canActivate: [RecepGuard]\r\n      },\r\n      {\r\n        path: 'general',\r\n        loadChildren: () => import('./general/general.module')\r\n          .then(m => m.GeneralModule),\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { OperatorModule } from './operator/operator.module';\r\nimport { RecepModule } from './recep/recep.module';\r\nimport { NbMenuModule } from '@nebular/theme';\r\nimport { NotificationsComponent } from './others/source/notifications/notifications.component';\nimport { GeneralModule } from './general/general.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NotificationsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    AdminModule,\r\n    OperatorModule,\r\n    RecepModule,\r\n    NbMenuModule,\r\n    ThemeModule,\r\n    GeneralModule,\r\n  ]\r\n})\r\nexport class UsersModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ViewsComponent }  from './views.component'\r\nimport { AuthComponent } from './auth/auth.component'\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: ViewsComponent,\r\n    children: [\r\n      {\r\n        path: 'auth',\r\n        loadChildren: () => import('./auth/auth.module')\r\n          .then(m => m.AuthModule)\r\n      },\r\n      {\r\n        path: 'users',\r\n        loadChildren: () => import('./users/users.module')\r\n          .then(m => m.UsersModule)\r\n      },\r\n      {\r\n        path: 'reports',\r\n        loadChildren: () => import('./reports/reports.module')\r\n          .then(m => m.ReportsModule)\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: 'auth/login',\r\n        pathMatch: 'full'\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ViewsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-views',\r\n  templateUrl: './views.component.html',\r\n  styleUrls: ['./views.component.scss']\r\n})\r\nexport class ViewsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { ViewsRoutingModule } from './views-routing.module';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { ViewsComponent } from './views.component';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { NbMenuModule } from '@nebular/theme';\r\nimport { UsersModule } from './users/users.module';\r\nimport { ReportsModule } from './reports/reports.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ViewsRoutingModule,\r\n    AuthModule,\r\n    ThemeModule,\r\n    ReactiveFormsModule,\r\n    UsersModule,\r\n    ReportsModule,\r\n    NbMenuModule,\r\n  ],\r\n  declarations: [\r\n    ViewsComponent,\r\n  ]\r\n})\r\nexport class ViewsModule { }\r\n"],"sourceRoot":"webpack:///"}